// Code generated by make.go. DO NOT EDIT.

package efd

import "github.com/mmcloughlin/ec3/efd/op3/ast"

var shapes = []*Shape{
	{
		ID:              "g12o/edwards",
		Tag:             "edwards",
		Class:           "g12o",
		Name:            "binary Edwards curves",
		Parameters:      []string{"d1", "d2"},
		Coordinates:     []string{"x", "y"},
		A:               [7]string{"= 1", "= 1", "= d1^2+d2", "= 0", "= 0", "", "= d1^4(d1^4+d1^2+d2^2)"},
		Satisfying:      []string{"d1(x+y)+d2(x^2+y^2) = (x+x^2)(y+y^2)"},
		Addition:        []string{"x = (d1(x1+x2)+d2(x1+y1)(x2+y2)+(x1+x1^2)(x2(y1+y2+1)+y1 y2)) / (d1+(x1+x1^2)(x2+y2))", "y = (d1(y1+y2)+d2(x1+y1)(x2+y2)+(y1+y1^2)(y2(x1+x2+1)+x1 x2)) / (d1+(y1+y1^2)(x2+y2))"},
		Doubling:        []string{"x = (d1(x1+x1)+d2(x1+y1)(x1+y1)+(x1+x1^2)(x1(y1+y1+1)+y1 y1)) / (d1+(x1+x1^2)(x1+y1))", "y = (d1(y1+y1)+d2(x1+y1)(x1+y1)+(y1+y1^2)(y1(x1+x1+1)+x1 x1)) / (d1+(y1+y1^2)(x1+y1))"},
		Negation:        []string{"x = y1", "y = x1"},
		Neutral:         []string(nil),
		FromWeierstrass: []string{"x = d1(u+d1^2+d1+d2)/(u+v+(d1^2+d1)(d1^2+d1+d2))", "y = d1(u+d1^2+d1+d2)/(v+(d1^2+d1)(d1^2+d1+d2))"},
		ToWeierstrass:   []string{"u = d1(d1^2+d1+d2)(x+y)/(x y+d1(x+y))", "v = d1(d1^2+d1+d2)(x/(x y+d1(x+y))+d1+1)"},
	},
	{
		ID:              "g12o/hessian",
		Tag:             "hessian",
		Class:           "g12o",
		Name:            "Hessian curves",
		Parameters:      []string{"d"},
		Coordinates:     []string{"x", "y"},
		A:               [7]string{"= 1", "= d", "= 0", "= 0", "= d", "", "= d^3+1"},
		Satisfying:      []string{"x^3+y^3+1=3 d x y"},
		Addition:        []string{"x = (y1^2 x2-y2^2 x1)/(x2 y2-x1 y1)", "y = (x1^2 y2-x2^2 y1)/(x2 y2-x1 y1)"},
		Doubling:        []string{"x = y1(1-x1^3)/(x1^3-y1^3)", "y = x1(y1^3-1)/(x1^3-y1^3)"},
		Negation:        []string{"x = y1", "y = x1"},
		Neutral:         []string(nil),
		FromWeierstrass: []string{"x = (1+v+u d)/(u+d^2)", "y = v/(u+d^2)"},
		ToWeierstrass:   []string{"u = x^2+x y+y^2+d(x+y)", "v = (x^2+x y+y^2+d(x+y)+d^2)y"},
	},
	{
		ID:              "g12o/shortw",
		Tag:             "shortw",
		Class:           "g12o",
		Name:            "short Weierstrass curves",
		Parameters:      []string{"a2", "a6"},
		Coordinates:     []string{"x", "y"},
		A:               [7]string{"= 1", "= 1", "= a2", "= 0", "= 0", "", "= a6"},
		Satisfying:      []string{"y^2 + x y = x^3 + a2 x^2 + a6"},
		Addition:        []string{"x = ((y1+y2)/(x1+x2))^2+((y1+y2)/(x1+x2))+x1+x2+a2", "y = ((y1+y2)/(x1+x2))^3+(x2+a2+1)*((y1+y2)/(x1+x2))+x1+x2+a2+y1"},
		Doubling:        []string{"x = (x1+y1/x1)^2 + (x1+y1/x1) + a2", "y = (x1+y1/x1)^3 + (x1 + a2 + 1)*(x1+y1/x1) + a2 + y1"},
		Negation:        []string{"x = x1", "y = x1 + y1"},
		Neutral:         []string(nil),
		FromWeierstrass: []string{"x = weierx", "y = weiery"},
		ToWeierstrass:   []string{"weierx = x", "weiery = y"},
	},
	{
		ID:              "g1p/2dik",
		Tag:             "2dik",
		Class:           "g1p",
		Name:            "doubling-oriented Doche--Icart--Kohel curves",
		Parameters:      []string{"a"},
		Coordinates:     []string{"x", "y"},
		A:               [7]string{"= 1", "= 0", "= a", "= 0", "= 16 a", "", "= 0"},
		Satisfying:      []string{"y^2 = x^3 + a x^2 + 16 a x"},
		Addition:        []string{"x = (-x1^3 + (x2 - a) x1^2 + (x2^2 + 2 a x2) x1 + (y1^2 - 2 y2 y1 + (-x2^3 - a x2^2 + y2^2)))/(x1^2 - 2 x2 x1 + x2^2)", "y = ((-y1 + 2 y2) x1^3 + (-a y1 + (-3 y2 x2 + a y2)) x1^2 + ((3 x2^2 + 2 a x2) y1 - 2 a y2 x2) x1 + (y1^3 - 3 y2 y1^2 + (-2 x2^3 - a x2^2 + 3 y2^2) y1 + (y2 x2^3 + a y2 x2^2 - y2^3)))/(-x1^3 + 3 x2 x1^2 - 3 x2^2 x1 + x2^3)"},
		Doubling:        []string{"x = 1/(4 y1^2) x1^4 - 8 a/y1^2 x1^2 + 64 a^2/y1^2", "y = 1/(8 y1^3) x1^6 + ((-a^2 + 40 a)/(4 y1^3)) x1^4 + ((a y1^2 + (16 a^3 - 640 a^2))/(4 y1^3)) x1^2 + ((-4 a^2 y1^2 - 512 a^3)/y1^3)"},
		Negation:        []string{"x = x1", "y = -y1"},
		Neutral:         []string(nil),
		FromWeierstrass: []string{"x = u", "y = v"},
		ToWeierstrass:   []string{"u = x", "v = y"},
	},
	{
		ID:              "g1p/3dik",
		Tag:             "3dik",
		Class:           "g1p",
		Name:            "tripling-oriented Doche--Icart--Kohel curves",
		Parameters:      []string{"a"},
		Coordinates:     []string{"x", "y"},
		A:               [7]string{"= 1", "= 0", "= 3 a", "= 0", "= 6 a", "", "= 3 a"},
		Satisfying:      []string{"y^2 = x^3 + 3 a(x+1)^2"},
		Addition:        []string{"x = (-x1^3 + (x2 - 3 a) x1^2 + (x2^2 + 6 a x2) x1 + (y1^2 - 2 y2 y1 + (-x2^3 - 3 a x2^2 + y2^2)))/(x1^2 - 2 x2 x1 + x2^2)", "y = ((-y1 + 2 y2) x1^3 + (-3 a y1 + (-3 y2 x2 + 3 a y2)) x1^2 + ((3 x2^2 + 6 a x2) y1 - 6 a y2 x2) x1 + (y1^3 - 3 y2 y1^2 + (-2 x2^3 - 3 a x2^2 + 3 y2^2) y1 + (y2 x2^3 + 3 a y2 x2^2 - y2^3)))/(-x1^3 + 3 x2 x1^2 - 3 x2^2 x1 + x2^3)"},
		Doubling:        []string{"x = 9/(4 y1^2) x1^4 + 9/y1^2 a x1^3 + (9/y1^2 a^2 + 9/y1^2 a) x1^2 + (18/y1^2 a^2 - 2) x1 + (9/y1^2 a^2 - 3 a)", "y = -27/(8 y1^3) x1^6 - 81/(4 y1^3) a x1^5 + (-81/(2 y1^3) a^2 - 81/(4 y1^3) a) x1^4 + (-27/y1^3 a^3 - 81/y1^3 a^2 + 9/(2 y1)) x1^3 + (-81/y1^3 a^3 - 81/(2 y1^3) a^2 + 27/(2 y1) a) x1^2 + (-81/y1^3 a^3 + 9/y1 a^2 + 9/y1 a) x1 + (-27/y1^3 a^3 + 9/y1 a^2 - y1)"},
		Negation:        []string{"x = x1", "y = -y1"},
		Neutral:         []string(nil),
		FromWeierstrass: []string{"x = u", "y = v"},
		ToWeierstrass:   []string{"u = x", "v = y"},
	},
	{
		ID:              "g1p/edwards",
		Tag:             "edwards",
		Class:           "g1p",
		Name:            "Edwards curves",
		Parameters:      []string{"c", "d"},
		Coordinates:     []string{"x", "y"},
		A:               [7]string{"= 1/(1-d c^4)", "= 0", "= 4/(1-d c^4)-2", "= 0", "= 1", "", "= 0"},
		Satisfying:      []string{"x^2+y^2 = c^2(1+d x^2 y^2)"},
		Addition:        []string{"x = (x1 y2+y1 x2)/(c(1+d x1 x2 y1 y2))", "y = (y1 y2-x1 x2)/(c(1-d x1 x2 y1 y2))"},
		Doubling:        []string{"x = (x1 y1+y1 x1)/(c(1+d x1 x1 y1 y1))", "y = (y1 y1-x1 x1)/(c(1-d x1 x1 y1 y1))"},
		Negation:        []string{"x = -x1", "y = y1"},
		Neutral:         []string{"x = 0", "y = c"},
		FromWeierstrass: []string{"x = 2 c u/v", "y = c(u-1)/(u+1)"},
		ToWeierstrass:   []string{"u = (c+y)/(c-y)", "v = 2 c (c+y)/(x(c-y))"},
	},
	{
		ID:              "g1p/hessian",
		Tag:             "hessian",
		Class:           "g1p",
		Name:            "Hessian curves",
		Parameters:      []string{"d"},
		Coordinates:     []string{"x", "y"},
		A:               [7]string{"= 1", "= 0", "= 0", "= 0", "= -27 d(d^3+8)", "", "= 54(d^6-20 d^3-8)"},
		Satisfying:      []string{"x^3+y^3+1=3 d x y"},
		Addition:        []string{"x = (y1^2 x2-y2^2 x1)/(x2 y2-x1 y1)", "y = (x1^2 y2-x2^2 y1)/(x2 y2-x1 y1)"},
		Doubling:        []string{"x = y1(1-x1^3)/(x1^3-y1^3)", "y = x1(y1^3-1)/(x1^3-y1^3)"},
		Negation:        []string{"x = y1", "y = x1"},
		Neutral:         []string(nil),
		FromWeierstrass: []string{"x = (36(d^3-1)-v)/(6(u+9 d^2))-d/2", "y = (v+36(d^3-1))/(6(u+9 d^2))-d/2"},
		ToWeierstrass:   []string{"u = 12(d^3-1)/(d+x+y)-9 d^2", "v = 36(y-x)(d^3-1)/(d+x+y)"},
	},
	{
		ID:              "g1p/jintersect",
		Tag:             "jintersect",
		Class:           "g1p",
		Name:            "Jacobi intersections",
		Parameters:      []string{"a"},
		Coordinates:     []string{"s", "c", "d"},
		A:               [7]string{"= 1", "= 0", "= 2-a", "= 0", "= 1-a", "", "= 0"},
		Satisfying:      []string{"s^2+c^2=1", "a s^2+d^2=1"},
		Addition:        []string{"s = (c2 s1 d2+d1 s2 c1)/(c2^2+(d1 s2)^2)", "c = (c2 c1-d1 s2 s1 d2)/(c2^2+(d1 s2)^2)", "d = (d1 d2-a s1 c1 s2 c2)/(c2^2+(d1 s2)^2)"},
		Doubling:        []string{"s = (c1 s1 d1+d1 s1 c1)/(c1^2+(d1 s1)^2)", "c = (c1 c1-d1 s1 s1 d1)/(c1^2+(d1 s1)^2)", "d = (d1 d1-a s1 c1 s1 c1)/(c1^2+(d1 s1)^2)"},
		Negation:        []string{"s = -s1", "c = c1", "d = d1"},
		Neutral:         []string{"s = 0", "c = 1", "d = 1"},
		FromWeierstrass: []string{"s = -2 y/(((y/x)^2+a)x)", "c = 1-2/((y/x)^2+a)-2 (1-a)/(((y/x)^2+a)x)", "d = 1-2 a/((y/x)^2+a)"},
		ToWeierstrass:   []string{"x = (d-1)(1-a)/(c a-d+1-a)", "y = s(1-a)a/(c a-d+1-a)"},
	},
	{
		ID:              "g1p/jquartic",
		Tag:             "jquartic",
		Class:           "g1p",
		Name:            "Jacobi quartics",
		Parameters:      []string{"a"},
		Coordinates:     []string{"x", "y"},
		A:               [7]string{"= 2", "= 0", "= -2 a", "= 0", "= a^2-1", "", "= 0"},
		Satisfying:      []string{"y^2 = x^4 + 2 a x^2 + 1"},
		Addition:        []string{"x = (x1 y2+y1 x2)/(1-(x1 x2)^2)", "y = ((1+(x1 x2)^2) (y1 y2+2 a x1 x2)+2 x1 x2 (x1^2+x2^2))/(1-(x1 x2)^2)^2"},
		Doubling:        []string{"x = (x1 y1+y1 x1)/(1-(x1 x1)^2)", "y = ((1+(x1 x1)^2) (y1 y1+2 a x1 x1)+2 x1 x1 (x1^2+x1^2))/(1-(x1 x1)^2)^2"},
		Negation:        []string{"x = -x1", "y = y1"},
		Neutral:         []string{"x = 0", "y = 1"},
		FromWeierstrass: []string{"x = u/v", "y = (u-a)(u/v)^2-1"},
		ToWeierstrass:   []string{"u = a + (y+1)/x^2", "v = (a + (y+1)/x^2)/x"},
	},
	{
		ID:              "g1p/montgom",
		Tag:             "montgom",
		Class:           "g1p",
		Name:            "Montgomery curves",
		Parameters:      []string{"a", "b"},
		Coordinates:     []string{"x", "y"},
		A:               [7]string{"= b", "= 0", "= a", "= 0", "= 1", "", "= 0"},
		Satisfying:      []string{"b y^2 = x^3 + a x^2 + x"},
		Addition:        []string{"x = b (y2-y1)^2/(x2-x1)^2-a-x1-x2", "y = (2 x1+x2+a) (y2-y1)/(x2-x1)-b (y2-y1)^3/(x2-x1)^3-y1"},
		Doubling:        []string{"x = b (3 x1^2+2 a x1+1)^2/(2 b y1)^2-a-x1-x1", "y = (2 x1+x1+a) (3 x1^2+2 a x1+1)/(2 b y1)-b (3 x1^2+2 a x1+1)^3/(2 b y1)^3-y1"},
		Negation:        []string{"x = x1", "y = -y1"},
		Neutral:         []string(nil),
		FromWeierstrass: []string{"x = weierx", "y = weiery"},
		ToWeierstrass:   []string{"weierx = x", "weiery = y"},
	},
	{
		ID:              "g1p/shortw",
		Tag:             "shortw",
		Class:           "g1p",
		Name:            "short Weierstrass curves",
		Parameters:      []string{"a", "b"},
		Coordinates:     []string{"x", "y"},
		A:               [7]string{"= 1", "= 0", "= 0", "= 0", "= a", "", "= b"},
		Satisfying:      []string{"y^2 = x^3 + a x + b"},
		Addition:        []string{"x = (y2-y1)^2/(x2-x1)^2-x1-x2", "y = (2 x1+x2) (y2-y1)/(x2-x1)-(y2-y1)^3/(x2-x1)^3-y1"},
		Doubling:        []string{"x = (3 x1^2+a)^2/(2 y1)^2-x1-x1", "y = (2 x1+x1) (3 x1^2+a)/(2 y1)-(3 x1^2+a)^3/(2 y1)^3-y1"},
		Negation:        []string{"x = x1", "y = -y1"},
		Neutral:         []string(nil),
		FromWeierstrass: []string{"x = weierx", "y = weiery"},
		ToWeierstrass:   []string{"weierx = x", "weiery = y"},
	},
	{
		ID:              "g1p/twisted",
		Tag:             "twisted",
		Class:           "g1p",
		Name:            "twisted Edwards curves",
		Parameters:      []string{"a", "d"},
		Coordinates:     []string{"x", "y"},
		A:               [7]string{"= 1/(a-d)", "= 0", "= 4 a/(a-d)-2", "= 0", "= 1", "", "= 0"},
		Satisfying:      []string{"a x^2+y^2 = 1+d x^2 y^2"},
		Addition:        []string{"x = (x1 y2+y1 x2)/(1+d x1 x2 y1 y2)", "y = (y1 y2-a x1 x2)/(1-d x1 x2 y1 y2)"},
		Doubling:        []string{"x = (x1 y1+y1 x1)/(1+d x1 x1 y1 y1)", "y = (y1 y1-a x1 x1)/(1-d x1 x1 y1 y1)"},
		Negation:        []string{"x = -x1", "y = y1"},
		Neutral:         []string{"x = 0", "y = 1"},
		FromWeierstrass: []string{"x = 2 u/v", "y = (u-1)/(u+1)"},
		ToWeierstrass:   []string{"u = (1+y)/(1-y)", "v = 2 (1+y)/(x(1-y))"},
	},
	{
		ID:              "g1p/twistedhessian",
		Tag:             "twistedhessian",
		Class:           "g1p",
		Name:            "twisted Hessian curves",
		Parameters:      []string{"a", "d"},
		Coordinates:     []string{"x", "y"},
		A:               [7]string{"= 1", "= - 3 (d/3) / (a - (d/3) (d/3) (d/3))", "= - 9 (d/3)  (d/3) / ((a - (d/3) (d/3) (d/3))  (a - (d/3) (d/3) (d/3)))", "= - 9 / ((a - (d/3) (d/3) (d/3))  (a - (d/3) (d/3) (d/3)))", "= - 27  (d/3) / ((a - (d/3) (d/3) (d/3)) (a - (d/3) (d/3) (d/3)) (a - (d/3) (d/3) (d/3)))", "", "= - 27 / ((a - (d/3) (d/3) (d/3)) (a - (d/3) (d/3) (d/3)) (a - (d/3) (d/3) (d/3)) (a - (d/3) (d/3) (d/3)))"},
		Satisfying:      []string{"a x^3+y^3+1=d x y"},
		Addition:        []string{"x = (x1 - y1^2 x2 y2)/(a x1 y1 x2^2 - y2)", "y = (y1 y2^2 - a x1^2 x2)/(a x1 y1 x2^2 - y2)"},
		Doubling:        []string{"x = (x1 - y1^3 x1)/(a y1 x1^3 - y1)", "y = (y1^3 - a x1^3)/(a y1 x1^3 - y1)"},
		Negation:        []string{"x = x1/y1", "y = 1/y1"},
		Neutral:         []string(nil),
		FromWeierstrass: []string{"x =  3 (a - (d/3) (d/3) (d/3)) u / ((a - (d/3) (d/3) (d/3)) (a - (d/3) (d/3) (d/3)) v - 3 (d/3) u (a - (d/3) (d/3) (d/3)) - 9)", "y = - (a - (d/3) (d/3) (d/3)) (a - (d/3) (d/3) (d/3)) v / ((a - (d/3) (d/3) (d/3)) (a - (d/3) (d/3) (d/3)) v - 3 (d/3) u (a - (d/3) (d/3) (d/3)) - 9)"},
		ToWeierstrass:   []string{"u = (-3 / (a - d d d/27)) x / (d x/3 - (-y) + 1)", "v = (-9 / ((a - d d d/27) (a - d d d/27))) (-y) / (d x/3 - (-y) + 1)"},
	},
}

var representations = []*Representation{
	{
		ID:         "g12o/edwards/w",
		Tag:        "w",
		Class:      "g12o",
		Shape:      shapes[0],
		Name:       "w coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"w"},
		Satisfying: []string{"x+y = w"},
	},
	{
		ID:         "g12o/edwards/w-1",
		Tag:        "w-1",
		Class:      "g12o",
		Shape:      shapes[0],
		Name:       "w coordinates with d1=d2",
		Assume:     []string{"d1 = d2"},
		Parameters: []string(nil),
		Variables:  []string{"w"},
		Satisfying: []string{"x+y = w"},
	},
	{
		ID:         "g12o/edwards/wz",
		Tag:        "wz",
		Class:      "g12o",
		Shape:      shapes[0],
		Name:       "WZ coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"W", "Z"},
		Satisfying: []string{"x+y = W/Z"},
	},
	{
		ID:         "g12o/edwards/wz-1",
		Tag:        "wz-1",
		Class:      "g12o",
		Shape:      shapes[0],
		Name:       "WZ coordinates with d1=d2",
		Assume:     []string{"d1 = d2"},
		Parameters: []string(nil),
		Variables:  []string{"W", "Z"},
		Satisfying: []string{"x+y = W/Z"},
	},
	{
		ID:         "g12o/edwards/xy",
		Tag:        "xy",
		Class:      "g12o",
		Shape:      shapes[0],
		Name:       "affine coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y"},
		Satisfying: []string{"x = X", "y = Y"},
	},
	{
		ID:         "g12o/edwards/xy-1",
		Tag:        "xy-1",
		Class:      "g12o",
		Shape:      shapes[0],
		Name:       "affine coordinates with d1=d2",
		Assume:     []string{"d1 = d2"},
		Parameters: []string(nil),
		Variables:  []string{"X", "Y"},
		Satisfying: []string{"x = X", "y = Y"},
	},
	{
		ID:         "g12o/edwards/xyz",
		Tag:        "xyz",
		Class:      "g12o",
		Shape:      shapes[0],
		Name:       "projective coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z"},
	},
	{
		ID:         "g12o/edwards/xyz-1",
		Tag:        "xyz-1",
		Class:      "g12o",
		Shape:      shapes[0],
		Name:       "projective coordinates with d1=d2",
		Assume:     []string{"d1 = d2"},
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z"},
	},
	{
		ID:         "g12o/hessian/standard",
		Tag:        "standard",
		Class:      "g12o",
		Shape:      shapes[1],
		Name:       "projective coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z"},
	},
	{
		ID:         "g12o/shortw/affine",
		Tag:        "affine",
		Class:      "g12o",
		Shape:      shapes[2],
		Name:       "affine coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y"},
		Satisfying: []string{"x = X", "y = Y"},
	},
	{
		ID:         "g12o/shortw/extended-0",
		Tag:        "extended-0",
		Class:      "g12o",
		Shape:      shapes[2],
		Name:       "extended Lopez-Dahab coordinates with a2=0",
		Assume:     []string{"a2 = 0 "},
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z", "ZZ", "XZ"},
		Satisfying: []string{"x = X/Z", "y = Y/ZZ", "ZZ = Z^2", "XZ = X Z"},
	},
	{
		ID:         "g12o/shortw/extended-1",
		Tag:        "extended-1",
		Class:      "g12o",
		Shape:      shapes[2],
		Name:       "extended Lopez-Dahab coordinates with a2=1",
		Assume:     []string{"a2 = 1"},
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z", "ZZ"},
		Satisfying: []string{"x = X/Z", "y = Y/Z^2", "ZZ = Z^2"},
	},
	{
		ID:         "g12o/shortw/jacobian",
		Tag:        "jacobian",
		Class:      "g12o",
		Shape:      shapes[2],
		Name:       "Jacobian coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z^2", "y = Y/Z^3"},
	},
	{
		ID:         "g12o/shortw/lambda",
		Tag:        "lambda",
		Class:      "g12o",
		Shape:      shapes[2],
		Name:       "Lambda coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "L", "Z"},
		Satisfying: []string{"x = X/Z", "y/x = (L-X)/Z"},
	},
	{
		ID:         "g12o/shortw/lopezdahab",
		Tag:        "lopezdahab",
		Class:      "g12o",
		Shape:      shapes[2],
		Name:       "Lopez-Dahab coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z^2"},
	},
	{
		ID:         "g12o/shortw/lopezdahab-0",
		Tag:        "lopezdahab-0",
		Class:      "g12o",
		Shape:      shapes[2],
		Name:       "Lopez-Dahab coordinates with a2=0",
		Assume:     []string{"a2 = 0"},
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z^2"},
	},
	{
		ID:         "g12o/shortw/lopezdahab-1",
		Tag:        "lopezdahab-1",
		Class:      "g12o",
		Shape:      shapes[2],
		Name:       "Lopez-Dahab coordinates with a2=1",
		Assume:     []string{"a2 = 1"},
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z^2"},
	},
	{
		ID:         "g12o/shortw/projective",
		Tag:        "projective",
		Class:      "g12o",
		Shape:      shapes[2],
		Name:       "projective coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z"},
	},
	{
		ID:         "g12o/shortw/xz",
		Tag:        "xz",
		Class:      "g12o",
		Shape:      shapes[2],
		Name:       "XZ coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Z"},
		Satisfying: []string{"x = X/Z"},
	},
	{
		ID:         "g1p/2dik/standard",
		Tag:        "standard",
		Class:      "g1p",
		Shape:      shapes[3],
		Name:       "standard coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z", "ZZ"},
		Satisfying: []string{"x = X/Z", "y = Y/ZZ", "ZZ = Z^2"},
	},
	{
		ID:         "g1p/3dik/standard",
		Tag:        "standard",
		Class:      "g1p",
		Shape:      shapes[4],
		Name:       "standard coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z", "ZZ"},
		Satisfying: []string{"x = X/Z^2", "y = Y/Z^3", "ZZ = Z^2"},
	},
	{
		ID:         "g1p/edwards/inverted",
		Tag:        "inverted",
		Class:      "g1p",
		Shape:      shapes[5],
		Name:       "inverted coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = Z/X", "y = Z/Y"},
	},
	{
		ID:         "g1p/edwards/projective",
		Tag:        "projective",
		Class:      "g1p",
		Shape:      shapes[5],
		Name:       "projective coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z"},
	},
	{
		ID:         "g1p/edwards/yz",
		Tag:        "yz",
		Class:      "g1p",
		Shape:      shapes[5],
		Name:       "YZ coordinates with square d",
		Assume:     []string{"c = 1", "d = r^2"},
		Parameters: []string{"r"},
		Variables:  []string{"Y", "Z"},
		Satisfying: []string{"r y = Y/Z"},
	},
	{
		ID:         "g1p/edwards/yzsquared",
		Tag:        "yzsquared",
		Class:      "g1p",
		Shape:      shapes[5],
		Name:       "squared YZ coordinates with square d",
		Assume:     []string{"c = 1", "d = r^2"},
		Parameters: []string{"r"},
		Variables:  []string{"Y", "Z"},
		Satisfying: []string{"r y^2 = Y/Z"},
	},
	{
		ID:         "g1p/hessian/extended",
		Tag:        "extended",
		Class:      "g1p",
		Shape:      shapes[6],
		Name:       "extended coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z", "XX", "YY", "ZZ", "XY", "YZ", "XZ"},
		Satisfying: []string{"x = X/Z", "y = Y/Z", "XX = X X", "YY = Y Y", "ZZ = Z Z", "XY = 2 X Y", "XZ = 2 X Z", "YZ = 2 Y Z"},
	},
	{
		ID:         "g1p/hessian/standard",
		Tag:        "standard",
		Class:      "g1p",
		Shape:      shapes[6],
		Name:       "projective coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z"},
	},
	{
		ID:         "g1p/jintersect/extended",
		Tag:        "extended",
		Class:      "g1p",
		Shape:      shapes[7],
		Name:       "extended coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"S", "C", "D", "Z", "SC", "DZ"},
		Satisfying: []string{"s = S/Z", "c = C/Z", "d = D/Z", "SC = S C", "DZ = D Z"},
	},
	{
		ID:         "g1p/jintersect/standard",
		Tag:        "standard",
		Class:      "g1p",
		Shape:      shapes[7],
		Name:       "projective coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"S", "C", "D", "Z"},
		Satisfying: []string{"s = S/Z", "c = C/Z", "d = D/Z"},
	},
	{
		ID:         "g1p/jquartic/2xxyzz",
		Tag:        "2xxyzz",
		Class:      "g1p",
		Shape:      shapes[8],
		Name:       "doubling-oriented XXYZZ coordinates",
		Assume:     []string{"a^2+c^2=1"},
		Parameters: []string{"c"},
		Variables:  []string{"X", "XX", "Y", "Z", "ZZ"},
		Satisfying: []string{"x = X/Z", "y = Y/ZZ", "XX = X^2", "ZZ = Z^2"},
	},
	{
		ID:         "g1p/jquartic/2xxyzzr",
		Tag:        "2xxyzzr",
		Class:      "g1p",
		Shape:      shapes[8],
		Name:       "doubling-oriented XXYZZR coordinates",
		Assume:     []string{"a^2+c^2=1"},
		Parameters: []string{"c"},
		Variables:  []string{"X", "XX", "Y", "Z", "ZZ", "R"},
		Satisfying: []string{"x = X/Z", "y = Y/ZZ", "XX = X^2", "ZZ = Z^2", "R = 2 X Z"},
	},
	{
		ID:         "g1p/jquartic/2xyz",
		Tag:        "2xyz",
		Class:      "g1p",
		Shape:      shapes[8],
		Name:       "doubling-oriented XYZ coordinates",
		Assume:     []string{"a^2+c^2=1"},
		Parameters: []string{"c"},
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z^2"},
	},
	{
		ID:         "g1p/jquartic/xxyzz",
		Tag:        "xxyzz",
		Class:      "g1p",
		Shape:      shapes[8],
		Name:       "XXYZZ coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "XX", "Y", "Z", "ZZ"},
		Satisfying: []string{"x = X/Z", "y = Y/ZZ", "XX = X^2", "ZZ = Z^2"},
	},
	{
		ID:         "g1p/jquartic/xxyzzr",
		Tag:        "xxyzzr",
		Class:      "g1p",
		Shape:      shapes[8],
		Name:       "XXYZZR coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "XX", "Y", "Z", "ZZ", "R"},
		Satisfying: []string{"x = X/Z", "y = Y/ZZ", "XX = X^2", "ZZ = Z^2", "R = 2 X Z"},
	},
	{
		ID:         "g1p/jquartic/xyz",
		Tag:        "xyz",
		Class:      "g1p",
		Shape:      shapes[8],
		Name:       "XYZ coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z^2"},
	},
	{
		ID:         "g1p/montgom/xz",
		Tag:        "xz",
		Class:      "g1p",
		Shape:      shapes[9],
		Name:       "XZ coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Z"},
		Satisfying: []string{"x = X/Z"},
	},
	{
		ID:         "g1p/shortw/jacobian",
		Tag:        "jacobian",
		Class:      "g1p",
		Shape:      shapes[10],
		Name:       "Jacobian coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z^2", "y = Y/Z^3"},
	},
	{
		ID:         "g1p/shortw/jacobian-0",
		Tag:        "jacobian-0",
		Class:      "g1p",
		Shape:      shapes[10],
		Name:       "Jacobian coordinates with a4=0",
		Assume:     []string{"a = 0"},
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z^2", "y = Y/Z^3"},
	},
	{
		ID:         "g1p/shortw/jacobian-3",
		Tag:        "jacobian-3",
		Class:      "g1p",
		Shape:      shapes[10],
		Name:       "Jacobian coordinates with a4=-3",
		Assume:     []string{"a = -3"},
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z^2", "y = Y/Z^3"},
	},
	{
		ID:         "g1p/shortw/modified",
		Tag:        "modified",
		Class:      "g1p",
		Shape:      shapes[10],
		Name:       "modified Jacobian coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z", "T"},
		Satisfying: []string{"x = X/Z^2", "y = Y/Z^3", "T = a Z^4"},
	},
	{
		ID:         "g1p/shortw/projective",
		Tag:        "projective",
		Class:      "g1p",
		Shape:      shapes[10],
		Name:       "projective coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z"},
	},
	{
		ID:         "g1p/shortw/projective-1",
		Tag:        "projective-1",
		Class:      "g1p",
		Shape:      shapes[10],
		Name:       "projective coordinates with a4=-1",
		Assume:     []string{"a = -1"},
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z"},
	},
	{
		ID:         "g1p/shortw/projective-3",
		Tag:        "projective-3",
		Class:      "g1p",
		Shape:      shapes[10],
		Name:       "projective coordinates with a4=-3",
		Assume:     []string{"a = -3"},
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z"},
	},
	{
		ID:         "g1p/shortw/w12-0",
		Tag:        "w12-0",
		Class:      "g1p",
		Shape:      shapes[10],
		Name:       "W12 coordinates with a6=0",
		Assume:     []string{"b = 0"},
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z^2"},
	},
	{
		ID:         "g1p/shortw/xyzz",
		Tag:        "xyzz",
		Class:      "g1p",
		Shape:      shapes[10],
		Name:       "XYZZ coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "ZZ", "ZZZ"},
		Satisfying: []string{"x = X/ZZ", "y = Y/ZZZ", "ZZ^3 = ZZZ^2"},
	},
	{
		ID:         "g1p/shortw/xyzz-3",
		Tag:        "xyzz-3",
		Class:      "g1p",
		Shape:      shapes[10],
		Name:       "XYZZ coordinates with a4=-3",
		Assume:     []string{"a = -3"},
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "ZZ", "ZZZ"},
		Satisfying: []string{"x = X/ZZ", "y = Y/ZZZ", "ZZ^3 = ZZZ^2"},
	},
	{
		ID:         "g1p/shortw/xz",
		Tag:        "xz",
		Class:      "g1p",
		Shape:      shapes[10],
		Name:       "XZ coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Z"},
		Satisfying: []string{"x = X/Z"},
	},
	{
		ID:         "g1p/twisted/extended",
		Tag:        "extended",
		Class:      "g1p",
		Shape:      shapes[11],
		Name:       "extended coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z", "T"},
		Satisfying: []string{"x = X/Z", "y = Y/Z", "x y = T/Z"},
	},
	{
		ID:         "g1p/twisted/extended-1",
		Tag:        "extended-1",
		Class:      "g1p",
		Shape:      shapes[11],
		Name:       "extended coordinates with a=-1",
		Assume:     []string{"a = -1"},
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z", "T"},
		Satisfying: []string{"x = X/Z", "y = Y/Z", "x y = T/Z"},
	},
	{
		ID:         "g1p/twisted/inverted",
		Tag:        "inverted",
		Class:      "g1p",
		Shape:      shapes[11],
		Name:       "inverted coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = Z/X", "y = Z/Y"},
	},
	{
		ID:         "g1p/twisted/projective",
		Tag:        "projective",
		Class:      "g1p",
		Shape:      shapes[11],
		Name:       "projective coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z"},
	},
	{
		ID:         "g1p/twistedhessian/projective",
		Tag:        "projective",
		Class:      "g1p",
		Shape:      shapes[12],
		Name:       "projective coordinates",
		Assume:     []string(nil),
		Parameters: []string(nil),
		Variables:  []string{"X", "Y", "Z"},
		Satisfying: []string{"x = X/Z", "y = Y/Z"},
	},
}

var formulae = []*Formula{
	{
		ID:             "g12o/edwards/w-1/diffadd/dadd-2008-blr",
		Tag:            "dadd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[1],
		Operation:      "diffadd",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2overd1plus1 = d2/d1 + 1"},
		Compute:        []string{"R = w2 w3", "S = R^2", "T = R(1+w2+w3)+S", "w5 = T/(d1+T+d2overd1plus1 S)+w1"},
		Parameters:     []string{"d2overd1plus1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("w2"), Y: ast.Variable("w3")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("w3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d2overd1plus1"), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Inv{X: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("T"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("w5"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("w1")}}}},
	},
	{
		ID:             "g12o/edwards/w-1/diffadd/dadd-2008-blr-1",
		Tag:            "dadd-2008-blr-1",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[1],
		Operation:      "diffadd",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "w-1",
		Assume:         []string(nil),
		Compute:        []string{"A = w2^2", "B = A+w2", "C = w3^2", "D = C+w3", "w5 = 1+d1/(d1+B D)+w1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("w2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("w3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("w3")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Inv{X: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("w5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("w1")}}}},
	},
	{
		ID:             "g12o/edwards/w-1/doubling/dbl-2008-blr",
		Tag:            "dbl-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[1],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2overd1plus1 = d2/d1 + 1"},
		Compute:        []string{"A = w1^2", "J = A^2", "K = A+J", "w3 = K/(d1+K+d2overd1plus1 J)"},
		Parameters:     []string{"d2overd1plus1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("w1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("d2overd1plus1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Inv{X: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("w3"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("t3")}}}},
	},
	{
		ID:             "g12o/edwards/w-1/doubling/dbl-2008-blr-1",
		Tag:            "dbl-2008-blr-1",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[1],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "w-1",
		Assume:         []string(nil),
		Compute:        []string{"A = w1^2", "B = A+w1", "w3 = 1+d1/(d1+B^2)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("w1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("w1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Inv{X: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("w3"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("t3")}}}},
	},
	{
		ID:             "g12o/edwards/w-1/ladder/ladd-2008-blr",
		Tag:            "ladd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[1],
		Operation:      "ladder",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2overd1plus1 = d2/d1 + 1"},
		Compute:        []string{"R = w2 w3", "S = R^2", "T = R(1+w2+w3)+S", "w5 = T/(d1+T+d2overd1plus1 S)+w1", "A = w2^2", "J = A^2", "K = A+J", "w4 = K/(d1+K+d2overd1plus1 J)"},
		Parameters:     []string{"d2overd1plus1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("w2"), Y: ast.Variable("w3")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("w3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d2overd1plus1"), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Inv{X: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("T"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("w5"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("w1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("w2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("d2overd1plus1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Inv{X: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("w4"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g12o/edwards/w-1/ladder/ladd-2008-blr-1",
		Tag:            "ladd-2008-blr-1",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[1],
		Operation:      "ladder",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "w-1",
		Assume:         []string(nil),
		Compute:        []string{"A = w2^2", "B = A+w2", "C = w3^2", "D = C+w3", "w4 = 1+d1/(d1+B^2)", "w5 = 1+d1/(d1+B D)+w1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("w2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("w3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("w3")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Inv{X: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("w4"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Inv{X: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("w5"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("w1")}}}},
	},
	{
		ID:             "g12o/edwards/w-1/scaling/copy",
		Tag:            "copy",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[1],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"w3 = w1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("w3"), RHS: ast.Variable("w1")}}},
	},
	{
		ID:             "g12o/edwards/w/diffadd/dadd-2008-blr",
		Tag:            "dadd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[0],
		Operation:      "diffadd",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2overd1plus1 = d2/d1 + 1"},
		Compute:        []string{"R = w2 w3", "S = R^2", "T = R(1+w2+w3)+S", "w5 = T/(d1+T+d2overd1plus1 S)+w1"},
		Parameters:     []string{"d2overd1plus1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("w2"), Y: ast.Variable("w3")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("w3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d2overd1plus1"), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Inv{X: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("T"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("w5"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("w1")}}}},
	},
	{
		ID:             "g12o/edwards/w/doubling/dbl-2008-blr",
		Tag:            "dbl-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[0],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2overd1plus1 = d2/d1 + 1"},
		Compute:        []string{"A = w1^2", "J = A^2", "K = A+J", "w3 = K/(d1+K+d2overd1plus1 J)"},
		Parameters:     []string{"d2overd1plus1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("w1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("d2overd1plus1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Inv{X: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("w3"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("t3")}}}},
	},
	{
		ID:             "g12o/edwards/w/ladder/ladd-2008-blr",
		Tag:            "ladd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[0],
		Operation:      "ladder",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2overd1plus1 = d2/d1 + 1"},
		Compute:        []string{"R = w2 w3", "S = R^2", "T = R(1+w2+w3)+S", "w5 = T/(d1+T+d2overd1plus1 S)+w1", "A = w2^2", "J = A^2", "K = A+J", "w4 = K/(d1+K+d2overd1plus1 J)"},
		Parameters:     []string{"d2overd1plus1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("w2"), Y: ast.Variable("w3")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("w3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d2overd1plus1"), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Inv{X: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("T"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("w5"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("w1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("w2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("d2overd1plus1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Inv{X: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("w4"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g12o/edwards/w/scaling/copy",
		Tag:            "copy",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[0],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"w3 = w1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("w3"), RHS: ast.Variable("w1")}}},
	},
	{
		ID:             "g12o/edwards/wz-1/diffadd/dadd-2008-blr",
		Tag:            "dadd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[3],
		Operation:      "diffadd",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"e^2 = d1", "f^2 = d2/d1 + 1"},
		Compute:        []string{"C = W2(Z2+W2)", "D = W3(Z3+W3)", "E = Z2 Z3", "F = W2 W3", "V = C D", "U = V + (e E + f F)^2", "W5 = V Z1 + U W1", "Z5 = U Z1"},
		Parameters:     []string{"e", "f"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("f"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("e"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g12o/edwards/wz-1/diffadd/dadd-2008-blr-1",
		Tag:            "dadd-2008-blr-1",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[3],
		Operation:      "diffadd",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "wz-1",
		Assume:         []string(nil),
		Compute:        []string{"C = W2(Z2+W2)", "D = W3(Z3+W3)", "E = Z2 Z3", "V = C D", "U = V + d1 E^2", "W5 = V Z1 + U W1", "Z5 = U Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g12o/edwards/wz-1/diffadd/dadd-2008-blr-2",
		Tag:            "dadd-2008-blr-2",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[3],
		Operation:      "diffadd",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"e^2 = d1", "f^2 = d2/d1 + 1"},
		Compute:        []string{"A = W2 W3", "B = Z2 Z3", "C = (W2+Z2)(W3+Z3)", "W5 = Z1(d1(C+A+B)^2)", "Z5 = W1(A C+(e B+f A)^2)"},
		Parameters:     []string{"e", "f"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("W2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("W3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("f"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("e"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g12o/edwards/wz-1/diffadd/dadd-2008-blr-3",
		Tag:            "dadd-2008-blr-3",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[3],
		Operation:      "diffadd",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "wz-1",
		Assume:         []string(nil),
		Compute:        []string{"A = W2 W3", "B = Z2 Z3", "C = (W2+Z2)(W3+Z3)", "W5 = Z1(d1(C+A+B)^2)", "Z5 = W1(A C+d1 B^2)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("W2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("W3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g12o/edwards/wz-1/diffadd/mdadd-2008-blr",
		Tag:            "mdadd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[3],
		Operation:      "diffadd",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"e^2 = d1", "f^2 = d2/d1 + 1", "Z1 = 1"},
		Compute:        []string{"C = W2(Z2+W2)", "D = W3(Z3+W3)", "E = Z2 Z3", "F = W2 W3", "V = C D", "U = V + (e E + f F)^2", "W5 = V + W1 U", "Z5 = U"},
		Parameters:     []string{"e", "f"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("f"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("e"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Variable("U")}}},
	},
	{
		ID:             "g12o/edwards/wz-1/diffadd/mdadd-2008-blr-1",
		Tag:            "mdadd-2008-blr-1",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[3],
		Operation:      "diffadd",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "wz-1",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"C = W2(Z2+W2)", "D = W3(Z3+W3)", "E = Z2 Z3", "V = C D", "U = V + d1 E^2", "W5 = V + W1 U", "Z5 = U"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Variable("U")}}},
	},
	{
		ID:             "g12o/edwards/wz-1/doubling/dbl-2008-blr",
		Tag:            "dbl-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[3],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"e^4 = d1", "f^4 = d2/d1 + 1"},
		Compute:        []string{"C = W1(Z1+W1)", "W3 = C^2", "Z3 = W3 + ((e Z1 + f W1)^2)^2"},
		Parameters:     []string{"e", "f"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("W3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("f"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("e"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("W3"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g12o/edwards/wz-1/doubling/dbl-2008-blr-1",
		Tag:            "dbl-2008-blr-1",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[3],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "wz-1",
		Assume:         []string(nil),
		Compute:        []string{"C = W1(Z1+W1)", "W3 = C^2", "Z3 = d1 (Z1^2)^2 + W3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("W3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("W3")}}}},
	},
	{
		ID:             "g12o/edwards/wz-1/ladder/ladd-2008-blr",
		Tag:            "ladd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[3],
		Operation:      "ladder",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"e^4 = d1", "f^4 = d2/d1 + 1", "ee = e e", "ff = f f"},
		Compute:        []string{"C = W2(Z2+W2)", "D = W3(Z3+W3)", "W4 = C^2", "Z4 = W4 + ((e Z2 + f W2)^2)^2", "E = Z2 Z3", "F = W2 W3", "V = C D", "U = V + (ee E + ff F)^2", "W5 = V Z1 + U W1", "Z5 = U Z1"},
		Parameters:     []string{"e", "ee", "f", "ff"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("W4"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("f"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("e"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("W4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("ff"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("ee"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("t9"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g12o/edwards/wz-1/ladder/ladd-2008-blr-1",
		Tag:            "ladd-2008-blr-1",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[3],
		Operation:      "ladder",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "wz-1",
		Assume:         []string(nil),
		Compute:        []string{"C = W2(Z2+W2)", "V = C W3(Z3+W3)", "U = V + d1 (Z2 Z3)^2", "W4 = C^2", "Z4 = d1 (Z2^2)^2 + W4", "W5 = V Z1 + U W1", "Z5 = U Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("W3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("W4"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("W4")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g12o/edwards/wz-1/ladder/mladd-2008-blr",
		Tag:            "mladd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[3],
		Operation:      "ladder",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "e^4 = d1", "f^4 = d2/d1 + 1", "ee = e e", "ff = f f"},
		Compute:        []string{"C = W2(Z2+W2)", "D = W3(Z3+W3)", "W4 = C^2", "Z4 = W4 + ((e Z2 + f W2)^2)^2", "E = Z2 Z3", "F = W2 W3", "V = C D", "U = V + (ee E + ff F)^2", "W5 = V + U W1", "Z5 = U"},
		Parameters:     []string{"e", "ee", "f", "ff"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("W4"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("f"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("e"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("W4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("ff"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("ee"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("t9"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Variable("U")}}},
	},
	{
		ID:             "g12o/edwards/wz-1/ladder/mladd-2008-blr-1",
		Tag:            "mladd-2008-blr-1",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[3],
		Operation:      "ladder",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "wz-1",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"C = W2(Z2+W2)", "V = C W3(Z3+W3)", "U = V + d1 (Z2 Z3)^2", "W4 = C^2", "Z4 = d1 (Z2^2)^2 + W4", "W5 = V + U W1", "Z5 = U"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("W3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("W4"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("W4")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Variable("U")}}},
	},
	{
		ID:             "g12o/edwards/wz-1/scaling/scale",
		Tag:            "scale",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[3],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"W3 = W1/Z1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("W3"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g12o/edwards/wz/diffadd/dadd-2008-blr",
		Tag:            "dadd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[2],
		Operation:      "diffadd",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"e^2 = d1", "f^2 = d2/d1 + 1"},
		Compute:        []string{"C = W2(Z2+W2)", "D = W3(Z3+W3)", "E = Z2 Z3", "F = W2 W3", "V = C D", "U = V + (e E + f F)^2", "W5 = V Z1 + U W1", "Z5 = U Z1"},
		Parameters:     []string{"e", "f"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("f"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("e"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g12o/edwards/wz/diffadd/dadd-2008-blr-2",
		Tag:            "dadd-2008-blr-2",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[2],
		Operation:      "diffadd",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"e^2 = d1", "f^2 = d2/d1 + 1"},
		Compute:        []string{"A = W2 W3", "B = Z2 Z3", "C = (W2+Z2)(W3+Z3)", "W5 = Z1(d1(C+A+B)^2)", "Z5 = W1(A C+(e B+f A)^2)"},
		Parameters:     []string{"e", "f"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("W2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("W3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("f"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("e"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g12o/edwards/wz/diffadd/mdadd-2008-blr",
		Tag:            "mdadd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[2],
		Operation:      "diffadd",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"e^2 = d1", "f^2 = d2/d1 + 1", "Z1 = 1"},
		Compute:        []string{"C = W2(Z2+W2)", "D = W3(Z3+W3)", "E = Z2 Z3", "F = W2 W3", "V = C D", "U = V + (e E + f F)^2", "W5 = V + W1 U", "Z5 = U"},
		Parameters:     []string{"e", "f"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("f"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("e"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Variable("U")}}},
	},
	{
		ID:             "g12o/edwards/wz/doubling/dbl-2008-blr",
		Tag:            "dbl-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[2],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"e^4 = d1", "f^4 = d2/d1 + 1"},
		Compute:        []string{"C = W1(Z1+W1)", "W3 = C^2", "Z3 = W3 + ((e Z1 + f W1)^2)^2"},
		Parameters:     []string{"e", "f"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("W3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("f"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("e"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("W3"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g12o/edwards/wz/ladder/ladd-2008-blr",
		Tag:            "ladd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[2],
		Operation:      "ladder",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"e^4 = d1", "f^4 = d2/d1 + 1", "ee = e e", "ff = f f"},
		Compute:        []string{"C = W2(Z2+W2)", "D = W3(Z3+W3)", "W4 = C^2", "Z4 = W4 + ((e Z2 + f W2)^2)^2", "E = Z2 Z3", "F = W2 W3", "V = C D", "U = V + (ee E + ff F)^2", "W5 = V Z1 + U W1", "Z5 = U Z1"},
		Parameters:     []string{"e", "ee", "f", "ff"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("W4"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("f"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("e"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("W4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("ff"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("ee"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("t9"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g12o/edwards/wz/ladder/mladd-2008-blr",
		Tag:            "mladd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[2],
		Operation:      "ladder",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "e^4 = d1", "f^4 = d2/d1 + 1", "ee = e e", "ff = f f"},
		Compute:        []string{"C = W2(Z2+W2)", "D = W3(Z3+W3)", "W4 = C^2", "Z4 = W4 + ((e Z2 + f W2)^2)^2", "E = Z2 Z3", "F = W2 W3", "V = C D", "U = V + (ee E + ff F)^2", "W5 = V + U W1", "Z5 = U"},
		Parameters:     []string{"e", "ee", "f", "ff"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("W4"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("f"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("e"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("W4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("W3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("ff"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("ee"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("t9"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("W5"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Variable("U")}}},
	},
	{
		ID:             "g12o/edwards/wz/scaling/scale",
		Tag:            "scale",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[2],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"W3 = W1/Z1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("W3"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g12o/edwards/xy-1/addition/add-2008-blr",
		Tag:            "add-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[5],
		Operation:      "addition",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"w1 = X1+Y1", "w2 = X2+Y2", "A = X1^2+X1", "B = Y1^2+Y1", "C = d2 w1 w2", "D = X2 Y2", "X3 = Y1 + (C + d1 (w1+X2) + A (D+X2)) / (d1 + A w2)", "Y3 = X1 + (C + d1 (w1+Y2) + B (D+Y2)) / (d1 + B w2)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("w1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("w2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("w1"), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("w1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Inv{X: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("w1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Add{X: ast.Variable("t18"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Inv{X: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("t19"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t22")}}}},
	},
	{
		ID:             "g12o/edwards/xy-1/doubling/dbl-2008-blr",
		Tag:            "dbl-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[5],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = 1 + (d1 + d2(X1^2+Y1^2) + Y1^2+Y1^4)/(d1 + X1^2 + Y1^2 + (d2/d1)(X1^4+Y1^4))", "Y3 = 1 + (d1 + d2(X1^2+Y1^2) + X1^2+X1^4)/(d1 + X1^2 + Y1^2 + (d2/d1)(X1^4+Y1^4))"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Inv{X: ast.Variable("d1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t14"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Add{X: ast.Variable("t17"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Add{X: ast.Variable("t18"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Inv{X: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("t16"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Inv{X: ast.Variable("d1")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Add{X: ast.Variable("t22"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Add{X: ast.Variable("t24"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Mul{X: ast.Variable("t27"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("t35"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t28")}}, ast.Assignment{LHS: ast.Variable("t36"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t35")}}, ast.Assignment{LHS: ast.Variable("t37"), RHS: ast.Add{X: ast.Variable("t36"), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("t38"), RHS: ast.Add{X: ast.Variable("t37"), Y: ast.Variable("t31")}}, ast.Assignment{LHS: ast.Variable("t39"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t32")}}, ast.Assignment{LHS: ast.Variable("t40"), RHS: ast.Add{X: ast.Variable("t39"), Y: ast.Variable("t33")}}, ast.Assignment{LHS: ast.Variable("t41"), RHS: ast.Add{X: ast.Variable("t40"), Y: ast.Variable("t34")}}, ast.Assignment{LHS: ast.Variable("t42"), RHS: ast.Inv{X: ast.Variable("t41")}}, ast.Assignment{LHS: ast.Variable("t43"), RHS: ast.Mul{X: ast.Variable("t38"), Y: ast.Variable("t42")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("t43")}}}},
	},
	{
		ID:             "g12o/edwards/xy-1/doubling/dbl-2008-blr+1",
		Tag:            "dbl-2008-blr+1",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[5],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "xy-1",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = A^2", "C = Y1^2", "D = C^2", "E = A + C", "F = 1/(d1 + E + B + D)", "X3 = (d1 E + A + B) F", "Y3 = X3 + 1 + d1 F"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Inv{X: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}}},
	},
	{
		ID:             "g12o/edwards/xy-1/doubling/dbl-2008-blr+cse",
		Tag:            "dbl-2008-blr+cse",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[5],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2d1 = d2/d1"},
		Compute:        []string{"A = X1^2", "B = A^2", "C = Y1^2", "D = C^2", "E = A + C", "F = B + D", "G = 1/(d1 + E + d2d1 F)", "X3 = 1 + (d1 + d2 E + C+D) G", "Y3 = X3 + (E+F) G"},
		Parameters:     []string{"d2d1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("d2d1"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Inv{X: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g12o/edwards/xy-1/scaling/copy",
		Tag:            "copy",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[5],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = X1", "Y3 = Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("Y1")}}},
	},
	{
		ID:             "g12o/edwards/xy/addition/add-2008-blr",
		Tag:            "add-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[4],
		Operation:      "addition",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"w1 = X1+Y1", "w2 = X2+Y2", "A = X1^2+X1", "B = Y1^2+Y1", "C = d2 w1 w2", "D = X2 Y2", "X3 = Y1 + (C + d1 (w1+X2) + A (D+X2)) / (d1 + A w2)", "Y3 = X1 + (C + d1 (w1+Y2) + B (D+Y2)) / (d1 + B w2)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("w1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("w2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("w1"), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("w1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Inv{X: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("w1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Add{X: ast.Variable("t18"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Inv{X: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("t19"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t22")}}}},
	},
	{
		ID:             "g12o/edwards/xy/doubling/dbl-2008-blr",
		Tag:            "dbl-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[4],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = 1 + (d1 + d2(X1^2+Y1^2) + Y1^2+Y1^4)/(d1 + X1^2 + Y1^2 + (d2/d1)(X1^4+Y1^4))", "Y3 = 1 + (d1 + d2(X1^2+Y1^2) + X1^2+X1^4)/(d1 + X1^2 + Y1^2 + (d2/d1)(X1^4+Y1^4))"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Inv{X: ast.Variable("d1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t14"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Add{X: ast.Variable("t17"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Add{X: ast.Variable("t18"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Inv{X: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("t16"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Inv{X: ast.Variable("d1")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Add{X: ast.Variable("t22"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Add{X: ast.Variable("t24"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Mul{X: ast.Variable("t27"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("t35"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t28")}}, ast.Assignment{LHS: ast.Variable("t36"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t35")}}, ast.Assignment{LHS: ast.Variable("t37"), RHS: ast.Add{X: ast.Variable("t36"), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("t38"), RHS: ast.Add{X: ast.Variable("t37"), Y: ast.Variable("t31")}}, ast.Assignment{LHS: ast.Variable("t39"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t32")}}, ast.Assignment{LHS: ast.Variable("t40"), RHS: ast.Add{X: ast.Variable("t39"), Y: ast.Variable("t33")}}, ast.Assignment{LHS: ast.Variable("t41"), RHS: ast.Add{X: ast.Variable("t40"), Y: ast.Variable("t34")}}, ast.Assignment{LHS: ast.Variable("t42"), RHS: ast.Inv{X: ast.Variable("t41")}}, ast.Assignment{LHS: ast.Variable("t43"), RHS: ast.Mul{X: ast.Variable("t38"), Y: ast.Variable("t42")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("t43")}}}},
	},
	{
		ID:             "g12o/edwards/xy/doubling/dbl-2008-blr+cse",
		Tag:            "dbl-2008-blr+cse",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[4],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2d1 = d2/d1"},
		Compute:        []string{"A = X1^2", "B = A^2", "C = Y1^2", "D = C^2", "E = A + C", "F = B + D", "G = 1/(d1 + E + d2d1 F)", "X3 = 1 + (d1 + d2 E + C+D) G", "Y3 = X3 + (E+F) G"},
		Parameters:     []string{"d2d1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("d2d1"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Inv{X: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("d1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g12o/edwards/xy/scaling/copy",
		Tag:            "copy",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[4],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = X1", "Y3 = Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("Y1")}}},
	},
	{
		ID:             "g12o/edwards/xyz-1/addition/add-2008-blr-1",
		Tag:            "add-2008-blr-1",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[7],
		Operation:      "addition",
		Source:         "2008 Bernstein-–Lange-–Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"W1 = X1 + Y1", "W2 = X2 + Y2", "A = X1(X1+Z1)", "B = Y1(Y1+Z1)", "C = Z1 Z2", "D = W2 Z2", "E = d1 C^2", "H = (d1 Z2 + d2 W2)W1 C", "I = d1 C Z1", "U = E + A D", "V = E + B D", "S = U V", "X3 = S Y1 + (H + X2(I + A(Y2+Z2)))V Z1", "Y3 = S X1 + (H + Y2(I + B(X2+Z2)))U Z1", "Z3 = S Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("W1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("W2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("I"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("t14"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t17"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("I"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Mul{X: ast.Variable("t22"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t25"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g12o/edwards/xyz-1/addition/add-2008-blr-2",
		Tag:            "add-2008-blr-2",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[7],
		Operation:      "addition",
		Source:         "2008 Bernstein-–Lange-–Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2plusd1 = d2 + d1", "d1d1 = d1^2"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = Z1 Z2", "D = d1 C", "E = C^2", "F = d1d1 E", "G = (X1 + Z1)(X2 + Z2)", "H = (Y1 + Z1)(Y2 + Z2)", "I = A + G", "J = B + H", "K = (X1 + Y1)(X2 + Y2)", "U = C(F + d1 K(K + I + J + C))", "V = U + D F + K(d2(d1 E + G H + A B) + d2plusd1 I J)", "X3 = V + D(A+D)(G+D)", "Y3 = V + D(B+D)(H+D)", "Z3 = U + d2plusd1 C K^2"},
		Parameters:     []string{"d2plusd1", "d1d1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("d1d1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("K"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t14"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("I"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("d2plusd1"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Add{X: ast.Variable("t23"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("t24"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("t28"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t31")}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("K"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t32")}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Mul{X: ast.Variable("d2plusd1"), Y: ast.Variable("t33")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("t34")}}}},
	},
	{
		ID:             "g12o/edwards/xyz-1/addition/add-2008-blr-3",
		Tag:            "add-2008-blr-3",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[7],
		Operation:      "addition",
		Source:         "2008 Bernstein-–Lange-–Rezaeian Farashahi",
		AppliesTo:      "xyz-1",
		Assume:         []string{"d1d1 = d1^2"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = Z1 Z2", "D = d1 C", "E = C^2", "F = d1d1 E", "G = (X1+Z1)(X2+Z2)", "H = (Y1+Z1)(Y2+Z2)", "I = A+G", "J = B+H", "K = (X1+Y1)(X2+Y2)", "L = d1 K", "U = C(F+L(K+I+J+C))", "V = U+D F + L(d1 E + G H + A B)", "X3 = V + D(A+D)(G+D)", "Y3 = V + D(B+D)(H+D)", "Z3 = U"},
		Parameters:     []string{"d1d1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("d1d1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("K"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("L"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t14"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("L"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Add{X: ast.Variable("t18"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("t19"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Mul{X: ast.Variable("t23"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("U")}}},
	},
	{
		ID:             "g12o/edwards/xyz-1/addition/add-2008-blr-4",
		Tag:            "add-2008-blr-4",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[7],
		Operation:      "addition",
		Source:         "2008 Bernstein-–Lange-–Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2plusd1 = d2 + d1", "d1d1 = d1^2"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = Z1 Z2", "D = d1 C", "E = C^2", "F = D^2", "G = (X1 + Z1)(X2 + Z2)", "H = (Y1 + Z1)(Y2 + Z2)", "I = A + G", "J = B + H", "K = (X1 + Y1)(X2 + Y2)", "U = C(F + d1 K(K + I + J + C))", "V = U + D F + K(d2(d1 E + G H + A B) + d2plusd1 I J)", "X3 = V + D(A+D)(G+D)", "Y3 = V + D(B+D)(H+D)", "Z3 = U + d2plusd1 C K^2"},
		Parameters:     []string{"d2plusd1", "d1d1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("K"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t14"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("I"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("d2plusd1"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Add{X: ast.Variable("t23"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("t24"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("t28"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t31")}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("K"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t32")}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Mul{X: ast.Variable("d2plusd1"), Y: ast.Variable("t33")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("t34")}}}},
	},
	{
		ID:             "g12o/edwards/xyz-1/addition/add-2008-blr-5",
		Tag:            "add-2008-blr-5",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[7],
		Operation:      "addition",
		Source:         "2008 Bernstein-–Lange-–Rezaeian Farashahi",
		AppliesTo:      "xyz-1",
		Assume:         []string{"d1d1 = d1^2"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = Z1 Z2", "D = d1 C", "E = C^2", "F = D^2", "G = (X1+Z1)(X2+Z2)", "H = (Y1+Z1)(Y2+Z2)", "I = A+G", "J = B+H", "K = (X1+Y1)(X2+Y2)", "L = d1 K", "U = C(F+L(K+I+J+C))", "V = U+D F + L(d1 E + G H + A B)", "X3 = V + D(A+D)(G+D)", "Y3 = V + D(B+D)(H+D)", "Z3 = U"},
		Parameters:     []string{"d1d1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("K"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("L"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t14"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("L"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Add{X: ast.Variable("t18"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("t19"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Mul{X: ast.Variable("t23"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("U")}}},
	},
	{
		ID:             "g12o/edwards/xyz-1/addition/madd-2008-blr",
		Tag:            "madd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[7],
		Operation:      "addition",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"W1 = X1 + Y1", "w2 = X2 + Y2", "A = X2^2 + X2", "B = Y2^2 + Y2", "D = W1 Z1", "E = d1 Z1^2", "H = (E + d2 D) w2", "I = d1 Z1", "U = E + A D", "V = E + B D", "Z3 = U V", "X3 = Z3 Y2 + (H + X1(I + A(Y1 + Z1))) V", "Y3 = Z3 X2 + (H + Y1(I + B(X1 + Z1))) U"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("W1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("w2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("I"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("I"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("t18"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t20"), Y: ast.Variable("t19")}}}},
	},
	{
		ID:             "g12o/edwards/xyz-1/doubling/dbl-2008-blr",
		Tag:            "dbl-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[7],
		Operation:      "doubling",
		Source:         "2008 Bernstein-–Lange-–Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2d1 = d2/d1"},
		Compute:        []string{"A = X1^2", "B = A^2", "C = Y1^2", "D = C^2", "E = Z1^2", "F = d1 E^2", "G = d2d1(B+D)", "H = A E", "I = C E", "J = H+I", "K = G+d2 J", "Z3 = F+J+G", "X3 = K+H+D", "Y3 = K+I+B"},
		Parameters:     []string{"d2d1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("d2d1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("K"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("K"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("B")}}}},
	},
	{
		ID:             "g12o/edwards/xyz-1/doubling/dbl-2008-blr-2",
		Tag:            "dbl-2008-blr-2",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[7],
		Operation:      "doubling",
		Source:         "2008 Bernstein-–Lange-–Rezaeian Farashahi",
		AppliesTo:      "xyz-1",
		Assume:         []string{"sqrtd1^2 = d1"},
		Compute:        []string{"W1 = X1 + Y1", "E = (W1(W1 + Z1))^2", "X3 = ((sqrtd1 W1 + X1)Z1 + X1^2)^2", "Y3 = X3 + E", "Z3 = E + d1(Z1^2)^2"},
		Parameters:     []string{"sqrtd1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("W1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("W1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("sqrtd1"), Y: ast.Variable("W1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("t7"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g12o/edwards/xyz-1/scaling/scale",
		Tag:            "scale",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[7],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = A X1", "Y3 = A Y1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g12o/edwards/xyz/addition/add-2008-blr-1",
		Tag:            "add-2008-blr-1",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[6],
		Operation:      "addition",
		Source:         "2008 Bernstein-–Lange-–Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"W1 = X1 + Y1", "W2 = X2 + Y2", "A = X1(X1+Z1)", "B = Y1(Y1+Z1)", "C = Z1 Z2", "D = W2 Z2", "E = d1 C^2", "H = (d1 Z2 + d2 W2)W1 C", "I = d1 C Z1", "U = E + A D", "V = E + B D", "S = U V", "X3 = S Y1 + (H + X2(I + A(Y2+Z2)))V Z1", "Y3 = S X1 + (H + Y2(I + B(X2+Z2)))U Z1", "Z3 = S Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("W1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("W2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("W2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("I"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("t14"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t17"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("I"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Mul{X: ast.Variable("t22"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t25"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g12o/edwards/xyz/addition/add-2008-blr-2",
		Tag:            "add-2008-blr-2",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[6],
		Operation:      "addition",
		Source:         "2008 Bernstein-–Lange-–Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2plusd1 = d2 + d1", "d1d1 = d1^2"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = Z1 Z2", "D = d1 C", "E = C^2", "F = d1d1 E", "G = (X1 + Z1)(X2 + Z2)", "H = (Y1 + Z1)(Y2 + Z2)", "I = A + G", "J = B + H", "K = (X1 + Y1)(X2 + Y2)", "U = C(F + d1 K(K + I + J + C))", "V = U + D F + K(d2(d1 E + G H + A B) + d2plusd1 I J)", "X3 = V + D(A+D)(G+D)", "Y3 = V + D(B+D)(H+D)", "Z3 = U + d2plusd1 C K^2"},
		Parameters:     []string{"d2plusd1", "d1d1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("d1d1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("K"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t14"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("I"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("d2plusd1"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Add{X: ast.Variable("t23"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("t24"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("t28"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t31")}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("K"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t32")}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Mul{X: ast.Variable("d2plusd1"), Y: ast.Variable("t33")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("t34")}}}},
	},
	{
		ID:             "g12o/edwards/xyz/addition/add-2008-blr-4",
		Tag:            "add-2008-blr-4",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[6],
		Operation:      "addition",
		Source:         "2008 Bernstein-–Lange-–Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2plusd1 = d2 + d1", "d1d1 = d1^2"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = Z1 Z2", "D = d1 C", "E = C^2", "F = D^2", "G = (X1 + Z1)(X2 + Z2)", "H = (Y1 + Z1)(Y2 + Z2)", "I = A + G", "J = B + H", "K = (X1 + Y1)(X2 + Y2)", "U = C(F + d1 K(K + I + J + C))", "V = U + D F + K(d2(d1 E + G H + A B) + d2plusd1 I J)", "X3 = V + D(A+D)(G+D)", "Y3 = V + D(B+D)(H+D)", "Z3 = U + d2plusd1 C K^2"},
		Parameters:     []string{"d2plusd1", "d1d1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("K"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t14"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("I"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("d2plusd1"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Add{X: ast.Variable("t23"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("t24"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("t28"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("V"), Y: ast.Variable("t31")}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("K"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t32")}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Mul{X: ast.Variable("d2plusd1"), Y: ast.Variable("t33")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("t34")}}}},
	},
	{
		ID:             "g12o/edwards/xyz/addition/madd-2008-blr",
		Tag:            "madd-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[6],
		Operation:      "addition",
		Source:         "2008 Bernstein--Lange--Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"W1 = X1 + Y1", "w2 = X2 + Y2", "A = X2^2 + X2", "B = Y2^2 + Y2", "D = W1 Z1", "E = d1 Z1^2", "H = (E + d2 D) w2", "I = d1 Z1", "U = E + A D", "V = E + B D", "Z3 = U V", "X3 = Z3 Y2 + (H + X1(I + A(Y1 + Z1))) V", "Y3 = Z3 X2 + (H + Y1(I + B(X1 + Z1))) U"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("W1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("w2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("W1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("w2")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("I"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("I"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("t18"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t20"), Y: ast.Variable("t19")}}}},
	},
	{
		ID:             "g12o/edwards/xyz/doubling/dbl-2008-blr",
		Tag:            "dbl-2008-blr",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[6],
		Operation:      "doubling",
		Source:         "2008 Bernstein-–Lange-–Rezaeian Farashahi",
		AppliesTo:      "",
		Assume:         []string{"d2d1 = d2/d1"},
		Compute:        []string{"A = X1^2", "B = A^2", "C = Y1^2", "D = C^2", "E = Z1^2", "F = d1 E^2", "G = d2d1(B+D)", "H = A E", "I = C E", "J = H+I", "K = G+d2 J", "Z3 = F+J+G", "X3 = K+H+D", "Y3 = K+I+B"},
		Parameters:     []string{"d2d1"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("d1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("d2d1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("K"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("K"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("B")}}}},
	},
	{
		ID:             "g12o/edwards/xyz/scaling/scale",
		Tag:            "scale",
		Class:          "g12o",
		Shape:          shapes[0],
		Representation: representations[6],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = A X1", "Y3 = A Y1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g12o/hessian/standard/addition/add",
		Tag:            "add",
		Class:          "g12o",
		Shape:          shapes[1],
		Representation: representations[8],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = Y1^2 Z2 X2-Y2^2 Z1 X1", "Y3 = X1^2 Y2 Z2-X2^2 Y1 Z1", "Z3 = Z1^2 X2 Y2-Z2^2 X1 Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("t12"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g12o/hessian/standard/addition/add-2001-jq",
		Tag:            "add-2001-jq",
		Class:          "g12o",
		Shape:          shapes[1],
		Representation: representations[8],
		Operation:      "addition",
		Source:         "2001 Joye--Quisquater \"Hessian elliptic curves and side-channel attacks\"",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"T1 = X1", "T2 = Y1", "T3 = Z1", "T4 = X2", "T5 = Y2", "T6 = Z2", "T7 = T1 T6", "T1 = T1 T5", "T5 = T3 T5", "T3 = T3 T4", "T4 = T2 T4", "T2 = T2 T6", "T6 = T2 T7", "T2 = T2 T4", "T4 = T3 T4", "T3 = T3 T5", "T5 = T1 T5", "T1 = T1 T7", "T1 = T1-T4", "T2 = T2-T5", "T3 = T3-T6", "X3 = T2", "Y3 = T1", "Z3 = T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Variable("X2")}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Variable("Z2")}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T2")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("T1")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("T3")}}},
	},
	{
		ID:             "g12o/hessian/standard/addition/add2",
		Tag:            "add2",
		Class:          "g12o",
		Shape:          shapes[1],
		Representation: representations[8],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X1Y2 = X1 Y2", "X1Z2 = X1 Z2", "Y1Z2 = Y1 Z2", "Y1X2 = Y1 X2", "Z1X2 = Z1 X2", "Z1Y2 = Z1 Y2", "X3 = Y1X2 Y1Z2-Z1Y2 X1Y2", "Y3 = X1Z2 X1Y2-Y1X2 Z1X2", "Z3 = Z1Y2 Z1X2-X1Z2 Y1Z2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("X1Y2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("X1Z2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Y1Z2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Y1X2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Z1X2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Z1Y2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1Y2"), Y: ast.Variable("X1Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1X2"), Y: ast.Variable("Y1Z2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1X2"), Y: ast.Variable("Z1X2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1Z2"), Y: ast.Variable("X1Y2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1Z2"), Y: ast.Variable("Y1Z2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Z1Y2"), Y: ast.Variable("Z1X2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}}},
	},
	{
		ID:             "g12o/hessian/standard/addition/madd",
		Tag:            "madd",
		Class:          "g12o",
		Shape:          shapes[1],
		Representation: representations[8],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"X1Y2 = X1 Y2", "Y1X2 = Y1 X2", "Z1X2 = Z1 X2", "Z1Y2 = Z1 Y2", "X3 = Y1X2 Y1-Z1Y2 X1Y2", "Y3 = X1 X1Y2-Y1X2 Z1X2", "Z3 = Z1Y2 Z1X2-X1 Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("X1Y2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("Y1X2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Z1X2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Z1Y2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1Y2"), Y: ast.Variable("X1Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1X2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1X2"), Y: ast.Variable("Z1X2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X1Y2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Z1Y2"), Y: ast.Variable("Z1X2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}}},
	},
	{
		ID:             "g12o/hessian/standard/addition/mmadd",
		Tag:            "mmadd",
		Class:          "g12o",
		Shape:          shapes[1],
		Representation: representations[8],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"X1Y2 = X1 Y2", "Y1X2 = Y1 X2", "X3 = Y1X2 Y1-Y2 X1Y2", "Y3 = X1 X1Y2-Y1X2 X2", "Z3 = Y2 X2-X1 Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("X1Y2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("Y1X2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("X1Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1X2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1X2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X1Y2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}}},
	},
	{
		ID:             "g12o/hessian/standard/doubling/dbl",
		Tag:            "dbl",
		Class:          "g12o",
		Shape:          shapes[1],
		Representation: representations[8],
		Operation:      "doubling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = Y1(Z1^3-X1^3)", "Y3 = X1(Y1^3-Z1^3)", "Z3 = Z1(X1^3-Y1^3)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g12o/hessian/standard/doubling/dbl-2001-jq",
		Tag:            "dbl-2001-jq",
		Class:          "g12o",
		Shape:          shapes[1],
		Representation: representations[8],
		Operation:      "doubling",
		Source:         "2001 Joye--Quisquater \"Hessian elliptic curves and side-channel attacks\", applying the addition formulas to permuted input coordinates",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"T1 = Z1", "T2 = X1", "T3 = Y1", "T4 = Y1", "T5 = Z1", "T6 = X1", "T7 = T1 T6", "T1 = T1 T5", "T5 = T3 T5", "T3 = T3 T4", "T4 = T2 T4", "T2 = T2 T6", "T6 = T2 T7", "T2 = T2 T4", "T4 = T3 T4", "T3 = T3 T5", "T5 = T1 T5", "T1 = T1 T7", "T1 = T1-T4", "T2 = T2-T5", "T3 = T3-T6", "X3 = T2", "Y3 = T1", "Z3 = T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T2")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("T1")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("T3")}}},
	},
	{
		ID:             "g12o/hessian/standard/doubling/dbl-2007-hcd",
		Tag:            "dbl-2007-hcd",
		Class:          "g12o",
		Shape:          shapes[1],
		Representation: representations[8],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = Y1(X1+Y1)", "C = A + B", "D = Z1(Z1+X1)", "E = A + D", "F = C(X1-Y1)", "G = E(Z1-X1)", "Z3 = F Z1", "Y3 = -(F+G)X1", "X3 = G Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Z1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Neg{X: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("Y1")}}}},
	},
	{
		ID:             "g12o/hessian/standard/doubling/dbl-2007-hcd-2",
		Tag:            "dbl-2007-hcd-2",
		Class:          "g12o",
		Shape:          shapes[1],
		Representation: representations[8],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"R0 = X1^2", "R1 = X1+Y1", "R1 = Y1 R1", "R2 = Z1+X1", "R2 = Z1 R2", "R2 = R0+R2", "R1 = R0+R1", "R0 = X1-Y1", "R0 = R1 R0", "Z3 = R0 Z1", "R1 = Z1-X1", "R1 = R2 R1", "X3 = R1 Y1", "R2 = -(R0+R1)", "Y3 = R2 X1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Add{X: ast.Variable("R0"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Add{X: ast.Variable("R0"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("R0"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("Z1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("R0"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Neg{X: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("X1")}}}},
	},
	{
		ID:             "g12o/hessian/standard/doubling/dbl2",
		Tag:            "dbl2",
		Class:          "g12o",
		Shape:          shapes[1],
		Representation: representations[8],
		Operation:      "doubling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "XXX = X1 XX", "YY = Y1^2", "YYY = Y1 YY", "ZZ = Z1^2", "ZZZ = Z1 ZZ", "X3 = Y1(ZZZ-XXX)", "Y3 = X1(YYY-ZZZ)", "Z3 = Z1(XXX-YYY)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("XXX"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YYY"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZZ"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("ZZZ"), Y: ast.Variable("XXX")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("YYY"), Y: ast.Variable("ZZZ")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("XXX"), Y: ast.Variable("YYY")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t2")}}}},
	},
	{
		ID:             "g12o/hessian/standard/scaling/z",
		Tag:            "z",
		Class:          "g12o",
		Shape:          shapes[1],
		Representation: representations[8],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = A X1", "Y3 = A Y1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g12o/hessian/standard/tripling/tpl-2007-hcd",
		Tag:            "tpl-2007-hcd",
		Class:          "g12o",
		Shape:          shapes[1],
		Representation: representations[8],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = 3 d(Y1^3 (Z1^3 - X1^3) (X1^3 - Y1^3)- X1^3 (Y1^3 - Z1^3) (Y1^3 - Z1^3))", "Y3 = 3 d(X1^3 (Y1^3 - Z1^3) (X1^3 - Y1^3)- Y1^3 (Z1^3 - X1^3) (Z1^3 - X1^3))", "Z3 = (X1^3 + Y1^3 + Z1^3) ((Y1^3 - Z1^3) (Z1^3 - X1^3)-(X1^3 - Y1^3)^2)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("t12"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Sub{X: ast.Variable("t20"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Sub{X: ast.Variable("t22"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Sub{X: ast.Variable("t24"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Sub{X: ast.Variable("t26"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Mul{X: ast.Variable("t30"), Y: ast.Variable("t31")}}, ast.Assignment{LHS: ast.Variable("t35"), RHS: ast.Mul{X: ast.Variable("t33"), Y: ast.Variable("t34")}}, ast.Assignment{LHS: ast.Variable("t36"), RHS: ast.Mul{X: ast.Variable("t28"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("t37"), RHS: ast.Mul{X: ast.Variable("t32"), Y: ast.Variable("t36")}}, ast.Assignment{LHS: ast.Variable("t38"), RHS: ast.Sub{X: ast.Variable("t37"), Y: ast.Variable("t35")}}, ast.Assignment{LHS: ast.Variable("t39"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t38")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t39")}}, ast.Assignment{LHS: ast.Variable("t40"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t41"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t42"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t43"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t44"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t45"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t46"), RHS: ast.Sub{X: ast.Variable("t40"), Y: ast.Variable("t41")}}, ast.Assignment{LHS: ast.Variable("t47"), RHS: ast.Sub{X: ast.Variable("t42"), Y: ast.Variable("t43")}}, ast.Assignment{LHS: ast.Variable("t48"), RHS: ast.Sub{X: ast.Variable("t44"), Y: ast.Variable("t45")}}, ast.Assignment{LHS: ast.Variable("t49"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t50"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t51"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t52"), RHS: ast.Pow{X: ast.Variable("t48"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t53"), RHS: ast.Mul{X: ast.Variable("t46"), Y: ast.Variable("t47")}}, ast.Assignment{LHS: ast.Variable("t54"), RHS: ast.Add{X: ast.Variable("t49"), Y: ast.Variable("t50")}}, ast.Assignment{LHS: ast.Variable("t55"), RHS: ast.Add{X: ast.Variable("t54"), Y: ast.Variable("t51")}}, ast.Assignment{LHS: ast.Variable("t56"), RHS: ast.Sub{X: ast.Variable("t53"), Y: ast.Variable("t52")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t55"), Y: ast.Variable("t56")}}}},
	},
	{
		ID:             "g12o/hessian/standard/tripling/tpl-2007-hcd-2",
		Tag:            "tpl-2007-hcd-2",
		Class:          "g12o",
		Shape:          shapes[1],
		Representation: representations[8],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson, plus elimination of common subexpressions",
		AppliesTo:      "",
		Assume:         []string{"a = 3 d"},
		Compute:        []string{"XX = X1^2", "A = XX X1", "YY = Y1^2", "B = YY Y1", "ZZ = Z1^2", "C = ZZ Z1", "AB = A-B", "BC = B-C", "CA = C-A", "U = B CA", "V = A BC", "X3 = a(U AB-V BC)", "Y3 = a(V AB-U CA)", "Z3 = (A+B+C)(BC CA-AB^2)"},
		Parameters:     []string{"a"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("XX"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("ZZ"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("AB"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("BC"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("CA"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("CA")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("BC")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("BC")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("AB")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("CA")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("AB")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("AB"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("BC"), Y: ast.Variable("CA")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g12o/shortw/affine/addition/add",
		Tag:            "add",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[9],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"lambda = (Y1 + Y2)/(X1 + X2)", "X3 = lambda^2 + lambda + X1 + X2 + a2", "Y3 = lambda(X1 + X3) + X3 + Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Inv{X: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("lambda"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("lambda"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("lambda")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("lambda"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("Y1")}}}},
	},
	{
		ID:             "g12o/shortw/affine/doubling/dbl",
		Tag:            "dbl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[9],
		Operation:      "doubling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"lambda = X1 + Y1/X1", "X3 = lambda^2 + lambda + a2", "Y3 = lambda (X1 + X3) +X3 +Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Inv{X: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("lambda"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("lambda"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("lambda")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("lambda"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("Y1")}}}},
	},
	{
		ID:             "g12o/shortw/affine/scaling/copy",
		Tag:            "copy",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[9],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = X1", "Y3 = Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("Y1")}}},
	},
	{
		ID:             "g12o/shortw/extended-0/addition/add-2005-dl",
		Tag:            "add-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[10],
		Operation:      "addition",
		Source:         "2005 Doche--Lange / Higuchi Takagi; modified to compute and use ZZ,XZ",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 Z2", "B = X2 Z1", "C = A^2", "D = B^2", "E = A + B", "F = C + D", "G = Y1 ZZ2", "H = Y2 ZZ1", "I = G + H", "J = I E", "Z3 = F Z1 Z2", "X3 = A (H + D) + B (C+G)", "Y3 = (A J + F G) F + (J + Z3) X3", "ZZ3 = Z3^2", "XZ3 = X3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("I"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("J"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("XZ3"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g12o/shortw/extended-0/addition/madd-2005-dl",
		Tag:            "madd-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[10],
		Operation:      "addition",
		Source:         "2005 Doche--Lange / Al-Daoud et al 2002; modified to compute and use ZZ,XZ",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = Y1 + Y2 ZZ1", "B = X1 + X2 Z1", "C = B Z1", "Z3 = C^2", "ZZ3 = Z3^2", "D = X2 Z3", "X3 = A^2 + C (A + B^2 + a2 C)", "Y3 = (D + X3) (A C + Z3) + (Y2 + X2) ZZ3", "XZ3 = X3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("XZ3"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g12o/shortw/extended-0/doubling/dbl-2008-blr",
		Tag:            "dbl-2008-blr",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[10],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian-Farashahi \"Binary Edwards Curves\"",
		AppliesTo:      "",
		Assume:         []string{"sqrta6^2 = a6"},
		Compute:        []string{"A = X1^2", "B = Y1^2", "Z3 = XZ1^2", "X3 = (A + sqrta6 ZZ1)^2", "ZZ3 = Z3^2", "XZ3 = X3 Z3", "Y3 = B (B + X3 + Z3) + a6 ZZ3 + XZ3"},
		Parameters:     []string{"sqrta6"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("XZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("sqrta6"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("XZ3"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("XZ3")}}}},
	},
	{
		ID:             "g12o/shortw/extended-0/doubling/mdbl-2008-blr",
		Tag:            "mdbl-2008-blr",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[10],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian-Farashahi \"Binary Edwards Curves\", plus specialization to Z1=1, plus simplification",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"A = X1^2", "B = Y1^2", "Z3 = A", "ZZ3 = A^2", "X3 = ZZ3 + a6", "XZ3 = X3 Z3", "Y3 = B (B + X3 + Z3) + a6 ZZ3 + XZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("A")}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("ZZ3"), Y: ast.Variable("a6")}}, ast.Assignment{LHS: ast.Variable("XZ3"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("XZ3")}}}},
	},
	{
		ID:             "g12o/shortw/extended-1/addition/add-2005-dl",
		Tag:            "add-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[11],
		Operation:      "addition",
		Source:         "2005 Doche--Lange / Higuchi Takagi; modified to compute and use Z^2",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 Z2", "B = X2 Z1", "C = A^2", "D = B^2", "E = A + B", "F = C + D", "G = Y1 ZZ2", "H = Y2 ZZ1", "I = G + H", "J = I E", "Z3 = F Z1 Z2", "ZZ3 = Z3^2", "X3 = A (H + D) + B (C+G)", "Y3 = (A J + F G) F + (J + Z3) X3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("I"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("J"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g12o/shortw/extended-1/addition/madd-2005-dl",
		Tag:            "madd-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[11],
		Operation:      "addition",
		Source:         "2005 Doche--Lange / Al-Daoud et al 2002; modified to compute and use Z^2",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = Y1 + Y2 ZZ1", "B = X1 + X2 Z1", "C = B Z1", "Z3 = C^2", "ZZ3 = Z3^2", "D = X2 Z3", "X3 = A^2 + C (A + B^2 + a2 C)", "Y3 = (D + X3) (A C + Z3) + (Y2 + X2) ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g12o/shortw/extended-1/addition/madd-2007-kk",
		Tag:            "madd-2007-kk",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[11],
		Operation:      "addition",
		Source:         "2007(?) Kim--Kim \"A New Method for Speeding Up Arithmetic on Elliptic Curves over Binary Fields\"",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = X1 + X2 Z1", "B = Y1 + Y2 ZZ1", "C = A Z1", "D = C (B + C)", "Z3 = C^2", "ZZ3 = Z3^2", "X3 = B^2+ C  A^ 2 + D", "Y3 = (X3 + X2 Z3) D + (X2 + Y2) ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g12o/shortw/extended-1/doubling/dbl-2007-kk",
		Tag:            "dbl-2007-kk",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[11],
		Operation:      "doubling",
		Source:         "2007(?) Kim--Kim \"A New Method for Speeding Up Arithmetic on Elliptic Curves over Binary Fields\"",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = Y1^2", "Z3 = ZZ1 A", "ZZ3 = Z3^2", "X3 = A^2 + a6 ZZ1^2", "Y3 = B (B + X3 + Z3) + a6 ZZ3 + ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g12o/shortw/extended-1/doubling/dbl-2008-blr",
		Tag:            "dbl-2008-blr",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[11],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange--Rezaeian-Farashahi \"Binary Edwards Curves\"",
		AppliesTo:      "",
		Assume:         []string{"sqrta6^2 = a6"},
		Compute:        []string{"A = X1^2", "B = Y1^2", "Z3 = ZZ1 A", "ZZ3 = Z3^2", "X3 = (A+ sqrta6 ZZ1)^2", "Y3 = B (B + X3 + Z3) + a6 ZZ3 + ZZ3"},
		Parameters:     []string{"sqrta6"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("sqrta6"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g12o/shortw/jacobian/addition/add-2005-dl",
		Tag:            "add-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[12],
		Operation:      "addition",
		Source:         "2005 Doche--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"O1 = Z1^2", "O2 = Z2^2", "A = X1 O2", "B = X2 O1", "C = Y1 O2 Z2", "D = Y2 O1 Z1", "E = A + B", "F = C + D", "G = E Z1", "H = F X2 + G Y2", "Z3 = G Z2", "I = F + Z3", "X3 = a2 Z3^2 + F I + E E^2", "Y3 = I X3 + G^2 H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("O1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("O2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("O2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("O1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("O2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("O1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("G"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("I"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g12o/shortw/jacobian/addition/madd-2008-bl",
		Tag:            "madd-2008-bl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[12],
		Operation:      "addition",
		Source:         "2005 Doche--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z2=1"},
		Compute:        []string{"O1 = Z1^2", "B = X2 O1", "D = Y2 O1 Z1", "E = X1 + B", "F = Y1 + D", "Z3 = E Z1", "H = F X2 + Z3 Y2", "I = F + Z3", "G = Z3^2", "X3 = a2 G + F I + E E^2", "Y3 = I X3 + G H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("O1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("O1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("O1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("I"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g12o/shortw/jacobian/doubling/dbl-2005-dl",
		Tag:            "dbl-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[12],
		Operation:      "doubling",
		Source:         "2005 Doche--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = A^2", "C = Z1^2", "D = C^2", "X3 = B + a6 D^2", "Z3 = X1 C", "Y3 = B Z3 + (A + Y1 Z1 + Z3) X3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g12o/shortw/jacobian/doubling/mdbl-2008-bl",
		Tag:            "mdbl-2008-bl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[12],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1=1"},
		Compute:        []string{"A = X1^2", "B = A^2", "X3 = B + a6 ", "Z3 = X1 ", "Y3 = a6 (A + Y1 + Z3) + (A +Y1) B"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("a6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}}},
	},
	{
		ID:             "g12o/shortw/jacobian/scaling/scale",
		Tag:            "scale",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[12],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "B = A^2", "X3 = B X1", "Y3 = A B Y1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g12o/shortw/lambda/addition/add-2013-olar",
		Tag:            "add-2013-olar",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[13],
		Operation:      "addition",
		Source:         "2013 Oliveira--López--Aranha--Rodríguez-Henríquez \"Lambda coordinates for binary elliptic curves\"; database entry contributed by Chitchanok Chuengsatiansup",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = L1 Z2", "B = L2 Z1", "C = A + B", "D = X1 Z2", "E = X2 Z1", "F = D + E", "G = F^2", "H = C D", "I = C E", "J = C G", "K = J Z2", "X3 = H I", "L3 = (I + G)^2 + K (L1 + Z1)", "Z3 = K Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("L1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("L2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Variable("J"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("I"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("L1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("L3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("K"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g12o/shortw/lambda/doubling/dbl-2013-olar",
		Tag:            "dbl-2013-olar",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[13],
		Operation:      "doubling",
		Source:         "2013 Oliveira--López--Aranha--Rodríguez-Henríquez \"Lambda coordinates for binary elliptic curves\"; database entry contributed by Chitchanok Chuengsatiansup",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Z1^2", "B = L1^2", "C = L1 Z1", "D = a2 A", "E = B + C + D", "F = X1 Z1", "X3 = E^2", "Z3 = E A", "L3 = F^2 + X3 + E C + Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("L1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("L1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("L3"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g12o/shortw/lambda/doubling/dbl-2013-olar-2",
		Tag:            "dbl-2013-olar-2",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[13],
		Operation:      "doubling",
		Source:         "2013 Oliveira--López--Aranha--Rodríguez-Henríquez \"Lambda coordinates for binary elliptic curves\"; database entry contributed by Chitchanok Chuengsatiansup",
		AppliesTo:      "",
		Assume:         []string{"a21 = a2 + 1", "a226 = a2^2 + a6"},
		Compute:        []string{"A = Z1^2", "B = L1 + Z1", "C = L1 B", "D = a2 A", "E = C + D", "F = L1 + X1", "G = F^2", "H = A^2", "X3 = E^2", "Z3 = E A", "L3 = G (G + E + A) + a226 H + X3 + a21 Z3"},
		Parameters:     []string{"a21", "a226"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("L1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("L1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("L1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a21"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a226"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("L3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t2")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-0/addition/add-2005-dl",
		Tag:            "add-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[15],
		Operation:      "addition",
		Source:         "2005 Doche--Lange / Higuchi Takagi",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 Z2", "B = X2 Z1", "C = A^2", "D = B^2", "E = A + B", "F = C + D", "G = Y1 Z2^2", "H = Y2 Z1^2", "I = G + H", "J = I E", "Z3 = F Z1 Z2", "X3 = A (H + D) + B (C+G)", "Y3 = (A J + F G) F + (J + Z3) X3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("I"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("J"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-0/addition/madd-2005-dl",
		Tag:            "madd-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[15],
		Operation:      "addition",
		Source:         "2005 Doche--Lange / Al-Daoud et al 2002 ",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = Y1 + Y2 Z1^2", "B = X1 + X2 Z1", "C = B Z1", "Z3 = C^2", "D = X2 Z3", "X3 = A^2 + C (A + B^2 + a2 C)", "Y3 = (D + X3) (A C + Z3) + (Y2 + X2) Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("t12"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t14")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-0/addition/mmadd-2005-dl",
		Tag:            "mmadd-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[15],
		Operation:      "addition",
		Source:         "2005 Doche--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1 ", "Z2 = 1"},
		Compute:        []string{"A = Y1 + Y2 ", "B = X1 + X2 ", "Z3 = B^2", "D = X2 Z3", "X3 = A^2 + B (A + Z3 + a2 B)", "Y3 = (D + X3) (A B + Z3) + (Y2 + X2) Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-0/doubling/dbl-2005-dl",
		Tag:            "dbl-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[15],
		Operation:      "doubling",
		Source:         "2005 Doche--Lange, following Lopez-Dahab 1998",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Z1^2", "B = a6 A^2", "C =  X1^2", "Z3 = A C", "X3 =  C^2 + B", "Y3 = (Y1^2 + a2 Z3 + B) X3 + Z3 B "},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-0/doubling/dbl-2005-dl-a2-0",
		Tag:            "dbl-2005-dl-a2-0",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[15],
		Operation:      "doubling",
		Source:         "2005 Doche--Lange, following Lopez-Dahab",
		AppliesTo:      "lopezdahab-0",
		Assume:         []string{"sqrta6^2 = a6"},
		Compute:        []string{"A = X1^2", "B = sqrta6 Z1^2", "C = X1 Z1", "Z3 = C^2", "X3 = (A+B)^2", "Y3 = (B C + (Y1 + B) (A + B))^2"},
		Parameters:     []string{"sqrta6"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("sqrta6"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-0/doubling/dbl-2005-l",
		Tag:            "dbl-2005-l",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[15],
		Operation:      "doubling",
		Source:         "2005 Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 Z1", "B = X1^2", "C = B + Y1", "D = A C", "Z3 = A^2", "X3 = C^2 + D +a2 Z3", "Y3 = (Z3+D) X3 + B^2 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-0/doubling/mdbl-2005-dl",
		Tag:            "mdbl-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[15],
		Operation:      "doubling",
		Source:         "2005 Doche--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1=1"},
		Compute:        []string{"C = X1^2", "Z3 = C", "X3 = C^2 + a6 ", "Y3 = (Y1^2 + a2 Z3 + a6) X3 + a6 Z3 "},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("C")}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("a6")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("a6")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-1/addition/add-2005-dl",
		Tag:            "add-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[16],
		Operation:      "addition",
		Source:         "2005 Doche--Lange / Higuchi Takagi",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 Z2", "B = X2 Z1", "C = A^2", "D = B^2", "E = A + B", "F = C + D", "G = Y1 Z2^2", "H = Y2 Z1^2", "I = G + H", "J = I E", "Z3 = F Z1 Z2", "X3 = A (H + D) + B (C+G)", "Y3 = (A J + F G) F + (J + Z3) X3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("I"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("J"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-1/addition/madd-2005-dl",
		Tag:            "madd-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[16],
		Operation:      "addition",
		Source:         "2005 Doche--Lange / Al-Daoud et al 2002 ",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = Y1 + Y2 Z1^2", "B = X1 + X2 Z1", "C = B Z1", "Z3 = C^2", "D = X2 Z3", "X3 = A^2 + C (A + B^2 + a2 C)", "Y3 = (D + X3) (A C + Z3) + (Y2 + X2) Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("t12"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t14")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-1/addition/mmadd-2005-dl",
		Tag:            "mmadd-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[16],
		Operation:      "addition",
		Source:         "2005 Doche--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1 ", "Z2 = 1"},
		Compute:        []string{"A = Y1 + Y2 ", "B = X1 + X2 ", "Z3 = B^2", "D = X2 Z3", "X3 = A^2 + B (A + Z3 + a2 B)", "Y3 = (D + X3) (A B + Z3) + (Y2 + X2) Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-1/doubling/dbl-2005-dl",
		Tag:            "dbl-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[16],
		Operation:      "doubling",
		Source:         "2005 Doche--Lange, following Lopez-Dahab 1998",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Z1^2", "B = a6 A^2", "C =  X1^2", "Z3 = A C", "X3 =  C^2 + B", "Y3 = (Y1^2 + a2 Z3 + B) X3 + Z3 B "},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-1/doubling/dbl-2005-dl-a2-1",
		Tag:            "dbl-2005-dl-a2-1",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[16],
		Operation:      "doubling",
		Source:         "2005 Doche--Lange, following Lopez-Dahab",
		AppliesTo:      "lopezdahab-1",
		Assume:         []string{"sqrta6^2 = a6"},
		Compute:        []string{"A = X1^2", "B = sqrta6 Z1^2", "C = X1 Z1", "Z3 = C^2", "X3 = (A+B)^2", "Y3 = (A C + (Y1 + B) (A + B))^2"},
		Parameters:     []string{"sqrta6"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("sqrta6"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-1/doubling/dbl-2005-l",
		Tag:            "dbl-2005-l",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[16],
		Operation:      "doubling",
		Source:         "2005 Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 Z1", "B = X1^2", "C = B + Y1", "D = A C", "Z3 = A^2", "X3 = C^2 + D +a2 Z3", "Y3 = (Z3+D) X3 + B^2 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab-1/doubling/mdbl-2005-dl",
		Tag:            "mdbl-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[16],
		Operation:      "doubling",
		Source:         "2005 Doche--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1=1"},
		Compute:        []string{"C = X1^2", "Z3 = C", "X3 = C^2 + a6 ", "Y3 = (Y1^2 + a2 Z3 + a6) X3 + a6 Z3 "},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("C")}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("a6")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("a6")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab/addition/add-2005-dl",
		Tag:            "add-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[14],
		Operation:      "addition",
		Source:         "2005 Doche--Lange / Higuchi Takagi",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 Z2", "B = X2 Z1", "C = A^2", "D = B^2", "E = A + B", "F = C + D", "G = Y1 Z2^2", "H = Y2 Z1^2", "I = G + H", "J = I E", "Z3 = F Z1 Z2", "X3 = A (H + D) + B (C+G)", "Y3 = (A J + F G) F + (J + Z3) X3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("I"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("J"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab/addition/madd-2005-dl",
		Tag:            "madd-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[14],
		Operation:      "addition",
		Source:         "2005 Doche--Lange / Al-Daoud et al 2002 ",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = Y1 + Y2 Z1^2", "B = X1 + X2 Z1", "C = B Z1", "Z3 = C^2", "D = X2 Z3", "X3 = A^2 + C (A + B^2 + a2 C)", "Y3 = (D + X3) (A C + Z3) + (Y2 + X2) Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("t12"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t14")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab/addition/mmadd-2005-dl",
		Tag:            "mmadd-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[14],
		Operation:      "addition",
		Source:         "2005 Doche--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1 ", "Z2 = 1"},
		Compute:        []string{"A = Y1 + Y2 ", "B = X1 + X2 ", "Z3 = B^2", "D = X2 Z3", "X3 = A^2 + B (A + Z3 + a2 B)", "Y3 = (D + X3) (A B + Z3) + (Y2 + X2) Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab/doubling/dbl-2005-dl",
		Tag:            "dbl-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[14],
		Operation:      "doubling",
		Source:         "2005 Doche--Lange, following Lopez-Dahab 1998",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Z1^2", "B = a6 A^2", "C =  X1^2", "Z3 = A C", "X3 =  C^2 + B", "Y3 = (Y1^2 + a2 Z3 + B) X3 + Z3 B "},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab/doubling/dbl-2005-l",
		Tag:            "dbl-2005-l",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[14],
		Operation:      "doubling",
		Source:         "2005 Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 Z1", "B = X1^2", "C = B + Y1", "D = A C", "Z3 = A^2", "X3 = C^2 + D +a2 Z3", "Y3 = (Z3+D) X3 + B^2 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g12o/shortw/lopezdahab/doubling/mdbl-2005-dl",
		Tag:            "mdbl-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[14],
		Operation:      "doubling",
		Source:         "2005 Doche--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1=1"},
		Compute:        []string{"C = X1^2", "Z3 = C", "X3 = C^2 + a6 ", "Y3 = (Y1^2 + a2 Z3 + a6) X3 + a6 Z3 "},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("C")}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("a6")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("a6")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g12o/shortw/projective/addition/add-2005-dl",
		Tag:            "add-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[17],
		Operation:      "addition",
		Source:         "2005 Doche--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Y1 Z2 + Z1 Y2", "B = X1 Z2 + Z1 X2", "C = B^2", "D = Z1 Z2", "E = (A^2 + A B + a2 C) D + B C", "X3 = B E", "Y3 = C (A X1 + Y1 B) Z2 + (A + B) E", "Z3 = B^3 D"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t14"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t17"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t18"), Y: ast.Variable("D")}}}},
	},
	{
		ID:             "g12o/shortw/projective/addition/add-2005-dl-2",
		Tag:            "add-2005-dl-2",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[17],
		Operation:      "addition",
		Source:         "2005 Doche--Lange, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Y1 Z2 + Z1 Y2", "B = X1 Z2 + Z1 X2", "C = B^2", "D = Z1 Z2", "E = B C", "F = (A^2 + A B + a2 C) D + E", "X3 = B F", "Y3 = C (A X1 + Y1 B) Z2 + (A + B) F", "Z3 = E D"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t12"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t16"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("D")}}}},
	},
	{
		ID:             "g12o/shortw/projective/addition/add-2008-bl",
		Tag:            "add-2008-bl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[17],
		Operation:      "addition",
		Source:         "2008 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Y1Z2 = Y1 Z2", "X1Z2 = X1 Z2", "A = Y1Z2 + Z1 Y2", "B = X1Z2 + Z1 X2", "AB = A + B", "C = B^2", "D = Z1 Z2", "E = B C", "F = (A AB + a2 C) D + E", "X3 = B F", "Y3 = C (A X1Z2 + B Y1Z2) + AB F", "Z3 = E D"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Y1Z2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("X1Z2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("Y1Z2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("X1Z2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("AB"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("AB")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Y1Z2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1Z2")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("AB"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("D")}}}},
	},
	{
		ID:             "g12o/shortw/projective/addition/madd-2005-dl",
		Tag:            "madd-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[17],
		Operation:      "addition",
		Source:         "2005 Doche--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1 "},
		Compute:        []string{"A = Y1 + Z1 Y2", "B = X1 + Z1 X2", "C = B^2", "E = B C", "F = (A^2 + A B + a2 C) Z1 + E", "X3 = B F", "Y3 = C (A X1 + Y1 B) + (A + B) F", "Z3 = E Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g12o/shortw/projective/addition/madd-2008-bl",
		Tag:            "madd-2008-bl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[17],
		Operation:      "addition",
		Source:         "2008 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = Y1 + Z1 Y2", "B = X1 + Z1 X2", "AB = A + B", "C = B^2", "E = B C", "F = (A AB + a2 C) Z1 + E", "X3 = B F", "Y3 = C (A X1 + B Y1) + AB F", "Z3 = E Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("AB"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("AB")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("AB"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g12o/shortw/projective/addition/mmadd-2008-bl",
		Tag:            "mmadd-2008-bl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[17],
		Operation:      "addition",
		Source:         "2008 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"A = Y1 + Y2", "B = X1 + X2", "AB = A + B", "C = B^2", "Z3 = B C", "F = A AB + a2 C + Z3", "X3 = B F", "Y3 = C (A X1 + B Y1) + AB F"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("AB"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("AB")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("AB"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}}},
	},
	{
		ID:             "g12o/shortw/projective/doubling/dbl-2005-dl",
		Tag:            "dbl-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[17],
		Operation:      "doubling",
		Source:         "2005 Doche--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = A + Y1 Z1", "C = X1 Z1", "D = C^2", "E = (B^2 + B C + a2 D)", "X3 = C E", "Y3 = (B + C) E + A^2 C", "Z3 = C D"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}}},
	},
	{
		ID:             "g12o/shortw/projective/doubling/dbl-2008-bl",
		Tag:            "dbl-2008-bl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[17],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = A + Y1 Z1", "C = X1 Z1", "BC = B + C", "D = C^2", "E = B BC + a2 D", "X3 = C E", "Y3 = BC E + A^2 C", "Z3 = C D"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("BC"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("BC")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("BC"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}}},
	},
	{
		ID:             "g12o/shortw/projective/doubling/mdbl-2005-dl",
		Tag:            "mdbl-2005-dl",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[17],
		Operation:      "doubling",
		Source:         "2005 Doche--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"A = X1^2", "B = A + Y1", "E = (B^2 + B X1 + a2 A)", "X3 = X1 E", "Y3 = (B + X1) E + A^2 X1", "Z3 = X1 A"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("A")}}}},
	},
	{
		ID:             "g12o/shortw/projective/scaling/scale",
		Tag:            "scale",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[17],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = A X1", "Y3 = A Y1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g12o/shortw/xz/diffadd/dadd-2003-s",
		Tag:            "dadd-2003-s",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "diffadd",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.2, plus a1 = 1, plus b8 = a6",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X5 = Z1(X2^2 X3^2 + a6 Z2^2 Z3^2)", "Z5 = X1((X2+Z2)(X3+Z3)-X2 X3-Z2 Z3)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g12o/shortw/xz/diffadd/dadd-2003-s-2",
		Tag:            "dadd-2003-s-2",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "diffadd",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.2, plus a1 = 1, plus b8 = a6, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X2 X3", "B = Z2 Z3", "X5 = Z1(A^2 + a6 B^2)", "Z5 = X1((X2+Z2)(X3+Z3)-A-B)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g12o/shortw/xz/diffadd/mdadd-2003-s",
		Tag:            "mdadd-2003-s",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "diffadd",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.1, plus Z1=1, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"A = X2 Z3", "B = X3 Z2", "Z5 = (A+B)^2", "X5 = X1 Z5 + A B"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z5")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}}},
	},
	{
		ID:             "g12o/shortw/xz/diffadd/mdadd-2003-s-2",
		Tag:            "mdadd-2003-s-2",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "diffadd",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.2, plus a1 = 1, plus b8 = a6, plus common-subexpression elimination, plus Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"A = X2 X3", "B = Z2 Z3", "X5 = A^2 + a6 B^2", "Z5 = X1((X2+Z2)(X3+Z3)-A-B)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("t7"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g12o/shortw/xz/doubling/dbl-2003-s",
		Tag:            "dbl-2003-s",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "doubling",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.2, plus a1 = 1, plus b8 = a6",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = X1^4 + a6 Z1^4", "Z3 = (X1 Z1)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g12o/shortw/xz/doubling/dbl-2003-s-2",
		Tag:            "dbl-2003-s-2",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "doubling",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.2, plus a1 = 1, plus b8 = a6, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX1 = X1^2", "ZZ1 = Z1^2", "X3 = XX1^2 + a6 ZZ1^2", "Z3 = XX1 ZZ1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}}},
	},
	{
		ID:             "g12o/shortw/xz/doubling/dbl-2003-s-3",
		Tag:            "dbl-2003-s-3",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "doubling",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.2, plus a1 = 1, plus b8 = a6, plus a6 = sqrta6^2, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"sqrta6^2 = a6"},
		Compute:        []string{"XX1 = X1^2", "ZZ1 = Z1^2", "X3 = (XX1 + sqrta6 ZZ1)^2", "Z3 = XX1 ZZ1"},
		Parameters:     []string{"sqrta6"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("sqrta6"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}}},
	},
	{
		ID:             "g12o/shortw/xz/doubling/dbl-2003-s-4",
		Tag:            "dbl-2003-s-4",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "doubling",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.2, plus a1 = 1, plus b8 = a6, plus a6 = roota6^4, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"roota6^4 = a6"},
		Compute:        []string{"X3 = ((X1 + roota6 Z1)^2)^2", "Z3 = (X1 Z1)^2"},
		Parameters:     []string{"roota6"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("roota6"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g12o/shortw/xz/doubling/mdbl-2003-s",
		Tag:            "mdbl-2003-s",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "doubling",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.2, plus a1 = 1, plus b8 = a6, plus Z1 = 1, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"Z3 = X1^2", "X3 = Z3^2 + a6"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("a6")}}}},
	},
	{
		ID:             "g12o/shortw/xz/ladder/ladd-2003-s",
		Tag:            "ladd-2003-s",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "ladder",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.2, plus a1 = 1, plus b8 = a6",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X4 = X2^4 + a6 Z2^4", "Z4 = (X2 Z2)^2", "X5 = Z1(X2^2 X3^2 + a6 Z2^2 Z3^2)", "Z5 = X1((X2+Z2)(X3+Z3)-X2 X3-Z2 Z3)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("t12"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Sub{X: ast.Variable("t16"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Pow{X: ast.Variable("t18"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t19")}}}},
	},
	{
		ID:             "g12o/shortw/xz/ladder/ladd-2003-s-2",
		Tag:            "ladd-2003-s-2",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "ladder",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.2, plus a1 = 1, plus b8 = a6, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X2 X3", "B = Z2 Z3", "XX2 = X2^2", "ZZ2 = Z2^2", "X4 = XX2^2 + a6 ZZ2^2", "Z4 = XX2 ZZ2", "X5 = Z1(A^2 + a6 B^2)", "Z5 = X1((X2+Z2)(X3+Z3)-A-B)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("XX2"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("XX2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Variable("XX2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("t11"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g12o/shortw/xz/ladder/ladd-2003-s-3",
		Tag:            "ladd-2003-s-3",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "ladder",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.2, plus a1 = 1, plus b8 = a6, plus a6 = sqrta6^2, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"sqrta6^2 = a6"},
		Compute:        []string{"A = X2 X3", "B = Z2 Z3", "XX2 = X2^2", "ZZ2 = Z2^2", "X4 = (XX2 + sqrta6 ZZ2)^2", "Z4 = XX2 ZZ2", "X5 = Z1(A + sqrta6 B)^2", "Z5 = X1((X2+Z2)(X3+Z3)-A-B)^2"},
		Parameters:     []string{"sqrta6"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("XX2"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("sqrta6"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Variable("XX2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("sqrta6"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("t9"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g12o/shortw/xz/ladder/ladd-2003-s-4",
		Tag:            "ladd-2003-s-4",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "ladder",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.2, plus a1 = 1, plus b8 = a6, plus a6 = roota6^4, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"a6 = sqrta6^2", "sqrta6 = roota6^2"},
		Compute:        []string{"A = X2 X3", "B = Z2 Z3", "X4 = ((X2 + roota6 Z2)^2)^2", "Z4 = (X2 Z2)^2", "X5 = Z1(A + sqrta6 B)^2", "Z5 = X1((X2+Z2)(X3+Z3)-A-B)^2"},
		Parameters:     []string{"sqrta6", "roota6"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("roota6"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("sqrta6"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("t11"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g12o/shortw/xz/ladder/mladd-2003-s",
		Tag:            "mladd-2003-s",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "ladder",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.1, plus Z1=1, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"A = X2 Z3", "B = X3 Z2", "XX2 = X2^2", "ZZ2 = Z2^2", "Z5 = (A+B)^2", "X5 = X1 Z5 + A B", "X4 = XX2^2 + a6 ZZ2^2", "Z4 = XX2 ZZ2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("XX2"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z5")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("XX2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("ZZ2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a6"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Variable("XX2"), Y: ast.Variable("ZZ2")}}}},
	},
	{
		ID:             "g12o/shortw/xz/ladder/mladd-2003-s-2",
		Tag:            "mladd-2003-s-2",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "ladder",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.1, plus Z1=1, plus a6 = sqrta6^2, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "a6 = sqrta6^2"},
		Compute:        []string{"A = X2 Z3", "B = X3 Z2", "XX2 = X2^2", "ZZ2 = Z2^2", "Z5 = (A+B)^2", "X5 = X1 Z5 + A B", "X4 = (XX2 + sqrta6 ZZ2)^2", "Z4 = XX2 ZZ2"},
		Parameters:     []string{"sqrta6"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("XX2"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z5")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("sqrta6"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Variable("XX2"), Y: ast.Variable("ZZ2")}}}},
	},
	{
		ID:             "g12o/shortw/xz/ladder/mladd-2003-s-3",
		Tag:            "mladd-2003-s-3",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "ladder",
		Source:         "2003 Stam \"On Montgomery-like representations for elliptic curves over GF(2^k)\", Section 3.2, plus a1 = 1, plus b8 = a6, plus a6 = sqrta6^2, plus common-subexpression elimination, plus Z1 = 1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "sqrta6^2 = a6"},
		Compute:        []string{"A = X2 X3", "B = Z2 Z3", "XX2 = X2^2", "ZZ2 = Z2^2", "X4 = (XX2 + sqrta6 ZZ2)^2", "Z4 = XX2 ZZ2", "X5 = (A + sqrta6 B)^2", "Z5 = X1((X2+Z2)(X3+Z3)-A-B)^2"},
		Parameters:     []string{"sqrta6"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("XX2"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("sqrta6"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Variable("XX2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("sqrta6"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g12o/shortw/xz/scaling/scale",
		Tag:            "scale",
		Class:          "g12o",
		Shape:          shapes[2],
		Representation: representations[18],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = X1 / Z1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/2dik/standard/addition/add-2006-dik",
		Tag:            "add-2006-dik",
		Class:          "g1p",
		Shape:          shapes[3],
		Representation: representations[19],
		Operation:      "addition",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 197, middle display, plus substitution Z2=1, plus simplification, plus projectification",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Y1/Z1^2-Y2/Z2^2", "B = (X1/Z1)-(X2/Z2)", "D = (X1/Z1) B^2", "X3 = A^2-a B^2-D-(X2/Z2) B^2", "Y3 = A B (D-X3)-(Y1/Z1^2) B^4", "Z3 = B^2", "ZZ3 = Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Inv{X: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Inv{X: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Inv{X: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Inv{X: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("t14"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Sub{X: ast.Variable("t20"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t21"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Inv{X: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("t24"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t28")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t29"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/2dik/standard/addition/add-2006-dik-2",
		Tag:            "add-2006-dik-2",
		Class:          "g1p",
		Shape:          shapes[3],
		Representation: representations[19],
		Operation:      "addition",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 197, middle display, plus substitution Z2=1, plus simplification, plus projectification, plus clearing denominators",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Y1 Z2^2-Y2 Z1^2", "B = X1 Z2-X2 Z1", "D = Z1 Z2^2 B^2 X1", "U = A^2-a B^2 Z1^2 Z2^2-D-X2 B^2 Z1^2 Z2", "X3 = U", "Y3 = Z1 Z2 A B (D-U)-Z1^2 Z2^4 Y1 B^4", "Z3 = Z1^2 Z2^2 B^2", "ZZ3 = Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("t15"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("t14"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("t12"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Sub{X: ast.Variable("t22"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("t23"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("U")}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Variable("t26"), Y: ast.Variable("t28")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("t25"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t31")}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t32")}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t33")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t34"), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("t35"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t36"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t37"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t38"), RHS: ast.Mul{X: ast.Variable("t36"), Y: ast.Variable("t37")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t35"), Y: ast.Variable("t38")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/2dik/standard/addition/add-2006-dik-3",
		Tag:            "add-2006-dik-3",
		Class:          "g1p",
		Shape:          shapes[3],
		Representation: representations[19],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange; derived from 2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 197, middle display, by substitution Z2=1, simplification, projectification, clearing denominators, common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Y1 ZZ2-Y2 ZZ1", "AA = A^2", "X2Z1 = X2 Z1", "B = X1 Z2-X2Z1", "C = B Z2", "E = C Z1", "EE = E^2", "F = E C", "D = F X1", "U = AA-a EE-D-X2Z1 E B", "X3 = 2 U", "Y3 = 2 ((E+A)^2-EE-AA) (D-U)-Y1 (2 F)^2", "Z3 = 2 EE", "ZZ3 = Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X2Z1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("X2Z1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("EE"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X2Z1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("AA"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("t10"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("t12"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/2dik/standard/addition/madd-2006-dik",
		Tag:            "madd-2006-dik",
		Class:          "g1p",
		Shape:          shapes[3],
		Representation: representations[19],
		Operation:      "addition",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 197, middle display, plus reversal of roles of 1 and 2",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = Y2 ZZ1-Y1", "B = X2 Z1-X1", "C = B Z1", "Z3 = C^2", "D = X2 Z3", "E = A^2", "F = X1 B C", "X3 = E-a Z3-D-F", "G = Z3^2", "H = A C", "Y3 = H (D-X3)-Y2 G", "ZZ3 = G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("G")}}},
	},
	{
		ID:             "g1p/2dik/standard/addition/madd-2007-bl",
		Tag:            "madd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[3],
		Representation: representations[19],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = Y2 ZZ1-Y1", "AA = A^2", "B = X2 Z1-X1", "C = B Z1", "CC = C^2", "D = 2 X2 CC", "F = X1 B C", "Z3 = 2 CC", "ZZ3 = Z3^2", "X3 = 2 (AA-F)-a Z3-D", "Y3 = ((A+C)^2-AA-CC) (D-X3)-Y2 ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("CC"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("AA"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("t13")}}}},
	},
	{
		ID:             "g1p/2dik/standard/addition/mmadd-2006-dik",
		Tag:            "mmadd-2006-dik",
		Class:          "g1p",
		Shape:          shapes[3],
		Representation: representations[19],
		Operation:      "addition",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 197, middle display, plus substitution Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"A = Y1-Y2", "B = X1-X2", "C = B", "Z3 = C^2", "D = X1 Z3", "E = A^2", "F = X2 B C", "X3 = E - a Z3 - D - F", "G = Z3^2", "H = A C", "Y3 = H(D-X3) - Y1 G", "ZZ3 = G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Variable("B")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("G")}}},
	},
	{
		ID:             "g1p/2dik/standard/addition/mmadd-20080308-bl",
		Tag:            "mmadd-20080308-bl",
		Class:          "g1p",
		Shape:          shapes[3],
		Representation: representations[19],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"A = Y2-Y1", "AA = A^2", "B = X2-X1", "CC = B^2", "D = 2 X2 CC", "F = X1 CC", "Z3 = 2 CC", "ZZ3 = Z3^2", "X3 = 2 (AA-F)-a Z3-D", "Y3 = ((A+B)^2-AA-CC) (D-X3)-Y2 ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("CC"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("AA"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/2dik/standard/addition/mmadd-20080313-bl",
		Tag:            "mmadd-20080313-bl",
		Class:          "g1p",
		Shape:          shapes[3],
		Representation: representations[19],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"A = Y2-Y1", "AA = A^2", "B = X2-X1", "CC = B^2", "F = X1 CC", "Z3 = 2 CC", "D = X2 Z3", "ZZ3 = Z3^2", "X3 = 2 (AA-F)-a Z3-D", "Y3 = ((A+B)^2-AA-CC) (D-X3)-Y2 ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("CC"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("AA"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g1p/2dik/standard/doubling/dbl-2006-dik",
		Tag:            "dbl-2006-dik",
		Class:          "g1p",
		Shape:          shapes[3],
		Representation: representations[19],
		Operation:      "doubling",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 196, bottom display",
		AppliesTo:      "",
		Assume:         []string{"a16 = 16 a"},
		Compute:        []string{"A = X1^2", "B = X1^2-a16 Z1^2", "YT = Y1 B", "X3 = B^2", "Z3 = 4 Y1^2", "C = X1^2 a Z1^2", "D = Z3^2", "E = a (Z3-4 C)", "Y3 = YT (2 X3+E+256 C)", "ZZ3 = D"},
		Parameters:     []string{"a16"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a16"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("YT"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(256), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("YT"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("D")}}},
	},
	{
		ID:             "g1p/2dik/standard/doubling/dbl-2006-dik-2",
		Tag:            "dbl-2006-dik-2",
		Class:          "g1p",
		Shape:          shapes[3],
		Representation: representations[19],
		Operation:      "doubling",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 196, bottom display, plus elimination of common subexpressions",
		AppliesTo:      "",
		Assume:         []string{"a4 = 4 a"},
		Compute:        []string{"A = X1^2", "U = a4 ZZ1", "B = A-4 U", "C = A U", "Z3 = (2 Y1)^2", "X3 = B^2", "Y3 = Y1 B(2(X3+32 C)+a(Z3-C))", "ZZ3 = Z3^2"},
		Parameters:     []string{"a4"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("a4"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(32), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/2dik/standard/doubling/dbl-2007-bl",
		Tag:            "dbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[3],
		Representation: representations[19],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a"},
		Compute:        []string{"A = X1^2", "U = a2 ZZ1", "B = A-8 U", "C = A U", "YY = Y1^2", "YY2 = 2 YY", "Z3 = 2 YY2", "X3 = B^2", "V = (Y1+B)^2-YY-X3", "Y3 = V(X3+64 C+a(YY2-C))", "ZZ3 = Z3^2"},
		Parameters:     []string{"a2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("YY2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(64), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/2dik/standard/doubling/mdbl-2007-bl",
		Tag:            "mdbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[3],
		Representation: representations[19],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a", "a16 = 16 a", "Z1 = 1"},
		Compute:        []string{"A = X1^2", "B = A-a16", "C = a2 A", "YY = Y1^2", "YY2 = 2 YY", "Z3 = 2 YY2", "X3 = B^2", "V = (Y1+B)^2-YY-X3", "Y3 = V(X3+64 C+a(YY2-C))", "ZZ3 = Z3^2"},
		Parameters:     []string{"a2", "a16"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("a16")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("YY2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(64), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/2dik/standard/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[3],
		Representation: representations[19],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = X1 A", "Y3 = Y1 A^2", "Z3 = 1", "ZZ3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/3dik/standard/addition/add-2006-dik",
		Tag:            "add-2006-dik",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "addition",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 199, top display, plus Z2=1, plus simplification, plus projectification",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"D = Y2/Z2^3-Y1/Z1^3", "Z3 = X2/Z2^2-X1/Z1^2", "X3 = D^2-Z3^3-3 a Z3^2-2 Z3^2 X1/Z1^2", "Y3 = D(Z3^2 X1/Z1^2-X3)-Z3^3 Y1/Z1^3", "ZZ3 = Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Inv{X: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Inv{X: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Inv{X: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Inv{X: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Inv{X: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("t15"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Sub{X: ast.Variable("t23"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t24"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Inv{X: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Variable("t25"), Y: ast.Variable("t28")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Sub{X: ast.Variable("t29"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Inv{X: ast.Variable("t32")}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t33")}}, ast.Assignment{LHS: ast.Variable("t35"), RHS: ast.Mul{X: ast.Variable("t31"), Y: ast.Variable("t34")}}, ast.Assignment{LHS: ast.Variable("t36"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t36"), Y: ast.Variable("t35")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/3dik/standard/addition/add-2006-dik-2",
		Tag:            "add-2006-dik-2",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "addition",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 199, top display, plus Z2=1, plus simplification, plus projectification, plus denominator clearing",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X2 Z1^2-X1 Z2^2", "B = Y2 Z1^3-Y1 Z2^3", "X3 = B^2-A^3-Z1^2 Z2^2 3 a A^2-Z2^2 2 A^2 X1", "Y3 = B(Z2^2 A^2 X1-X3)-Z2^3 A^3 Y1", "Z3 = Z1 Z2 A", "ZZ3 = Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t14"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Sub{X: ast.Variable("t22"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t23"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("t25"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("t24"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Sub{X: ast.Variable("t27"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Mul{X: ast.Variable("t30"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Mul{X: ast.Variable("t29"), Y: ast.Variable("t31")}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t28")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t33"), Y: ast.Variable("t32")}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t34")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/3dik/standard/addition/add-2006-dik-3",
		Tag:            "add-2006-dik-3",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "addition",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 199, top display, plus Z2=1, plus simplification, plus projectification, plus denominator clearing, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"a3 = 3 a"},
		Compute:        []string{"A = X2 ZZ1-X1 ZZ2", "B = Y2 Z1 ZZ1-Y1 Z2 ZZ2", "C = Z2 A", "CC = C^2", "D = X1 CC", "Z3 = Z1 C", "E = Z3^2", "X3 = B^2-A A^2-a3 E-2 D", "Y3 = B(D-X3)-Y1 C CC", "ZZ3 = E"},
		Parameters:     []string{"a3"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("CC"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t16"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("E")}}},
	},
	{
		ID:             "g1p/3dik/standard/addition/add-2007-bblp",
		Tag:            "add-2007-bblp",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "addition",
		Source:         "2007 Bernstein--Birkner--Lange--Peters",
		AppliesTo:      "",
		Assume:         []string{"a3 = 3 a"},
		Compute:        []string{"ZZZ2 = Z2 ZZ2", "ZZZ1 = Z1 ZZ1", "A = X2 ZZ1-X1 ZZ2", "B = Y2 ZZZ1-Y1 ZZZ2", "AA = A^2", "C = (Z2+A)^2-ZZ2-AA", "CC = C^2", "CC8 = 8 CC", "D = X1 CC8", "Z3 = (Z1+C)^2-ZZ1-CC", "E = Z3^2", "X3 = 16(B^2-A AA)-D-a3 E", "Y3 = 2 B(D-2 X3)-Y1 C CC8", "ZZ3 = E"},
		Parameters:     []string{"a3"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("ZZZ2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("ZZZ1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("ZZZ2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZZ1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("CC"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("CC8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("CC8")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("t7"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("CC")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Constant(16), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("CC8")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t21"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("E")}}},
	},
	{
		ID:             "g1p/3dik/standard/addition/madd-2006-dik",
		Tag:            "madd-2006-dik",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "addition",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 199, top display, plus reversal of roles of 1 and 2",
		AppliesTo:      "",
		Assume:         []string{"a3 = 3 a", "Z2 = 1"},
		Compute:        []string{"A = X2 ZZ1", "B = Y2 ZZ1 Z1", "C = X1-A", "D = Y1-B", "Z3 = Z1 C", "E = Z3^2", "F = C^2", "G = C F", "H = A F", "X3 = D^2-G-a3 E-2 H", "Y3 = D(H-X3)-B G", "ZZ3 = E"},
		Parameters:     []string{"a3"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Sub{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("E")}}},
	},
	{
		ID:             "g1p/3dik/standard/addition/madd-2007-bblp",
		Tag:            "madd-2007-bblp",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "addition",
		Source:         "2007 Bernstein--Birkner--Lange--Peters",
		AppliesTo:      "",
		Assume:         []string{"a3 = 3 a", "Z2 = 1"},
		Compute:        []string{"A = X2 ZZ1", "B = Y2 ZZ1 Z1", "C = X1-A", "D = 2(Y1-B)", "F = C^2", "F4 = 4 F", "Z3 = (Z1+C)^2-ZZ1-F", "E = Z3^2", "G = C F4", "H = A F4", "X3 = D^2-G-2 H-a3 E", "Y3 = D(H-X3)-2 B G", "ZZ3 = E"},
		Parameters:     []string{"a3"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F4"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("F4")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("F4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("E")}}},
	},
	{
		ID:             "g1p/3dik/standard/addition/mmadd-2006-dik",
		Tag:            "mmadd-2006-dik",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "addition",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 199, top display, plus Z2=1",
		AppliesTo:      "",
		Assume:         []string{"a3 = 3 a", "Z1 = 1", "Z2 = 1"},
		Compute:        []string{"A = X1", "B = Y1", "C = X2-A", "D = Y2-B", "Z3 = C", "E = Z3^2", "F = C^2", "G = C F", "H = A F", "X3 = D^2-G-a3 E-2 H", "Y3 = D(H-X3)-B G", "ZZ3 = E"},
		Parameters:     []string{"a3"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("C")}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("E")}}},
	},
	{
		ID:             "g1p/3dik/standard/addition/mmadd-2007-bblp",
		Tag:            "mmadd-2007-bblp",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "addition",
		Source:         "2007 Bernstein--Birkner--Lange--Peters",
		AppliesTo:      "",
		Assume:         []string{"a3 = 3 a", "Z1 = 1", "Z2 = 1"},
		Compute:        []string{"C = X1-X2", "D = 2(Y1-Y2)", "F = C^2", "F4 = 4 F", "Z3 = 2 C", "G = C F4", "H = X2 F4", "X3 = D^2-G-2 H-a3 F4", "Y3 = D(H-X3)-2 Y2 G", "ZZ3 = F4"},
		Parameters:     []string{"a3"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F4"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("F4")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("F4")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("F4")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("F4")}}},
	},
	{
		ID:             "g1p/3dik/standard/doubling/dbl-2006-dik",
		Tag:            "dbl-2006-dik",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "doubling",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 198, bottom display, plus correction from 2007 Bernstein--Birkner--Lange--Peters to incorporate the missing -3a term",
		AppliesTo:      "",
		Assume:         []string{"a3 = 3 a"},
		Compute:        []string{"A = Y1 Z1", "Z3 = 2 A", "B = 4 Y1^2 X1", "C = B+6 a A^2", "ZZ3 = 4 A^2", "D = 3 X1^2", "E = D+6 a ZZ1(ZZ1+X1)", "X3 = E^2-2 B-a3 ZZ3", "Y3 = E(B-X3)-8 Y1^4"},
		Parameters:     []string{"a3"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(6), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("ZZ1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(6), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t18"), Y: ast.Variable("t17")}}}},
	},
	{
		ID:             "g1p/3dik/standard/doubling/dbl-2006-dik-2",
		Tag:            "dbl-2006-dik-2",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "doubling",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 198, bottom display, plus correction from 2007 Bernstein--Birkner--Lange--Peters to incorporate the missing -3a term, plus elimination of unused C, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"a3 = 3 a"},
		Compute:        []string{"YY1 = Y1^2", "A = Y1 Z1", "Z3 = 2 A", "B = 4 YY1 X1", "ZZ3 = Z3^2", "D = 3 X1^2", "E = D+6 a ZZ1(ZZ1+X1)", "X3 = E^2-2 B-a3 ZZ3", "Y3 = E(B-X3)-8 YY1^2"},
		Parameters:     []string{"a3"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("YY1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("ZZ1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(6), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("YY1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/3dik/standard/doubling/dbl-2007-bblp",
		Tag:            "dbl-2007-bblp",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Birkner--Lange--Peters",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a", "a3 = 3 a"},
		Compute:        []string{"A = X1^2", "B = a2 ZZ1(X1+ZZ1)", "C = 3(A+B)", "D = Y1^2", "E = D^2", "Z3 = (Y1+Z1)^2-D-ZZ1", "ZZ3 = Z3^2", "F = 2((X1+D)^2-A-E)", "X3 = C^2-a3 ZZ3-2 F", "Y3 = C(F-X3)-8 E"},
		Parameters:     []string{"a2", "a3"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("F"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t16"), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/3dik/standard/doubling/mdbl-2007-bblp",
		Tag:            "mdbl-2007-bblp",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "doubling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a", "a3 = 3 a", "Z1 = 1"},
		Compute:        []string{"A = X1^2", "B = a2(X1+1)", "C = 3(A+B)", "D = Y1^2", "E = D^2", "Z3 = 2 Y1", "ZZ3 = 4 D", "F = 2((X1+D)^2-A-E)", "X3 = C^2-a3 ZZ3-2 F", "Y3 = C(F-X3)-8 E"},
		Parameters:     []string{"a2", "a3"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("F"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g1p/3dik/standard/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "AA = A^2", "X3 = X1 AA", "Y3 = Y1 AA A", "Z3 = 1", "ZZ3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("AA"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/3dik/standard/tripling/tpl-2006-dik",
		Tag:            "tpl-2006-dik",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "tripling",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 198, middle display",
		AppliesTo:      "",
		Assume:         []string{"b = 4 a - 9", "c = -3 a"},
		Compute:        []string{"A = (X1+3 ZZ1)^2", "B = a ZZ1 A", "Xt = Y1^2+B", "Yt = Y1(Y1^2-3 B)", "Zt = X1 Z1", "C = Zt^2", "D = (b C-Xt)^2", "E = c C D", "X3 = (Yt^2+E)", "Y3 = Yt(X3-4 E)", "Z3 = 3 Xt Zt", "ZZ3 = Z3^2"},
		Parameters:     []string{"b", "c"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Xt"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Yt"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Zt"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("Zt"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("Xt")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Yt"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Yt"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("Xt"), Y: ast.Variable("Zt")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/3dik/standard/tripling/tpl-2006-dik-2",
		Tag:            "tpl-2006-dik-2",
		Class:          "g1p",
		Shape:          shapes[4],
		Representation: representations[20],
		Operation:      "tripling",
		Source:         "2006 Doche--Icart--Kohel \"Efficient scalar multiplication by isogeny decompositions\", page 198, middle display, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"YY1 = Y1^2", "A = (X1+3 ZZ1)^2", "B = a ZZ1 A", "Xt = YY1+B", "Yt = Y1(YY1-3 B)", "Zt = X1 Z1", "C = Zt^2", "Ca = a C", "E = 3 Ca(4 Ca-9 C-Xt)^2", "X3 = Yt^2-E", "Y3 = Yt(X3+4 E)", "Z3 = 3 Xt Zt", "ZZ3 = Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Xt"), RHS: ast.Add{X: ast.Variable("YY1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("YY1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Yt"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Zt"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("Zt"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Ca"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(9), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("Ca")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("Xt")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Ca"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Yt"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Yt"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("Xt"), Y: ast.Variable("Zt")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/edwards/inverted/addition/add-2007-bl",
		Tag:            "add-2007-bl",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[21],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Z1 Z2", "B = d A^2", "C = X1 X2", "D = Y1 Y2", "E = C D", "H = C-D", "I = (X1+Y1) (X2+Y2)-C-D", "X3 = c (E+B) H", "Y3 = c (E-B) I", "Z3 = A H I"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g1p/edwards/inverted/addition/add-20080225-hwcd",
		Tag:            "add-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[21],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, page 8",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 Z2", "B = Y1 Z2", "C = Z1 X2", "D = Z1 Y2", "E = A B", "F = C D", "G = E+F", "H = E-F", "X3 = ((A+D)(B+C)-G)H", "Y3 = ((A-C)(B+D)-H)G", "Z3 = c G H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/edwards/inverted/addition/madd-2007-bl",
		Tag:            "madd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[21],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = Z1", "B = d A^2", "C = X1 X2", "D = Y1 Y2", "E = C D", "H = C-D", "I = (X1+Y1) (X2+Y2)-C-D", "X3 = c (E+B) H", "Y3 = c (E-B) I", "Z3 = A H I"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g1p/edwards/inverted/addition/madd-20080225-hwcd",
		Tag:            "madd-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[21],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, page 8",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = X1", "B = Y1", "C = Z1 X2", "D = Z1 Y2", "E = A B", "F = C D", "G = E+F", "H = E-F", "X3 = ((A+D)(B+C)-G)H", "Y3 = ((A-C)(B+D)-H)G", "Z3 = c G H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/edwards/inverted/addition/mmadd-2007-bl",
		Tag:            "mmadd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[21],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"C = X1 X2", "D = Y1 Y2", "E = C D", "H = C-D", "I = (X1+Y1) (X2+Y2)-C-D", "X3 = c (E+d) H", "Y3 = c (E-d) I", "Z3 = H I"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("d")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("d")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}}},
	},
	{
		ID:             "g1p/edwards/inverted/addition/xmadd-2007-bl",
		Tag:            "xmadd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[21],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"X2 = 1"},
		Compute:        []string{"A = Z1 Z2", "B = d A^2", "D = Y1 Y2", "E = X1 D", "F = E-B", "G = E+B", "H = X1-D", "I = X1 Y2+Y1", "X3 = c G H", "Y3 = c F I", "Z3 = A H I"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t4")}}}},
	},
	{
		ID:             "g1p/edwards/inverted/doubling/dbl-2007-bl",
		Tag:            "dbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[21],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"ccd2 = 2 c c d"},
		Compute:        []string{"A = X1^2", "B = Y1^2", "C = A+B", "D = A-B", "E = (X1+Y1)^2-C", "Z3 = c D E", "X3 = C D", "Y3 = E (C-ccd2 Z1^2)"},
		Parameters:     []string{"ccd2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("ccd2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g1p/edwards/inverted/doubling/mdbl-2007-bl",
		Tag:            "mdbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[21],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"ccd2 = 2 c c d", "Z1 = 1"},
		Compute:        []string{"A = X1^2", "B = Y1^2", "C = A+B", "D = A-B", "E = (X1+Y1)^2-C", "Z3 = c D E", "X3 = C D", "Y3 = E (C-ccd2)"},
		Parameters:     []string{"ccd2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("ccd2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t3")}}}},
	},
	{
		ID:             "g1p/edwards/inverted/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[21],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = X1 A", "Y3 = Y1 A", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/edwards/inverted/tripling/tpl-2007-bl",
		Tag:            "tpl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[21],
		Operation:      "tripling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "ZZ = (c Z1)^2", "D = XX+YY", "DD = D^2", "E = 4 (D-d ZZ)", "H = 2 D (YY-XX)", "P = DD-XX E", "Q = DD-YY E", "X3 = (H+Q) Q X1", "Y3 = (H-P) P Y1", "Z3 = P Q Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("DD"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("YY"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("XX"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("DD"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Sub{X: ast.Variable("DD"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Q"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("P"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("Q"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("P"), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g1p/edwards/inverted/tripling/tpl-2007-bl-2",
		Tag:            "tpl-2007-bl-2",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[21],
		Operation:      "tripling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"ccd = c c d"},
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "ZZ = Z1^2", "D = XX+YY", "DD = D^2", "E = 4 (D-ccd ZZ)", "H = 2 D (YY-XX)", "P = DD-XX E", "Q = DD-YY E", "QQ = Q^2", "X3 = (H+Q) ((Q+X1)^2-QQ-XX)", "Y3 = 2 (H-P) P Y1", "Z3 = P ((Q+Z1)^2-QQ-ZZ)"},
		Parameters:     []string{"ccd"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("DD"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("ccd"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("YY"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("XX"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("DD"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Sub{X: ast.Variable("DD"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("QQ"), RHS: ast.Pow{X: ast.Variable("Q"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("Q"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("QQ")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("P"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("Q"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("QQ")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Sub{X: ast.Variable("t16"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("P"), Y: ast.Variable("t17")}}}},
	},
	{
		ID:             "g1p/edwards/projective/addition/add-2007-bl",
		Tag:            "add-2007-bl",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Z1 Z2", "B = A^2", "C = X1 X2", "D = Y1 Y2", "E = d C D", "F = B-E", "G = B+E", "X3 = A F((X1+Y1)(X2+Y2)-C-D)", "Y3 = A G(D-C)", "Z3 = c F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g1p/edwards/projective/addition/add-2007-bl-2",
		Tag:            "add-2007-bl-2",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"R1 = X1", "R2 = Y1", "R3 = Z1", "R4 = X2", "R5 = Y2", "R6 = Z2", "R3 = R3 R6", "R7 = R1+R2", "R8 = R4+R5", "R1 = R1 R4", "R2 = R2 R5", "R7 = R7 R8", "R7 = R7-R1", "R7 = R7-R2", "R7 = R7 R3", "R8 = R1 R2", "R8 = d R8", "R2 = R2-R1", "R2 = R2 R3", "R3 = R3^2", "R1 = R3-R8", "R3 = R3+R8", "R2 = R2 R3", "R3 = R3 R1", "R1 = R1 R7", "R3 = c R3", "X3 = R1", "Y3 = R2", "Z3 = R3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Variable("X2")}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Variable("Z2")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Add{X: ast.Variable("R4"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R7"), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Sub{X: ast.Variable("R7"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Sub{X: ast.Variable("R7"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R7"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R3"), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Add{X: ast.Variable("R3"), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("R1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("R2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("R3")}}},
	},
	{
		ID:             "g1p/edwards/projective/addition/add-2007-bl-3",
		Tag:            "add-2007-bl-3",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"c2 = 2 c"},
		Compute:        []string{"A = Z1 Z2", "B = A^2", "C = X1 X2", "D = Y1 Y2", "E = d C D", "BB = B^2", "EE = E^2", "H = (A+B)^2-BB", "I = (A+E)^2-EE", "X3 = (H-I)((X1+Y1)(X2+Y2)-C-D)", "Y3 = (H+I-2 B)(D-C)", "Z3 = c2(BB-EE)"},
		Parameters:     []string{"c2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("BB"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("EE"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("BB")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("BB"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("c2"), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/edwards/projective/addition/add-2007-bl-4",
		Tag:            "add-2007-bl-4",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"i^2 = -1"},
		Compute:        []string{"iX2 = i X2", "C2 = Y2+iX2", "D2 = Y2-iX2", "iX1 = i X1", "C1 = Y1+iX1", "D1 = Y1-iX1", "A = Z1 Z2", "B = 2 A^2", "C = C1 C2", "D = D1 D2", "L = D+C", "M = Y1 Y2", "N = 2 M-L", "E = d M N", "F = B-E", "G = B+E", "X3 = i A F (D-C)", "Y3 = A G L", "Z3 = c G F"},
		Parameters:     []string{"i"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("iX2"), RHS: ast.Mul{X: ast.Variable("i"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("C2"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("iX2")}}, ast.Assignment{LHS: ast.Variable("D2"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("iX2")}}, ast.Assignment{LHS: ast.Variable("iX1"), RHS: ast.Mul{X: ast.Variable("i"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("C1"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("iX1")}}, ast.Assignment{LHS: ast.Variable("D1"), RHS: ast.Sub{X: ast.Variable("Y1"), Y: ast.Variable("iX1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("N"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("N")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("i"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t7")}}}},
	},
	{
		ID:             "g1p/edwards/projective/addition/add-20080225-hwcd",
		Tag:            "add-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, page 8",
		AppliesTo:      "",
		Assume:         []string{"k c = 1"},
		Compute:        []string{"A = X1 Z2", "B = Y1 Z2", "C = Z1 X2", "D = Z1 Y2", "E = A B", "F = C D", "G = E+F", "H = E-F", "J = (A-C)(B+D)-H", "K = (A+D)(B+C)-G", "X3 = G J", "Y3 = H K", "Z3 = k J K"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("J"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("t6")}}}},
	},
	{
		ID:             "g1p/edwards/projective/addition/add-20090311-hwcd",
		Tag:            "add-20090311-hwcd",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "addition",
		Source:         "2009.03.11 Hisil--Wong--Carter--Dawson, after formula (17), plus denominator elimination",
		AppliesTo:      "",
		Assume:         []string{"k c = 1"},
		Compute:        []string{"R1 = X2 Y2", "R2 = Z2^2", "A = X1 Y1", "B = Z1^2", "C = R2 A", "D = R1 B", "E = (X1-X2)(Y1+Y2)-A+R1", "F = (X1+Y2)(Y1+X2)-A-R1", "G = (Z1+Z2)^2-B-R2", "X3 = 2 E(C+D)", "Y3 = 2 F(C-D)", "Z3 = k E F G"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("t16")}}}},
	},
	{
		ID:             "g1p/edwards/projective/addition/madd-2007-bl",
		Tag:            "madd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"B = Z1^2", "C = X1 X2", "D = Y1 Y2", "E = d C D", "F = B-E", "G = B+E", "X3 = Z1 F ((X1+Y1)(X2+Y2)-C-D)", "Y3 = Z1 G (D-C)", "Z3 = c F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g1p/edwards/projective/addition/madd-2007-bl-2",
		Tag:            "madd-2007-bl-2",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"R1 = X1", "R2 = Y1", "R3 = Z1", "R4 = X2", "R5 = Y2", "R7 = R1+R2", "R6 = R4+R5", "R1 = R1 R4", "R2 = R2 R5", "R7 = R7 R6", "R7 = R7-R1", "R7 = R7-R2", "R7 = R7 R3", "R6 = R1 R2", "R6 = d R6", "R2 = R2-R1", "R2 = R2 R3", "R3 = R3^2", "R1 = R3-R6", "R3 = R3+R6", "R2 = R2 R3", "R3 = R3 R1", "R1 = R1 R7", "R3 = c R3", "X3 = R1", "Y3 = R2", "Z3 = R3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Variable("X2")}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Add{X: ast.Variable("R4"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R7"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Sub{X: ast.Variable("R7"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Sub{X: ast.Variable("R7"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R7"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R3"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Add{X: ast.Variable("R3"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("R1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("R2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("R3")}}},
	},
	{
		ID:             "g1p/edwards/projective/addition/madd-2007-bl-3",
		Tag:            "madd-2007-bl-3",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"c2 = 2 c", "Z2 = 1"},
		Compute:        []string{"B = Z1^2", "C = X1 X2", "D = Y1 Y2", "E = d C D", "BB = B^2", "EE = E^2", "H = (Z1+B)^2-BB", "I = (Z1+E)^2-EE", "X3 = (H-I)((X1+Y1)(X2+Y2)-C-D)", "Y3 = (H+I-2 B)(D-C)", "Z3 = c2(BB-EE)"},
		Parameters:     []string{"c2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("BB"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("EE"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("BB")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("BB"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("c2"), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/edwards/projective/addition/madd-20080225-hwcd",
		Tag:            "madd-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, page 8",
		AppliesTo:      "",
		Assume:         []string{"k c = 1", "Z2 = 1"},
		Compute:        []string{"A = X1", "B = Y1", "C = Z1 X2", "D = Z1 Y2", "E = A B", "F = C D", "G = E+F", "H = E-F", "J = (A-C)(B+D)-H", "K = (A+D)(B+C)-G", "X3 = G J", "Y3 = H K", "Z3 = k J K"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("J"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("t6")}}}},
	},
	{
		ID:             "g1p/edwards/projective/addition/mmadd-2007-bl",
		Tag:            "mmadd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"C = X1 X2", "D = Y1 Y2", "E = d C D", "X3 = (1-E)((X1+Y1)(X2+Y2)-C-D)", "Y3 = (1+E)(D-C)", "Z3 = c(1-E^2)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/edwards/projective/addition/xmadd-2007-hcd",
		Tag:            "xmadd-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "addition",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"X2 = 1"},
		Compute:        []string{"T0 = X1 Y2", "T0 = T0+Y1", "Y3 = Y1 Y2", "T1 = Y3 X1", "Y3 = Y3-X1", "Z3 = Z1 Z2", "X3 = T0 Z3", "Y3 = Y3 Z3", "T1 = d T1", "Z3 = Z3^2", "T0 = Z3-T1", "Z3 = Z3+T1", "X3 = X3 T0", "Y3 = Y3 Z3", "Z3 = Z3 T0", "Z3 = c Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("T0"), RHS: ast.Add{X: ast.Variable("T0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("Y3"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("Y3"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("T0"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T0"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("T0")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("T0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/edwards/projective/doubling/dbl-2007-bl",
		Tag:            "dbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"B = (X1+Y1)^2", "C = X1^2", "D = Y1^2", "E = C+D", "H = (c Z1)^2", "J = E-2 H", "X3 = c (B-E)J", "Y3 = c E(C-D)", "Z3 = E J"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("J")}}}},
	},
	{
		ID:             "g1p/edwards/projective/doubling/dbl-2007-bl-2",
		Tag:            "dbl-2007-bl-2",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange; source comments that these formulas use two temporary registers",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"R1 = X1", "R2 = Y1", "R3 = Z1", "R4 = R1+R2", "R3 = c R3", "R1 = R1^2", "R2 = R2^2", "R3 = R3^2", "R4 = R4^2", "R3 = 2 R3", "R5 = R1+R2", "R2 = R1-R2", "R4 = R4-R5", "R3 = R5-R3", "R1 = R3 R4", "R3 = R3 R5", "R2 = R2 R5", "R1 = c R1", "R2 = c R2", "X3 = R1", "Y3 = R2", "Z3 = R3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Pow{X: ast.Variable("R4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Sub{X: ast.Variable("R4"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("R5"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("R1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("R2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("R3")}}},
	},
	{
		ID:             "g1p/edwards/projective/doubling/dbl-2007-bl-3",
		Tag:            "dbl-2007-bl-3",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange; source comments that these formulas use one temporary register",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"R1 = X1", "R2 = Y1", "R3 = Z1", "R3 = c R3", "R4 = R1^2", "R1 = R1+R2", "R1 = R1^2", "R2 = R2^2", "R3 = R3^2", "R3 = 2 R3", "R4 = R2+R4", "R2 = 2 R2", "R2 = R4-R2", "R1 = R1-R4", "R2 = R2 R4", "R3 = R4-R3", "R1 = R1 R3", "R3 = R3 R4", "R1 = c R1", "R2 = c R2", "X3 = R1", "Y3 = R2", "Z3 = R3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R4"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("R4"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("R1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("R2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("R3")}}},
	},
	{
		ID:             "g1p/edwards/projective/doubling/mdbl-2007-bl",
		Tag:            "mdbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"cc2 = 2 c c", "Z1 = 1"},
		Compute:        []string{"B = (X1+Y1)^2", "C = X1^2", "D = Y1^2", "E = C+D", "J = E-cc2", "X3 = c(B-E)J", "Y3 = c E(C-D)", "Z3 = E J"},
		Parameters:     []string{"cc2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("cc2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("J")}}}},
	},
	{
		ID:             "g1p/edwards/projective/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = X1 A", "Y3 = Y1 A", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/edwards/projective/tripling/tpl-2007-bblp",
		Tag:            "tpl-2007-bblp",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "tripling",
		Source:         "2007 Bernstein--Birkner--Lange--Peters",
		AppliesTo:      "",
		Assume:         []string{"c2 = 2 c"},
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "ZZ = (c2 Z1)^2", "D = XX+YY", "DD = D^2", "H = 2 D (XX-YY)", "P = DD-YY ZZ", "Q = DD-XX ZZ", "T = H+Q", "U = H-P", "X3 = P U X1", "Y3 = Q T Y1", "Z3 = T U Z1"},
		Parameters:     []string{"c2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("c2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("DD"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("XX"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("DD"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("XX"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Sub{X: ast.Variable("DD"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("P"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("T"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Q"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("T"), Y: ast.Variable("t7")}}}},
	},
	{
		ID:             "g1p/edwards/projective/tripling/tpl-2007-bblp-2",
		Tag:            "tpl-2007-bblp-2",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "tripling",
		Source:         "2007 Bernstein--Birkner--Lange--Peters",
		AppliesTo:      "",
		Assume:         []string{"c = 1"},
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "ZZ = Z1^2", "ZZ4 = 4 ZZ", "D = XX+YY", "DD = D^2", "H = 2 D(XX-YY)", "P = DD-YY ZZ4", "Q = DD-XX ZZ4", "T = H+Q", "TT = T^2", "U = H-P", "X3 = 2 P U X1", "Y3 = Q((T+Y1)^2-TT-YY)", "Z3 = U((T+Z1)^2-TT-ZZ)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ4"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("DD"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("XX"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("ZZ4")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("DD"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("XX"), Y: ast.Variable("ZZ4")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Sub{X: ast.Variable("DD"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("TT"), RHS: ast.Pow{X: ast.Variable("T"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("P"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("TT")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Q"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("t10"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("TT")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("t13")}}}},
	},
	{
		ID:             "g1p/edwards/projective/tripling/tpl-2007-bblp-3",
		Tag:            "tpl-2007-bblp-3",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "tripling",
		Source:         "2007 Bernstein--Birkner--Lange--Peters",
		AppliesTo:      "",
		Assume:         []string{"cc4 = 4 c c"},
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "ZZ = Z1^2", "ZZ4 = cc4 ZZ", "D = XX+YY", "DD = D^2", "H = 2 D(XX-YY)", "P = DD-YY ZZ4", "Q = DD-XX ZZ4", "T = H+Q", "TT = T^2", "U = H-P", "X3 = 2 P U X1", "Y3 = Q((T+Y1)^2-TT-YY)", "Z3 = U((T+Z1)^2-TT-ZZ)"},
		Parameters:     []string{"cc4"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ4"), RHS: ast.Mul{X: ast.Variable("cc4"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("DD"), RHS: ast.Pow{X: ast.Variable("D"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("XX"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("ZZ4")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("DD"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("XX"), Y: ast.Variable("ZZ4")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Sub{X: ast.Variable("DD"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("TT"), RHS: ast.Pow{X: ast.Variable("T"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("P"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("TT")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Q"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("t10"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("TT")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("t13")}}}},
	},
	{
		ID:             "g1p/edwards/projective/tripling/tpl-2007-hcd",
		Tag:            "tpl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[22],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = Y1^2", "C = (2 c Z1)^2", "D = (A+B)^2", "E = 2(A+B)(A-B)", "F = A C", "G = B C", "X3 = X1(E-(D-G))(D-G)", "Y3 = Y1(E+(D-F))(D-F)", "Z3 = Z1(E-(D-G))(E+(D-F))"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("t16"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t18")}}}},
	},
	{
		ID:             "g1p/edwards/yz/diffadd/dadd-2006-g",
		Tag:            "dadd-2006-g",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[23],
		Operation:      "diffadd",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", page 23/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 on page 23/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 etc. replaced by r Z2^2/Y2^2 and r Z3^2/Y3^2 and r Z1^2/Y1^2, intermediate x'/y' replaced by W/V, output X/Y replaced by sqrt(r) Z5/Y5",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)"},
		Compute:        []string{"V = s(r Z2^2-Y2^2)(r Z3^2-Y3^2)", "W = (r Z2^2+Y2^2)(r Z3^2+Y3^2)", "Y5 = r Z1(W-V)", "Z5 = Y1(W+V)"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t14"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("t15"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("Y5"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t19")}}}},
	},
	{
		ID:             "g1p/edwards/yz/diffadd/dadd-2006-g-2",
		Tag:            "dadd-2006-g-2",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[23],
		Operation:      "diffadd",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", page 23/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 on page 23/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 etc. replaced by r Z2^2/Y2^2 and r Z3^2/Y3^2 and r Z1^2/Y1^2, intermediate x'/y' replaced by W/V, output X/Y replaced by sqrt(r) Z5/Y5; plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)"},
		Compute:        []string{"YY2 = Y2^2", "ZZ2 = r Z2^2", "YY3 = Y3^2", "ZZ3 = r Z3^2", "V = s(ZZ2-YY2)(ZZ3-YY3)", "W = (ZZ2+YY2)(ZZ3+YY3)", "Y5 = (r Z1)(W-V)", "Z5 = Y1(W+V)"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY2"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("YY3"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("ZZ2"), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("ZZ3"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("ZZ2"), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("ZZ3"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Y5"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g1p/edwards/yz/diffadd/mdadd-2006-g-2",
		Tag:            "mdadd-2006-g-2",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[23],
		Operation:      "diffadd",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", page 23/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 on page 23/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 etc. replaced by r Z2^2/Y2^2 and r Z3^2/Y3^2 and r Z1^2/Y1^2, intermediate x'/y' replaced by W/V, output X/Y replaced by sqrt(r) Z5/Y5; plus common-subexpression elimination; plus assumption Z1=1",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)", "Z1 = 1"},
		Compute:        []string{"YY2 = Y2^2", "ZZ2 = r Z2^2", "YY3 = Y3^2", "ZZ3 = r Z3^2", "V = s(ZZ2-YY2)(ZZ3-YY3)", "W = (ZZ2+YY2)(ZZ3+YY3)", "Y5 = r(W-V)", "Z5 = Y1(W+V)"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY2"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("YY3"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("ZZ2"), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("ZZ3"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("ZZ2"), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("ZZ3"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Y5"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/edwards/yz/doubling/dbl-2006-g",
		Tag:            "dbl-2006-g",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[23],
		Operation:      "doubling",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", page 22/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 and b/a on page 22/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 replaced by r Z1^2/Y1^2, intermediate x'/y' replaced by W/V, output X/Y replaced by sqrt(r) Z3/Y3",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)"},
		Compute:        []string{"V = s(r Z1^2-Y1^2)^2", "W = (r Z1^2+Y1^2)^2", "Y3 = W-V", "Z3 = W+V"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}}},
	},
	{
		ID:             "g1p/edwards/yz/doubling/dbl-2006-g-2",
		Tag:            "dbl-2006-g-2",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[23],
		Operation:      "doubling",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", page 22/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 and b/a on page 22/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 replaced by r Z1^2/Y1^2, intermediate x'/y' replaced by W/V, output X/Y replaced by sqrt(r) Z3/Y3; plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)"},
		Compute:        []string{"YY = Y1^2", "ZZ = r Z1^2", "V = s(ZZ-YY)^2", "W = (ZZ+YY)^2", "Y3 = W-V", "Z3 = W+V"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("ZZ"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("ZZ"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}}},
	},
	{
		ID:             "g1p/edwards/yz/doubling/mdbl-2006-g-2",
		Tag:            "mdbl-2006-g-2",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[23],
		Operation:      "doubling",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", page 22/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 and b/a on page 22/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 replaced by r Z1^2/Y1^2, intermediate x'/y' replaced by W/V, output X/Y replaced by sqrt(r) Z3/Y3; plus common-subexpression elimination; plus assumption Z1=1; plus standard simplification",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)", "r2 = 2 r", "Z1 = 1"},
		Compute:        []string{"YY = Y1^2", "A = r2 YY", "B = d + YY^2", "V = s(B-A)", "W = B+A", "Y3 = W-V", "Z3 = W+V"},
		Parameters:     []string{"s", "r2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("r2"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}}},
	},
	{
		ID:             "g1p/edwards/yz/doubling/mdbl-2006-g-3",
		Tag:            "mdbl-2006-g-3",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[23],
		Operation:      "doubling",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", page 22/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 and b/a on page 22/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 replaced by r Z1^2/Y1^2, intermediate x'/y' replaced by W/V, output X/Y replaced by sqrt(r) Z3/Y3; plus common-subexpression elimination; plus assumption Z1=1; plus standard simplification",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)", "Z1 = 1"},
		Compute:        []string{"YY = Y1^2", "B = d + YY^2", "W = (r+YY)^2", "V = s(2 B-W)", "Y3 = W-V", "Z3 = W+V"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("r"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}}},
	},
	{
		ID:             "g1p/edwards/yz/ladder/ladd-2006-g",
		Tag:            "ladd-2006-g",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[23],
		Operation:      "ladder",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", pages 22/52 and 23/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 and b/a on pages 22/52 and 23/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 etc. replaced by r Z2^2/Y2^2 and r Z3^2/Y3^2 and r Z1^2/Y1^2, intermediate x'/y' replaced by W/V, output X/Y replaced by sqrt(r) Z5/Y5",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)"},
		Compute:        []string{"V2 = s(r Z2^2-Y2^2)^2", "W2 = (r Z2^2+Y2^2)^2", "Y4 = W2-V2", "Z4 = W2+V2", "V = s(r Z2^2-Y2^2)(r Z3^2-Y3^2)", "W = (r Z2^2+Y2^2)(r Z3^2+Y3^2)", "Y5 = r Z1(W-V)", "Z5 = Y1(W+V)"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V2"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("W2"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y4"), RHS: ast.Sub{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("t15"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("t23"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Add{X: ast.Variable("t22"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("t24"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("Y5"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t28")}}}},
	},
	{
		ID:             "g1p/edwards/yz/ladder/ladd-2006-g-2",
		Tag:            "ladd-2006-g-2",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[23],
		Operation:      "ladder",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", pages 22/52 and 23/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 and b/a on pages 22/52 and 23/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 etc. replaced by r Z2^2/Y2^2 and r Z3^2/Y3^2 and r Z1^2/Y1^2, intermediate x'/y' replaced by W/V, output X/Y replaced by sqrt(r) Z5/Y5; plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)"},
		Compute:        []string{"YY2 = Y2^2", "ZZ2 = r Z2^2", "A = ZZ2-YY2", "B = ZZ2+YY2", "YY3 = Y3^2", "ZZ3 = r Z3^2", "V2 = s A^2", "W2 = B^2", "Y4 = W2-V2", "Z4 = W2+V2", "V = s A(ZZ3-YY3)", "W = B(ZZ3+YY3)", "Y5 = (r Z1)(W-V)", "Z5 = Y1(W+V)"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY2"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("ZZ2"), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("ZZ2"), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("YY3"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V2"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("W2"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y4"), RHS: ast.Sub{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("ZZ3"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("ZZ3"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Y5"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/edwards/yz/ladder/mladd-2006-g-2",
		Tag:            "mladd-2006-g-2",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[23],
		Operation:      "ladder",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", pages 22/52 and 23/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 and b/a on pages 22/52 and 23/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 etc. replaced by r Z2^2/Y2^2 and r Z3^2/Y3^2 and r Z1^2/Y1^2, intermediate x'/y' replaced by W/V, output X/Y replaced by sqrt(r) Z5/Y5; plus common-subexpression elimination; plus assumption Z1=1",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)", "Z1 = 1"},
		Compute:        []string{"YY2 = Y2^2", "ZZ2 = r Z2^2", "A = ZZ2-YY2", "B = ZZ2+YY2", "YY3 = Y3^2", "ZZ3 = r Z3^2", "V2 = s A^2", "W2 = B^2", "Y4 = W2-V2", "Z4 = W2+V2", "V = s A(ZZ3-YY3)", "W = B(ZZ3+YY3)", "Y5 = r(W-V)", "Z5 = Y1(W+V)"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY2"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("ZZ2"), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("ZZ2"), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("YY3"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V2"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("W2"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y4"), RHS: ast.Sub{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("ZZ3"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("ZZ3"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Y5"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t7")}}}},
	},
	{
		ID:             "g1p/edwards/yz/scaling/scale",
		Tag:            "scale",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[23],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Y3 = Y1 / Z1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/edwards/yzsquared/diffadd/dadd-2006-g",
		Tag:            "dadd-2006-g",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[24],
		Operation:      "diffadd",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", page 23/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 on page 23/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 etc. replaced by Z2/Y2 and Z3/Y3 and Z1/Y1, intermediate x'/y' replaced by W/V, output X^2/Y^2 replaced by Z5/Y5",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)"},
		Compute:        []string{"V = s(Z2-Y2)(Z3-Y3)", "W = (Z2+Y2)(Z3+Y3)", "Y5 = Z1(W-V)^2", "Z5 = Y1(W+V)^2"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("t7"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/edwards/yzsquared/diffadd/mdadd-2006-g",
		Tag:            "mdadd-2006-g",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[24],
		Operation:      "diffadd",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", page 23/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 on page 23/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 etc. replaced by Z2/Y2 and Z3/Y3 and Z1/Y1, intermediate x'/y' replaced by W/V, output X^2/Y^2 replaced by Z5/Y5; plus assumption Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "s = (1+r)/(1-r)"},
		Compute:        []string{"V = s(Z2-Y2)(Z3-Y3)", "W = (Z2+Y2)(Z3+Y3)", "Y5 = (W-V)^2", "Z5 = Y1(W+V)^2"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Y5"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t7")}}}},
	},
	{
		ID:             "g1p/edwards/yzsquared/doubling/dbl-2006-g",
		Tag:            "dbl-2006-g",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[24],
		Operation:      "doubling",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", page 22/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 and b/a on page 22/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 replaced by Z1/Y1, intermediate x'/y' replaced by W/V, output X^2/Y^2 replaced by Z3/Y3",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)"},
		Compute:        []string{"V = s(Z1-Y1)^2", "W = (Z1+Y1)^2", "Y3 = (W-V)^2", "Z3 = r(W+V)^2"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Z1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g1p/edwards/yzsquared/doubling/mdbl-2006-g",
		Tag:            "mdbl-2006-g",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[24],
		Operation:      "doubling",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", page 22/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 and b/a on page 22/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 replaced by Z1/Y1, intermediate x'/y' replaced by W/V, output X^2/Y^2 replaced by Z3/Y3; plus assumption Z1=1; plus standard simplification",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "s = (1+r)/(1-r)"},
		Compute:        []string{"W = (1+Y1)^2", "V = s(W-4 Y1)", "Y3 = (W-V)^2", "Z3 = r(W+V)^2"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g1p/edwards/yzsquared/ladder/ladd-2006-g",
		Tag:            "ladd-2006-g",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[24],
		Operation:      "ladder",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", pages 22/52 and 23/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 on pages 22/52 and 23/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 etc. replaced by Z2/Y2 and Z3/Y3 and Z1/Y1, intermediate x'/y' replaced by W/V, output X^2/Y^2 replaced by Z5/Y5",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)"},
		Compute:        []string{"V2 = s(Z2-Y2)^2", "W2 = (Z2+Y2)^2", "Y4 = (W2-V2)^2", "Z4 = r(W2+V2)^2", "V = s(Z2-Y2)(Z3-Y3)", "W = (Z2+Y2)(Z3+Y3)", "Y5 = Z1(W-V)^2", "Z5 = Y1(W+V)^2"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V2"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("W2"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("Y4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("t11"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("t13"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t14")}}}},
	},
	{
		ID:             "g1p/edwards/yzsquared/ladder/ladd-2006-g-2",
		Tag:            "ladd-2006-g-2",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[24],
		Operation:      "ladder",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", pages 22/52 and 23/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 on pages 22/52 and 23/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 etc. replaced by Z2/Y2 and Z3/Y3 and Z1/Y1, intermediate x'/y' replaced by W/V, output X^2/Y^2 replaced by Z5/Y5; plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"s = (1+r)/(1-r)"},
		Compute:        []string{"A = Z2-Y2", "B = Z2+Y2", "V2 = s A^2", "W2 = B^2", "Y4 = (W2-V2)^2", "Z4 = r(W2+V2)^2", "V = s A(Z3-Y3)", "W = B(Z3+Y3)", "Y5 = Z1(W-V)^2", "Z5 = Y1(W+V)^2"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V2"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("W2"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("Y4"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("t7"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("t9"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/edwards/yzsquared/ladder/mladd-2006-g",
		Tag:            "mladd-2006-g",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[24],
		Operation:      "ladder",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", pages 22/52 and 23/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 on pages 22/52 and 23/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 etc. replaced by Z2/Y2 and Z3/Y3 and Z1/Y1, intermediate x'/y' replaced by W/V, output X^2/Y^2 replaced by Z5/Y5; plus assumption Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "s = (1+r)/(1-r)"},
		Compute:        []string{"V2 = s(Z2-Y2)^2", "W2 = (Z2+Y2)^2", "Y4 = (W2-V2)^2", "Z4 = r(W2+V2)^2", "V = s(Z2-Y2)(Z3-Y3)", "W = (Z2+Y2)(Z3+Y3)", "Y5 = (W-V)^2", "Z5 = Y1(W+V)^2"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V2"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("W2"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("Y4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Y5"), RHS: ast.Pow{X: ast.Variable("t11"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t13")}}}},
	},
	{
		ID:             "g1p/edwards/yzsquared/ladder/mladd-2006-g-2",
		Tag:            "mladd-2006-g-2",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[24],
		Operation:      "ladder",
		Source:         "2006 Gaudry \"Variants of the Montgomery form based on Theta functions\", pages 22/52 and 23/52, with A^2/B^2 = (a^2+b^2)/(a^2-b^2) as on page 20/52, replacing incorrect B^2/A^2 on pages 22/52 and 23/52 with correct A^2/B^2 and a/b; or 2009 Gaudry--Lubicz \"The arithmetic of characteristic 2 Kummer surfaces and of elliptic Kummer lines\", Section 6.2, replacing incorrect A'/B' = (a^2+b^2)/(a^2-b^2) with correct A'^2/B'^2 = (a^2+b^2)/(a^2-b^2), replacing A'^2/B'^2 with A^2/B^2, and replacing z... with y...; plus notation changes: a/b and A^2/B^2 defined as 1/sqrt(r) and (1+r)/(1-r), input x^2/y^2 etc. replaced by Z2/Y2 and Z3/Y3 and Z1/Y1, intermediate x'/y' replaced by W/V, output X^2/Y^2 replaced by Z5/Y5; plus common-subexpression elimination; plus assumption Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "s = (1+r)/(1-r)"},
		Compute:        []string{"A = Z2-Y2", "B = Z2+Y2", "V2 = s A^2", "W2 = B^2", "Y4 = (W2-V2)^2", "Z4 = r(W2+V2)^2", "V = s A(Z3-Y3)", "W = B(Z3+Y3)", "Y5 = (W-V)^2", "Z5 = Y1(W+V)^2"},
		Parameters:     []string{"s"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("Z2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V2"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("W2"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("Y4"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("W2"), Y: ast.Variable("V2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Y5"), RHS: ast.Pow{X: ast.Variable("t7"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g1p/edwards/yzsquared/scaling/scale",
		Tag:            "scale",
		Class:          "g1p",
		Shape:          shapes[5],
		Representation: representations[24],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Y3 = Y1 / Z1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/hessian/extended/addition/add-20080225-hwcd",
		Tag:            "add-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[25],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, page 10, top",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = YY1 XZ2 - XZ1 YY2", "Y3 = XX1 YZ2 - YZ1 XX2", "Z3 = ZZ1 XY2 - XY1 ZZ2", "XX3 = X3^2", "YY3 = Y3^2", "ZZ3 = Z3^2", "XY3 = (X3+Y3)^2-XX3-YY3", "XZ3 = (X3+Z3)^2-XX3-ZZ3", "YZ3 = (Y3+Z3)^2-YY3-ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("XZ1"), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("YY1"), Y: ast.Variable("XZ2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("YZ1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("YZ2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("XY1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("XY2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY3"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("XY3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("t9"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("XZ3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("Y3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("YZ3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/hessian/extended/addition/madd-20080225-hwcd",
		Tag:            "madd-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[25],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, page 10, top",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"X3 = YY1 XZ2 - XZ1 YY2", "Y3 = XX1 YZ2 - YZ1 XX2", "Z3 = ZZ1 XY2 - XY1", "XX3 = X3^2", "YY3 = Y3^2", "ZZ3 = Z3^2", "XY3 = (X3+Y3)^2-XX3-YY3", "XZ3 = (X3+Z3)^2-XX3-ZZ3", "YZ3 = (Y3+Z3)^2-YY3-ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("XZ1"), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("YY1"), Y: ast.Variable("XZ2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("YZ1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("YZ2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("XY2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("XY1")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY3"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("XY3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("XZ3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("Y3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("t11"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("YZ3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/hessian/extended/doubling/dbl-20080225-hwcd",
		Tag:            "dbl-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[25],
		Operation:      "doubling",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, page 10, bottom",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = (XY1-YZ1)(XZ1+2(XX1+ZZ1))", "Y3 = (XZ1-XY1)(YZ1+2(YY1+ZZ1))", "Z3 = (YZ1-XZ1)(XY1+2(XX1+YY1))", "XX3 = X3^2", "YY3 = Y3^2", "ZZ3 = Z3^2", "XY3 = (X3+Y3)^2-XX3-YY3", "XZ3 = (X3+Z3)^2-XX3-ZZ3", "YZ3 = (Y3+Z3)^2-YY3-ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("XY1"), Y: ast.Variable("YZ1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("XZ1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("YY1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("XZ1"), Y: ast.Variable("XY1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("YZ1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("YY1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("YZ1"), Y: ast.Variable("XZ1")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("XY1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY3"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("XY3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Pow{X: ast.Variable("t15"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Sub{X: ast.Variable("t16"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("XZ3"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Add{X: ast.Variable("Y3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Pow{X: ast.Variable("t18"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Sub{X: ast.Variable("t19"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("YZ3"), RHS: ast.Sub{X: ast.Variable("t20"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/hessian/extended/doubling/mdbl-20080225-hwcd",
		Tag:            "mdbl-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[25],
		Operation:      "doubling",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, page 10, bottom",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = (XY1-YZ1)(XZ1+2(XX1+ZZ1))", "Y3 = (XZ1-XY1)(YZ1+2(YY1+ZZ1))", "Z3 = (YZ1-XZ1)(XY1+2(XX1+YY1))", "XX3 = X3^2", "YY3 = Y3^2", "ZZ3 = Z3^2", "XY3 = (X3+Y3)^2-XX3-YY3", "XZ3 = (X3+Z3)^2-XX3-ZZ3", "YZ3 = (Y3+Z3)^2-YY3-ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("XY1"), Y: ast.Variable("YZ1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("XZ1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("YY1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("XZ1"), Y: ast.Variable("XY1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("YZ1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("YY1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("YZ1"), Y: ast.Variable("XZ1")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("XY1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY3"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("XY3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Pow{X: ast.Variable("t15"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Sub{X: ast.Variable("t16"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("XZ3"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Add{X: ast.Variable("Y3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Pow{X: ast.Variable("t18"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Sub{X: ast.Variable("t19"), Y: ast.Variable("YY3")}}, ast.Assignment{LHS: ast.Variable("YZ3"), RHS: ast.Sub{X: ast.Variable("t20"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/hessian/extended/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[25],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = A X1", "Y3 = A Y1", "Z3 = 1", "XX3 = X3^2", "YY3 = Y3^2", "ZZ3 = 1", "XZ3 = 2 X3", "YZ3 = 2 Y3", "XY3 = XZ3 Y3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY3"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Constant(1)}, ast.Assignment{LHS: ast.Variable("XZ3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("YZ3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("XY3"), RHS: ast.Mul{X: ast.Variable("XZ3"), Y: ast.Variable("Y3")}}}},
	},
	{
		ID:             "g1p/hessian/standard/addition/add",
		Tag:            "add",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = Y1^2 Z2 X2-Y2^2 Z1 X1", "Y3 = X1^2 Y2 Z2-X2^2 Y1 Z1", "Z3 = Z1^2 X2 Y2-Z2^2 X1 Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("t12"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/hessian/standard/addition/add-2001-jq",
		Tag:            "add-2001-jq",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "addition",
		Source:         "2001 Joye--Quisquater \"Hessian elliptic curves and side-channel attacks\"",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"T1 = X1", "T2 = Y1", "T3 = Z1", "T4 = X2", "T5 = Y2", "T6 = Z2", "T7 = T1 T6", "T1 = T1 T5", "T5 = T3 T5", "T3 = T3 T4", "T4 = T2 T4", "T2 = T2 T6", "T6 = T2 T7", "T2 = T2 T4", "T4 = T3 T4", "T3 = T3 T5", "T5 = T1 T5", "T1 = T1 T7", "T1 = T1-T4", "T2 = T2-T5", "T3 = T3-T6", "X3 = T2", "Y3 = T1", "Z3 = T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Variable("X2")}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Variable("Z2")}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T2")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("T1")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("T3")}}},
	},
	{
		ID:             "g1p/hessian/standard/addition/add-2008-hwcd",
		Tag:            "add-2008-hwcd",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, page 10, top",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX1 = X1^2", "YY1 = Y1^2", "ZZ1 = Z1^2", "XY1 = (X1+Y1)^2-XX1-YY1", "XZ1 = (X1+Z1)^2-XX1-ZZ1", "YZ1 = (Y1+Z1)^2-YY1-ZZ1", "XX2 = X2^2", "YY2 = Y2^2", "ZZ2 = Z2^2", "XY2 = (X2+Y2)^2-XX2-YY2", "XZ2 = (X2+Z2)^2-XX2-ZZ2", "YZ2 = (Y2+Z2)^2-YY2-ZZ2", "X3 = YY1 XZ2 - XZ1 YY2", "Y3 = XX1 YZ2 - YZ1 XX2", "Z3 = ZZ1 XY2 - XY1 ZZ2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("XY1"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("YY1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("XZ1"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("YY1")}}, ast.Assignment{LHS: ast.Variable("YZ1"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("XX2"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY2"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("t9"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("XY2"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("XZ2"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Pow{X: ast.Variable("t15"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Sub{X: ast.Variable("t16"), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("YZ2"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("XZ1"), Y: ast.Variable("YY2")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("YY1"), Y: ast.Variable("XZ2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("YZ1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("YZ2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t21"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("XY1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("XY2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t23"), Y: ast.Variable("t22")}}}},
	},
	{
		ID:             "g1p/hessian/standard/addition/add-2009-bkl",
		Tag:            "add-2009-bkl",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "addition",
		Source:         "2009 Bernstein--Kohel--Lange (introduction)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Y1X2 = Y1 X2", "Y1Y2 = Y1 Y2", "Z1Y2 = Z1 Y2", "Z1Z2 = Z1 Z2", "X1Z2 = X1 Z2", "X1X2 = X1 X2", "X3 = Z1Z2 Z1Y2-X1X2 Y1X2", "Y3 = Y1Y2 Y1X2-Z1Z2 X1Z2", "Z3 = X1X2 X1Z2-Y1Y2 Z1Y2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Y1X2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Y1Y2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("Z1Y2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("Z1Z2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("X1Z2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("X1X2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1X2"), Y: ast.Variable("Y1X2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1Z2"), Y: ast.Variable("Z1Y2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1Z2"), Y: ast.Variable("X1Z2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("Y1Y2"), Y: ast.Variable("Y1X2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Y1Y2"), Y: ast.Variable("Z1Y2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("X1X2"), Y: ast.Variable("X1Z2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}}},
	},
	{
		ID:             "g1p/hessian/standard/addition/add2",
		Tag:            "add2",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X1Y2 = X1 Y2", "X1Z2 = X1 Z2", "Y1Z2 = Y1 Z2", "Y1X2 = Y1 X2", "Z1X2 = Z1 X2", "Z1Y2 = Z1 Y2", "X3 = Y1X2 Y1Z2-Z1Y2 X1Y2", "Y3 = X1Z2 X1Y2-Y1X2 Z1X2", "Z3 = Z1Y2 Z1X2-X1Z2 Y1Z2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("X1Y2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("X1Z2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Y1Z2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Y1X2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Z1X2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Z1Y2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1Y2"), Y: ast.Variable("X1Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1X2"), Y: ast.Variable("Y1Z2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1X2"), Y: ast.Variable("Z1X2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1Z2"), Y: ast.Variable("X1Y2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1Z2"), Y: ast.Variable("Y1Z2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Z1Y2"), Y: ast.Variable("Z1X2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}}},
	},
	{
		ID:             "g1p/hessian/standard/addition/madd",
		Tag:            "madd",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"X1Y2 = X1 Y2", "Y1X2 = Y1 X2", "Z1X2 = Z1 X2", "Z1Y2 = Z1 Y2", "X3 = Y1X2 Y1-Z1Y2 X1Y2", "Y3 = X1 X1Y2-Y1X2 Z1X2", "Z3 = Z1Y2 Z1X2-X1 Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("X1Y2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("Y1X2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Z1X2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Z1Y2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1Y2"), Y: ast.Variable("X1Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1X2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1X2"), Y: ast.Variable("Z1X2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X1Y2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Z1Y2"), Y: ast.Variable("Z1X2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}}},
	},
	{
		ID:             "g1p/hessian/standard/addition/mmadd",
		Tag:            "mmadd",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"X1Y2 = X1 Y2", "Y1X2 = Y1 X2", "X3 = Y1X2 Y1-Y2 X1Y2", "Y3 = X1 X1Y2-Y1X2 X2", "Z3 = Y2 X2-X1 Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("X1Y2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("Y1X2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("X1Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1X2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1X2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X1Y2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}}},
	},
	{
		ID:             "g1p/hessian/standard/addition/xmadd-2007-hcd",
		Tag:            "xmadd-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "addition",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"X2 = 1"},
		Compute:        []string{"S0 = Y2^2", "S1 = Z2^2", "S2 = (Y2+Z2)^2-S0-S1", "S3 = 2 Y2", "S4 = 2 Z2", "R0 = X1^2", "R1 = Y1^2", "R2 = Z1^2", "R3 = X1+Y1", "Y3 = Y1+Z1", "Y3 = Y3^2", "Z3 = X1+Z1", "Z3 = Z3^2", "X3 = R3^2", "R3 = Y3-R1", "R3 = R3-R2", "Y3 = R0 S2", "Y3 = Y3-R3", "R3 = X3-R0", "R3 = R3-R1", "Z3 = Z3-R0", "Z3 = Z3-R2", "X3 = R1 S4", "R0 = Z3 S0", "X3 = X3-R0", "Z3 = R2 S3", "R0 = R3 S1", "Z3 = Z3-R0"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("S0"), RHS: ast.Pow{X: ast.Variable("Y2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("S0")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("S4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("Y3"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("R3"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("R0"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("Y3"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("R0")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("R3"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("R0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("S4")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("S0")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("R0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("S3")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("R0")}}}},
	},
	{
		ID:             "g1p/hessian/standard/doubling/dbl",
		Tag:            "dbl",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "doubling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = Y1(Z1^3-X1^3)", "Y3 = X1(Y1^3-Z1^3)", "Z3 = Z1(X1^3-Y1^3)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/hessian/standard/doubling/dbl-2001-jq",
		Tag:            "dbl-2001-jq",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "doubling",
		Source:         "2001 Joye--Quisquater \"Hessian elliptic curves and side-channel attacks\", applying the addition formulas to permuted input coordinates",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"T1 = Z1", "T2 = X1", "T3 = Y1", "T4 = Y1", "T5 = Z1", "T6 = X1", "T7 = T1 T6", "T1 = T1 T5", "T5 = T3 T5", "T3 = T3 T4", "T4 = T2 T4", "T2 = T2 T6", "T6 = T2 T7", "T2 = T2 T4", "T4 = T3 T4", "T3 = T3 T5", "T5 = T1 T5", "T1 = T1 T7", "T1 = T1-T4", "T2 = T2-T5", "T3 = T3-T6", "X3 = T2", "Y3 = T1", "Z3 = T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T2")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("T1")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("T3")}}},
	},
	{
		ID:             "g1p/hessian/standard/doubling/dbl-2007-hcd",
		Tag:            "dbl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = Y1(X1+Y1)", "C = A + B", "D = Z1(Z1+X1)", "E = A + D", "F = C(X1-Y1)", "G = E(Z1-X1)", "Z3 = F Z1", "Y3 = -(F+G)X1", "X3 = G Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Z1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Neg{X: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("Y1")}}}},
	},
	{
		ID:             "g1p/hessian/standard/doubling/dbl-2007-hcd-2",
		Tag:            "dbl-2007-hcd-2",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"R0 = X1^2", "R1 = X1+Y1", "R1 = Y1 R1", "R2 = Z1+X1", "R2 = Z1 R2", "R2 = R0+R2", "R1 = R0+R1", "R0 = X1-Y1", "R0 = R1 R0", "Z3 = R0 Z1", "R1 = Z1-X1", "R1 = R2 R1", "X3 = R1 Y1", "R2 = -(R0+R1)", "Y3 = R2 X1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Add{X: ast.Variable("R0"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Add{X: ast.Variable("R0"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("R0"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("Z1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("R0"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Neg{X: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("X1")}}}},
	},
	{
		ID:             "g1p/hessian/standard/doubling/dbl-2007-hcd-3",
		Tag:            "dbl-2007-hcd-3",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = Y1^2", "C = Z1^2", "D = A+B", "E = A+C", "F = B+C", "G = (X1+Y1)^2-D", "H = (X1+Z1)^2-E", "J = (Y1+Z1)^2-F", "X3 = (J-G)(H+2 E)", "Y3 = (G-H)(J+2 F)", "Z3 = (H-J)(G+2 D)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("J"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("J"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}}},
	},
	{
		ID:             "g1p/hessian/standard/doubling/dbl-2007-hcd-4",
		Tag:            "dbl-2007-hcd-4",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"R0 = X1^2", "R1 = Y1^2", "R2 = Z1^2", "R3 = R0+R1", "R4 = R0+R2", "R5 = R1+R2", "R0 = X1+Y1", "R0 = R0^2", "R0 = R0-R3", "R1 = X1+Z1", "R1 = R1^2", "R1 = R1-R4", "R2 = Y1+Z1", "R3 = 2 R3", "R2 = R2^2", "R4 = 2 R4", "R2 = R2-R5", "R5 = 2 R5", "X3 = R2-R0", "R4 = R1+R4", "X3 = X3 R4", "Y3 = R0-R1", "R5 = R2+R5", "Y3 = Y3 R5", "Z3 = R1-R2", "R0 = R0+R3", "Z3 = Z3 R0"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Add{X: ast.Variable("R0"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Add{X: ast.Variable("R0"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Pow{X: ast.Variable("R0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Sub{X: ast.Variable("R0"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R0")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("R0"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y3"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Add{X: ast.Variable("R0"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("R0")}}}},
	},
	{
		ID:             "g1p/hessian/standard/doubling/dbl2",
		Tag:            "dbl2",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "doubling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "XXX = X1 XX", "YY = Y1^2", "YYY = Y1 YY", "ZZ = Z1^2", "ZZZ = Z1 ZZ", "X3 = Y1(ZZZ-XXX)", "Y3 = X1(YYY-ZZZ)", "Z3 = Z1(XXX-YYY)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("XXX"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YYY"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZZ"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("ZZZ"), Y: ast.Variable("XXX")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("YYY"), Y: ast.Variable("ZZZ")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("XXX"), Y: ast.Variable("YYY")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t2")}}}},
	},
	{
		ID:             "g1p/hessian/standard/doubling/mdbl-2007-hcd",
		Tag:            "mdbl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"A = X1^2", "B = Y1^2", "D = A+B", "G = (X1+Y1)^2-D", "X3 = (2 Y1-G)(X1+A+1)", "Y3 = (G-2 X1)(Y1+B+1)", "Z3 = (X1-Y1)(G+2 D)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/hessian/standard/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = A X1", "Y3 = A Y1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/hessian/standard/tripling/tpl-2007-hcd",
		Tag:            "tpl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = 3 d(Y1^3 (Z1^3 - X1^3) (X1^3 - Y1^3)- X1^3 (Y1^3 - Z1^3) (Y1^3 - Z1^3))", "Y3 = 3 d(X1^3 (Y1^3 - Z1^3) (X1^3 - Y1^3)- Y1^3 (Z1^3 - X1^3) (Z1^3 - X1^3))", "Z3 = (X1^3 + Y1^3 + Z1^3) ((Y1^3 - Z1^3) (Z1^3 - X1^3)-(X1^3 - Y1^3)^2)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("t12"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Sub{X: ast.Variable("t20"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Sub{X: ast.Variable("t22"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Sub{X: ast.Variable("t24"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Sub{X: ast.Variable("t26"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Mul{X: ast.Variable("t30"), Y: ast.Variable("t31")}}, ast.Assignment{LHS: ast.Variable("t35"), RHS: ast.Mul{X: ast.Variable("t33"), Y: ast.Variable("t34")}}, ast.Assignment{LHS: ast.Variable("t36"), RHS: ast.Mul{X: ast.Variable("t28"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("t37"), RHS: ast.Mul{X: ast.Variable("t32"), Y: ast.Variable("t36")}}, ast.Assignment{LHS: ast.Variable("t38"), RHS: ast.Sub{X: ast.Variable("t37"), Y: ast.Variable("t35")}}, ast.Assignment{LHS: ast.Variable("t39"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t38")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t39")}}, ast.Assignment{LHS: ast.Variable("t40"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t41"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t42"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t43"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t44"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t45"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t46"), RHS: ast.Sub{X: ast.Variable("t40"), Y: ast.Variable("t41")}}, ast.Assignment{LHS: ast.Variable("t47"), RHS: ast.Sub{X: ast.Variable("t42"), Y: ast.Variable("t43")}}, ast.Assignment{LHS: ast.Variable("t48"), RHS: ast.Sub{X: ast.Variable("t44"), Y: ast.Variable("t45")}}, ast.Assignment{LHS: ast.Variable("t49"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t50"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t51"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t52"), RHS: ast.Pow{X: ast.Variable("t48"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t53"), RHS: ast.Mul{X: ast.Variable("t46"), Y: ast.Variable("t47")}}, ast.Assignment{LHS: ast.Variable("t54"), RHS: ast.Add{X: ast.Variable("t49"), Y: ast.Variable("t50")}}, ast.Assignment{LHS: ast.Variable("t55"), RHS: ast.Add{X: ast.Variable("t54"), Y: ast.Variable("t51")}}, ast.Assignment{LHS: ast.Variable("t56"), RHS: ast.Sub{X: ast.Variable("t53"), Y: ast.Variable("t52")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t55"), Y: ast.Variable("t56")}}}},
	},
	{
		ID:             "g1p/hessian/standard/tripling/tpl-2007-hcd-2",
		Tag:            "tpl-2007-hcd-2",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson, plus elimination of common subexpressions",
		AppliesTo:      "",
		Assume:         []string{"a = 3 d"},
		Compute:        []string{"XX = X1^2", "A = XX X1", "YY = Y1^2", "B = YY Y1", "ZZ = Z1^2", "C = ZZ Z1", "AB = A-B", "BC = B-C", "CA = C-A", "U = B CA", "V = A BC", "X3 = a(U AB-V BC)", "Y3 = a(V AB-U CA)", "Z3 = (A+B+C)(BC CA-AB^2)"},
		Parameters:     []string{"a"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("XX"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("ZZ"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("AB"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("BC"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("CA"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("CA")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("BC")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("BC")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("AB")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("CA")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("AB")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("AB"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("BC"), Y: ast.Variable("CA")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/hessian/standard/tripling/tpl-2007-hcd-3",
		Tag:            "tpl-2007-hcd-3",
		Class:          "g1p",
		Shape:          shapes[6],
		Representation: representations[26],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"3 b d = 1"},
		Compute:        []string{"R0 = X1^2", "X3 = R0 X1", "R0 = Y1^2", "Y3 = R0 Y1", "R0 = Z1^2", "Z3 = R0 Z1", "R0 = X3-Y3", "R0 = R0^2", "R1 = X3-Z3", "R1 = R1^2", "R2 = Y3-Z3", "R2 = R2^2", "Z3 = Z3+X3", "Z3 = Z3+Y3", "Z3 = b Z3", "R3 = R0+R2", "R0 = R0+R1", "R4 = R1+R3", "Z3 = Z3 R4", "R4 = R1-R3", "R4 = R4 X3", "R3 = R2-R0", "R3 = Y3 R3", "X3 = X3 R2", "X3 = 2 X3", "X3 = X3-R3", "Y3 = Y3 R1", "Y3 = 2 Y3", "Y3 = Y3-R4"},
		Parameters:     []string{"b"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("R0"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("R0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("R0"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Pow{X: ast.Variable("R0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("Y3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Add{X: ast.Variable("R0"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Add{X: ast.Variable("R0"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Mul{X: ast.Variable("R4"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R0")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("Y3"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y3"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("Y3"), Y: ast.Variable("R4")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/addition/add-1986-cc",
		Tag:            "add-1986-cc",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "addition",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", formula (4.9i)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"S3 = Z1 C2 S1 D2+D1 S2 C1 Z2", "C3 = Z1 C2 C1 Z2-D1 S2 S1 D2", "D3 = Z1 D1 Z2 D2-a S1 C1 S2 C2", "Z3 = (Z1 C2)^2+(D1 S2)^2", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("C2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("C2"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t18"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Pow{X: ast.Variable("t20"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("t19"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t21"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/addition/add-1986-cc-2",
		Tag:            "add-1986-cc-2",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "addition",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", formula (4.9i), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Z1C2 = Z1 C2", "S1D2 = S1 D2", "D1S2 = D1 S2", "C1Z2 = C1 Z2", "S3 = Z1C2 S1D2+D1S2 C1Z2", "C3 = Z1C2 C1Z2-D1S2 S1D2", "D3 = Z1 D1 Z2 D2-a S1 C1 S2 C2", "Z3 = Z1C2^2+D1S2^2", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1C2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("S1D2"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("D1S2"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("C1Z2"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("D1S2"), Y: ast.Variable("C1Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1C2"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("D1S2"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("Z1C2"), Y: ast.Variable("C1Z2")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Z1C2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("D1S2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/addition/add-2001-ls",
		Tag:            "add-2001-ls",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "addition",
		Source:         "2001 Liardet--Smart \"Preventing SPA/DPA in ECC systems using the Jacobi form\"",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Z1C2 = Z1 C2", "S1D2 = S1 D2", "D1S2 = D1 S2", "C1Z2 = C1 Z2", "U = Z1C2 C1Z2", "V = D1S2 S1D2", "S3 = (Z1C2+D1S2)(C1Z2+S1D2)-U-V", "C3 = U-V", "D3 = Z1 D1 Z2 D2-a S1 C1 S2 C2", "Z3 = Z1C2^2+D1S2^2", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1C2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("S1D2"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("D1S2"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("C1Z2"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("Z1C2"), Y: ast.Variable("C1Z2")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("D1S2"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z1C2"), Y: ast.Variable("D1S2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("C1Z2"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Z1C2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("D1S2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/addition/add-20080225-hwcd",
		Tag:            "add-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, page 6",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"E = S1 D2", "F = C1 Z2", "G = D1 S2", "H = Z1 C2", "J = SC1 DZ2", "K = DZ1 SC2", "S3 = (H+F)(E+G)-J-K", "C3 = (H+E)(F-G)-J+K", "D3 = (DZ1-a SC1)(SC2+DZ2)+a J-K", "Z3 = (H+G)^2-2 K", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("SC1"), Y: ast.Variable("DZ2")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Variable("DZ1"), Y: ast.Variable("SC2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("SC1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("DZ1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("SC2"), Y: ast.Variable("DZ2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/addition/madd-2001-ls",
		Tag:            "madd-2001-ls",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "addition",
		Source:         "2001 Liardet--Smart \"Preventing SPA/DPA in ECC systems using the Jacobi form\", plus substitution Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"Z1C2 = Z1 C2", "S1D2 = S1 D2", "D1S2 = D1 S2", "U = Z1C2 C1", "V = D1S2 S1D2", "S3 = (Z1C2+D1S2)(C1+S1D2)-U-V", "C3 = U-V", "D3 = Z1 D1 D2-a S1 C1 S2 C2", "Z3 = Z1C2^2+D1S2^2", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1C2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("S1D2"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("D1S2"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("Z1C2"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("D1S2"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z1C2"), Y: ast.Variable("D1S2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("C1"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z1C2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("D1S2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/addition/madd-20080225-hwcd",
		Tag:            "madd-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, page 6",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"E = S1 D2", "G = D1 S2", "H = Z1 C2", "J = SC1 D2", "K = DZ1 SC2", "S3 = (H+C1)(E+G)-J-K", "C3 = (H+E)(C1-G)-J+K", "D3 = (DZ1-a SC1)(SC2+D2)+a J-K", "Z3 = (H+G)^2-2 K", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("SC1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Variable("DZ1"), Y: ast.Variable("SC2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("C1"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("SC1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("DZ1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("SC2"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/addition/mmadd-2001-ls",
		Tag:            "mmadd-2001-ls",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "addition",
		Source:         "2001 Liardet--Smart \"Preventing SPA/DPA in ECC systems using the Jacobi form\", plus Z1=1, plus Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"S1D2 = S1 D2", "D1S2 = D1 S2", "U = C2 C1", "V = D1S2 S1D2", "S3 = (C2+D1S2)(C1+S1D2)-U-V", "C3 = U-V", "D3 = D1 D2-a S1 S2 U", "Z3 = C2^2+D1S2^2", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("S1D2"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("D1S2"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("C2"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("D1S2"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("C2"), Y: ast.Variable("D1S2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("C1"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("C2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("D1S2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/addition/smadd-2001-ls",
		Tag:            "smadd-2001-ls",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "addition",
		Source:         "2001 Liardet--Smart \"Preventing SPA/DPA in ECC systems using the Jacobi form\", plus substitution S2=1 (as suggested by 2007 Hisil--Carter--Dawson)",
		AppliesTo:      "",
		Assume:         []string{"S2 = 1"},
		Compute:        []string{"Z2D2 = Z2 D2", "E = Z1 C2", "F = S1 D2", "G = C1 Z2", "H = E G", "J = D1 F", "S3 = (E+D1)(G+F)-H-J", "C3 = H-J", "D3 = Z1 D1 Z2D2-a S1 C1 C2", "Z3 = E^2+D1^2", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z2D2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("Z2D2")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("D1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/doubling/dbl-1986-cc",
		Tag:            "dbl-1986-cc",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "doubling",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", formula 4.9ii",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"S3 = 2 C1 Z1 D1 S1", "C3 = (C1 Z1)^2-(D1 Z1)^2+(C1 D1)^2", "D3 = (D1 Z1)^2-(C1 Z1)^2+(C1 D1)^2", "Z3 = (D1 Z1)^2+(C1 Z1)^2-(C1 D1)^2", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("t11"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t10"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Add{X: ast.Variable("t16"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Pow{X: ast.Variable("t19"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Pow{X: ast.Variable("t18"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("t17"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("t20"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t23"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/doubling/dbl-1986-cc-2",
		Tag:            "dbl-1986-cc-2",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "doubling",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", formula 4.9ii, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"C1Z1 = C1 Z1", "C1D1 = C1 D1", "D1Z1 = D1 Z1", "D1S1 = D1 S1", "U = C1Z1^2", "V = C1D1^2", "W = D1Z1^2", "UV = U-V", "S3 = 2 C1Z1 D1S1", "C3 = U-W+V", "D3 = W-UV", "Z3 = W+UV", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("C1Z1"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C1D1"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("D1Z1"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("D1S1"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Pow{X: ast.Variable("C1Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Pow{X: ast.Variable("C1D1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Pow{X: ast.Variable("D1Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("UV"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("C1Z1"), Y: ast.Variable("D1S1")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("UV")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("UV")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/doubling/dbl-2001-ls",
		Tag:            "dbl-2001-ls",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "doubling",
		Source:         "2001 Liardet--Smart \"Preventing SPA/DPA in ECC systems using the Jacobi form\"",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"a0 = S1", "a1 = C1", "a2 = D1", "a3 = Z1", "l1 = a3 a1", "l2 = a0 a2", "l3 = 2(a1 a2)^2", "r0 = 2 l1 l2", "r3 = (l1+l2)^2-r0", "r1 = r3-2 l2^2", "r2 = -r1+l3", "S3 = r0", "C3 = r1", "D3 = r2", "Z3 = r3", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("a0"), RHS: ast.Variable("S1")}, ast.Assignment{LHS: ast.Variable("a1"), RHS: ast.Variable("C1")}, ast.Assignment{LHS: ast.Variable("a2"), RHS: ast.Variable("D1")}, ast.Assignment{LHS: ast.Variable("a3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("l1"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("a1")}}, ast.Assignment{LHS: ast.Variable("l2"), RHS: ast.Mul{X: ast.Variable("a0"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a1"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("l3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("l1"), Y: ast.Variable("l2")}}, ast.Assignment{LHS: ast.Variable("r0"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("l1"), Y: ast.Variable("l2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("r3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("r0")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("l2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("r1"), RHS: ast.Sub{X: ast.Variable("r3"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("r1"), Y: ast.Variable("l3")}}, ast.Assignment{LHS: ast.Variable("r2"), RHS: ast.Neg{X: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Variable("r0")}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Variable("r1")}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Variable("r2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("r3")}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/doubling/dbl-2007-bl",
		Tag:            "dbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"a0 = S1", "a1 = C1", "a2 = D1", "a3 = Z1", "l1 = a3 a1", "m = l1^2", "l2 = a0 a2", "n = l2^2", "l3 = 2(a1 a2)^2", "r3 = m+n", "r0 = (l1+l2)^2-r3", "r1 = m-n", "r2 = l3-r1", "S3 = r0", "C3 = r1", "D3 = r2", "Z3 = r3", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("a0"), RHS: ast.Variable("S1")}, ast.Assignment{LHS: ast.Variable("a1"), RHS: ast.Variable("C1")}, ast.Assignment{LHS: ast.Variable("a2"), RHS: ast.Variable("D1")}, ast.Assignment{LHS: ast.Variable("a3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("l1"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("a1")}}, ast.Assignment{LHS: ast.Variable("m"), RHS: ast.Pow{X: ast.Variable("l1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("l2"), RHS: ast.Mul{X: ast.Variable("a0"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("n"), RHS: ast.Pow{X: ast.Variable("l2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a1"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("l3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("r3"), RHS: ast.Add{X: ast.Variable("m"), Y: ast.Variable("n")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("l1"), Y: ast.Variable("l2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("r0"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("r3")}}, ast.Assignment{LHS: ast.Variable("r1"), RHS: ast.Sub{X: ast.Variable("m"), Y: ast.Variable("n")}}, ast.Assignment{LHS: ast.Variable("r2"), RHS: ast.Sub{X: ast.Variable("l3"), Y: ast.Variable("r1")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Variable("r0")}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Variable("r1")}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Variable("r2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("r3")}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/doubling/dbl-20080225-hwcd",
		Tag:            "dbl-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "doubling",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"E = DZ1^2", "F = SC1^2", "G = a F", "Z3 = E+G", "D3 = E-G", "CC1 = C1^2", "C3 = 2(F+CC1^2)-Z3", "S3 = (SC1+DZ1)^2-E-F", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("DZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("SC1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("CC1"), RHS: ast.Pow{X: ast.Variable("C1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("CC1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("SC1"), Y: ast.Variable("DZ1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/doubling/mdbl-2007-bl",
		Tag:            "mdbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"a0 = S1", "a1 = C1", "a2 = D1", "m = a1^2", "l2 = a0 a2", "n = l2^2", "l3 = 2(a1 a2)^2", "r3 = m+n", "r0 = (a1+l2)^2-r3", "r1 = m-n", "r2 = l3-r1", "S3 = r0", "C3 = r1", "D3 = r2", "Z3 = r3", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("a0"), RHS: ast.Variable("S1")}, ast.Assignment{LHS: ast.Variable("a1"), RHS: ast.Variable("C1")}, ast.Assignment{LHS: ast.Variable("a2"), RHS: ast.Variable("D1")}, ast.Assignment{LHS: ast.Variable("m"), RHS: ast.Pow{X: ast.Variable("a1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("l2"), RHS: ast.Mul{X: ast.Variable("a0"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("n"), RHS: ast.Pow{X: ast.Variable("l2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a1"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("l3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("r3"), RHS: ast.Add{X: ast.Variable("m"), Y: ast.Variable("n")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("a1"), Y: ast.Variable("l2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("r0"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("r3")}}, ast.Assignment{LHS: ast.Variable("r1"), RHS: ast.Sub{X: ast.Variable("m"), Y: ast.Variable("n")}}, ast.Assignment{LHS: ast.Variable("r2"), RHS: ast.Sub{X: ast.Variable("l3"), Y: ast.Variable("r1")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Variable("r0")}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Variable("r1")}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Variable("r2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("r3")}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "S3 = S1 A", "C3 = C1 A", "D3 = D1 A", "Z3 = 1", "SC3 = S3 C3", "DZ3 = D3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Variable("D3")}}},
	},
	{
		ID:             "g1p/jintersect/extended/tripling/tpl-2007-hcd",
		Tag:            "tpl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"b = a - 1"},
		Compute:        []string{"E  =  S1^2", "F  =  C1^2", "G  =  E^2", "H  =  F^2", "J  =  2 H", "K  =  2 J", "L  =  (2 F+E)^2-G-K", "M  =  b G", "N  =  K+J", "P  =  M^2", "R  =  N M", "U  =  M L", "V  =  H^2", "W  =  H L", "S3  =  S1(R+b W+2(P-V)-W-P-V)", "C3  =  C1(2(P-V)-U+P+V-R+b U)", "D3  =  D1(U-P-V+R+b W)", "Z3  =  Z1(R-b U-W-P-V)", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string{"b"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("C1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("N"), RHS: ast.Add{X: ast.Variable("K"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("N"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("P"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("R"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("P"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Add{X: ast.Variable("t16"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Add{X: ast.Variable("t18"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Sub{X: ast.Variable("t21"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("t22"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("t23"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Sub{X: ast.Variable("t26"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Sub{X: ast.Variable("t27"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Sub{X: ast.Variable("t28"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/tripling/tpl-2007-hcd-2",
		Tag:            "tpl-2007-hcd-2",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"b = a - 1"},
		Compute:        []string{"R0  =  S1^2", "R1  =  C1^2", "R2  =  R0^2", "R3  =  R1^2", "R4  =  2 R3", "R5  =  2 R4", "R6  =  2 R1", "R6  =  R6+R0", "R6  =  R6^2", "R6  =  R6-R2", "R6  =  R6-R5", "R2  =  b R2", "R5  =  R5+R4", "R4  =  R2^2", "R0  =  R5 R2", "R5  =  R2 R6", "R2  =  R3^2", "R1  =  R3 R6", "R3  =  R4-R2", "R2  =  R4+R2", "R4  =  2 R3", "R3  =  b R1", "R6  =  b R5", "R3  =  R0+R3", "R1  =  R1+R2", "R0  =  R0-R6", "R2  =  R5-R2", "R5  =  R3+R4", "R5  =  R5-R1", "S3  =  S1 R5", "R4  =  R4-R2", "R4  =  R4-R0", "C3  =  C1 R4", "R2  =  R2+R3", "D3  =  D1 R2", "R0  =  R0-R1", "Z3  =  Z1 R0", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string{"b"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("C1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("R0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Add{X: ast.Variable("R6"), Y: ast.Variable("R0")}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Pow{X: ast.Variable("R6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Sub{X: ast.Variable("R6"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Sub{X: ast.Variable("R6"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Add{X: ast.Variable("R5"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Mul{X: ast.Variable("R5"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("R4"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Add{X: ast.Variable("R4"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Add{X: ast.Variable("R0"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Sub{X: ast.Variable("R0"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R5"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Add{X: ast.Variable("R3"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Sub{X: ast.Variable("R5"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Sub{X: ast.Variable("R4"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Sub{X: ast.Variable("R4"), Y: ast.Variable("R0")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Sub{X: ast.Variable("R0"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("R0")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/tripling/tpl-2007-hcd-3",
		Tag:            "tpl-2007-hcd-3",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"b = a - 1", "b2 = 2 b", "bb2 = 2 b b", "b3 = 3 b"},
		Compute:        []string{"E = S1^2", "F = C1^2", "G = E^2", "H = F^2", "J = G^2", "K = H^2", "L = (E+F)^2-H-G", "M = L^2", "N = (G+L)^2-J-M", "P = (H+L)^2-K-M", "R = bb2 J", "Q = b2 N", "T = b3 M", "U = 2 P", "V = 2 K", "W = a U", "Y = a Q", "S3 = S1((R-V)+(T+W)-2(U+V))", "C3 = C1((R-V)-(T-Y)+2(R-Q))", "D3 = D1((T+W)-(R-Q)-(U+V))", "Z3 = Z1((T-Y)-(R-Q)-(U+V))", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string{"b", "b2", "bb2", "b3"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("C1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Pow{X: ast.Variable("G"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Pow{X: ast.Variable("L"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("N"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("bb2"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Variable("b2"), Y: ast.Variable("N")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Variable("b3"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("Y"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("Y")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Sub{X: ast.Variable("t21"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Sub{X: ast.Variable("t24"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("Y")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Sub{X: ast.Variable("t26"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Sub{X: ast.Variable("t29"), Y: ast.Variable("t28")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/extended/tripling/tpl-2007-hcd-4",
		Tag:            "tpl-2007-hcd-4",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[27],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"b = a - 1", "b2 = 2 b", "b3 = 3 b", "bb2 = 2 b b"},
		Compute:        []string{"E = S1^2", "F = C1^2", "G = E^2", "H = F^2", "J = G^2", "K = H^2", "L = (E+F)^2-H-G", "M = L^2", "N = (G+L)^2-J-M", "P = (H+L)^2-K-M", "R = bb2 J", "Q = b2 N", "T = b3 M", "U = 2 P", "V = 2 K", "W = a U", "Y = a Q", "RV = R-V", "RQ = R-Q", "UV = U+V", "TW = T+W", "TY = T-Y", "RQUV = RQ+UV", "S3 = S1(RV+TW-2 UV)", "C3 = C1(RV-TY+2 RQ)", "D3 = D1(TW-RQUV)", "Z3 = Z1(TY-RQUV)", "SC3 = S3 C3", "DZ3 = D3 Z3"},
		Parameters:     []string{"b", "b2", "b3", "bb2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("C1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Pow{X: ast.Variable("G"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Pow{X: ast.Variable("L"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("N"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("bb2"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Variable("b2"), Y: ast.Variable("N")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Variable("b3"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("Y"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("RV"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("RQ"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("UV"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("TW"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("TY"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("Y")}}, ast.Assignment{LHS: ast.Variable("RQUV"), RHS: ast.Add{X: ast.Variable("RQ"), Y: ast.Variable("UV")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("UV")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("RV"), Y: ast.Variable("TW")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("RQ")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("RV"), Y: ast.Variable("TY")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("TW"), Y: ast.Variable("RQUV")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("TY"), Y: ast.Variable("RQUV")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("SC3"), RHS: ast.Mul{X: ast.Variable("S3"), Y: ast.Variable("C3")}}, ast.Assignment{LHS: ast.Variable("DZ3"), RHS: ast.Mul{X: ast.Variable("D3"), Y: ast.Variable("Z3")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/addition/add-1986-cc",
		Tag:            "add-1986-cc",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "addition",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", formula (4.9i)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"S3 = Z1 C2 S1 D2+D1 S2 C1 Z2", "C3 = Z1 C2 C1 Z2-D1 S2 S1 D2", "D3 = Z1 D1 Z2 D2-a S1 C1 S2 C2", "Z3 = (Z1 C2)^2+(D1 S2)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("C2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("C2"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t18"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Pow{X: ast.Variable("t20"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("t19"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t21"), Y: ast.Variable("t22")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/addition/add-1986-cc-2",
		Tag:            "add-1986-cc-2",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "addition",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", formula (4.9i), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Z1C2 = Z1 C2", "S1D2 = S1 D2", "D1S2 = D1 S2", "C1Z2 = C1 Z2", "S3 = Z1C2 S1D2+D1S2 C1Z2", "C3 = Z1C2 C1Z2-D1S2 S1D2", "D3 = Z1 D1 Z2 D2-a S1 C1 S2 C2", "Z3 = Z1C2^2+D1S2^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1C2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("S1D2"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("D1S2"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("C1Z2"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("D1S2"), Y: ast.Variable("C1Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1C2"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("D1S2"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("Z1C2"), Y: ast.Variable("C1Z2")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Z1C2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("D1S2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/addition/add-2001-ls",
		Tag:            "add-2001-ls",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "addition",
		Source:         "2001 Liardet--Smart \"Preventing SPA/DPA in ECC systems using the Jacobi form\"",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Z1C2 = Z1 C2", "S1D2 = S1 D2", "D1S2 = D1 S2", "C1Z2 = C1 Z2", "U = Z1C2 C1Z2", "V = D1S2 S1D2", "S3 = (Z1C2+D1S2)(C1Z2+S1D2)-U-V", "C3 = U-V", "D3 = Z1 D1 Z2 D2-a S1 C1 S2 C2", "Z3 = Z1C2^2+D1S2^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1C2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("S1D2"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("D1S2"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("C1Z2"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("Z1C2"), Y: ast.Variable("C1Z2")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("D1S2"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z1C2"), Y: ast.Variable("D1S2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("C1Z2"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Z1C2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("D1S2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/addition/add-20080225-hwcd",
		Tag:            "add-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, page 6",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"SC1 = S1 C1", "DZ1 = D1 Z1", "SC2 = S2 C2", "DZ2 = D2 Z2", "E = S1 D2", "F = C1 Z2", "G = D1 S2", "H = Z1 C2", "J = SC1 DZ2", "K = DZ1 SC2", "S3 = (H+F)(E+G)-J-K", "C3 = (H+E)(F-G)-J+K", "D3 = (DZ1-a SC1)(SC2+DZ2)+a J-K", "Z3 = (H+G)^2-2 K"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("SC1"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("DZ1"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("SC2"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("DZ2"), RHS: ast.Mul{X: ast.Variable("D2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("SC1"), Y: ast.Variable("DZ2")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Variable("DZ1"), Y: ast.Variable("SC2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("SC1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("DZ1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("SC2"), Y: ast.Variable("DZ2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t16")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/addition/madd-2001-ls",
		Tag:            "madd-2001-ls",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "addition",
		Source:         "2001 Liardet--Smart \"Preventing SPA/DPA in ECC systems using the Jacobi form\", plus substitution Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"Z1C2 = Z1 C2", "S1D2 = S1 D2", "D1S2 = D1 S2", "U = Z1C2 C1", "V = D1S2 S1D2", "S3 = (Z1C2+D1S2)(C1+S1D2)-U-V", "C3 = U-V", "D3 = Z1 D1 D2-a S1 C1 S2 C2", "Z3 = Z1C2^2+D1S2^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1C2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("S1D2"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("D1S2"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("Z1C2"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("D1S2"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z1C2"), Y: ast.Variable("D1S2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("C1"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z1C2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("D1S2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/addition/madd-20080225-hwcd",
		Tag:            "madd-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, page 6",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"SC1 = S1 C1", "DZ1 = D1 Z1", "SC2 = S2 C2", "E = S1 D2", "G = D1 S2", "H = Z1 C2", "J = SC1 D2", "K = DZ1 SC2", "S3 = (H+C1)(E+G)-J-K", "C3 = (H+E)(C1-G)-J+K", "D3 = (DZ1-a SC1)(SC2+D2)+a J-K", "Z3 = (H+G)^2-2 K"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("SC1"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("DZ1"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("SC2"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("SC1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Variable("DZ1"), Y: ast.Variable("SC2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("C1"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("SC1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("DZ1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("SC2"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t16")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/addition/mmadd-2001-ls",
		Tag:            "mmadd-2001-ls",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "addition",
		Source:         "2001 Liardet--Smart \"Preventing SPA/DPA in ECC systems using the Jacobi form\", plus Z1=1, plus Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"S1D2 = S1 D2", "D1S2 = D1 S2", "U = C2 C1", "V = D1S2 S1D2", "S3 = (C2+D1S2)(C1+S1D2)-U-V", "C3 = U-V", "D3 = D1 D2-a S1 S2 U", "Z3 = C2^2+D1S2^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("S1D2"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("D1S2"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("C2"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("D1S2"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("C2"), Y: ast.Variable("D1S2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("C1"), Y: ast.Variable("S1D2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("S2"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("C2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("D1S2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/addition/smadd-2001-ls",
		Tag:            "smadd-2001-ls",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "addition",
		Source:         "2001 Liardet--Smart \"Preventing SPA/DPA in ECC systems using the Jacobi form\", plus substitution S2=1 (as suggested by 2007 Hisil--Carter--Dawson)",
		AppliesTo:      "",
		Assume:         []string{"S2 = 1"},
		Compute:        []string{"Z2D2 = Z2 D2", "E = Z1 C2", "F = S1 D2", "G = C1 Z2", "H = E G", "J = D1 F", "S3 = (E+D1)(G+F)-H-J", "C3 = H-J", "D3 = Z1 D1 Z2D2-a S1 C1 C2", "Z3 = E^2+D1^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z2D2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("H"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("Z2D2")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("D1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/doubling/dbl-1986-cc",
		Tag:            "dbl-1986-cc",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "doubling",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", formula 4.9ii",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"S3 = 2 C1 Z1 D1 S1", "C3 = (C1 Z1)^2-(D1 Z1)^2+(C1 D1)^2", "D3 = (D1 Z1)^2-(C1 Z1)^2+(C1 D1)^2", "Z3 = (D1 Z1)^2+(C1 Z1)^2-(C1 D1)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("t11"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t10"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Add{X: ast.Variable("t16"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Pow{X: ast.Variable("t19"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Pow{X: ast.Variable("t18"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("t17"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("t20"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t23"), Y: ast.Variable("t22")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/doubling/dbl-1986-cc-2",
		Tag:            "dbl-1986-cc-2",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "doubling",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", formula 4.9ii, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"C1Z1 = C1 Z1", "C1D1 = C1 D1", "D1Z1 = D1 Z1", "D1S1 = D1 S1", "U = C1Z1^2", "V = C1D1^2", "W = D1Z1^2", "UV = U-V", "S3 = 2 C1Z1 D1S1", "C3 = U-W+V", "D3 = W-UV", "Z3 = W+UV"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("C1Z1"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C1D1"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("D1Z1"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("D1S1"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Pow{X: ast.Variable("C1Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Pow{X: ast.Variable("C1D1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Pow{X: ast.Variable("D1Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("UV"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("C1Z1"), Y: ast.Variable("D1S1")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("W"), Y: ast.Variable("UV")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("W"), Y: ast.Variable("UV")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/doubling/dbl-2001-ls",
		Tag:            "dbl-2001-ls",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "doubling",
		Source:         "2001 Liardet--Smart \"Preventing SPA/DPA in ECC systems using the Jacobi form\"",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"a0 = S1", "a1 = C1", "a2 = D1", "a3 = Z1", "l1 = a3 a1", "l2 = a0 a2", "l3 = 2(a1 a2)^2", "r0 = 2 l1 l2", "r3 = (l1+l2)^2-r0", "r1 = r3-2 l2^2", "r2 = -r1+l3", "S3 = r0", "C3 = r1", "D3 = r2", "Z3 = r3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("a0"), RHS: ast.Variable("S1")}, ast.Assignment{LHS: ast.Variable("a1"), RHS: ast.Variable("C1")}, ast.Assignment{LHS: ast.Variable("a2"), RHS: ast.Variable("D1")}, ast.Assignment{LHS: ast.Variable("a3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("l1"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("a1")}}, ast.Assignment{LHS: ast.Variable("l2"), RHS: ast.Mul{X: ast.Variable("a0"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a1"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("l3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("l1"), Y: ast.Variable("l2")}}, ast.Assignment{LHS: ast.Variable("r0"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("l1"), Y: ast.Variable("l2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("r3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("r0")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("l2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("r1"), RHS: ast.Sub{X: ast.Variable("r3"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("r1"), Y: ast.Variable("l3")}}, ast.Assignment{LHS: ast.Variable("r2"), RHS: ast.Neg{X: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Variable("r0")}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Variable("r1")}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Variable("r2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("r3")}}},
	},
	{
		ID:             "g1p/jintersect/standard/doubling/dbl-2007-bl",
		Tag:            "dbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"a0 = S1", "a1 = C1", "a2 = D1", "a3 = Z1", "l1 = a3 a1", "m = l1^2", "l2 = a0 a2", "n = l2^2", "l3 = 2(a1 a2)^2", "r3 = m+n", "r0 = (l1+l2)^2-r3", "r1 = m-n", "r2 = l3-r1", "S3 = r0", "C3 = r1", "D3 = r2", "Z3 = r3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("a0"), RHS: ast.Variable("S1")}, ast.Assignment{LHS: ast.Variable("a1"), RHS: ast.Variable("C1")}, ast.Assignment{LHS: ast.Variable("a2"), RHS: ast.Variable("D1")}, ast.Assignment{LHS: ast.Variable("a3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("l1"), RHS: ast.Mul{X: ast.Variable("a3"), Y: ast.Variable("a1")}}, ast.Assignment{LHS: ast.Variable("m"), RHS: ast.Pow{X: ast.Variable("l1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("l2"), RHS: ast.Mul{X: ast.Variable("a0"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("n"), RHS: ast.Pow{X: ast.Variable("l2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a1"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("l3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("r3"), RHS: ast.Add{X: ast.Variable("m"), Y: ast.Variable("n")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("l1"), Y: ast.Variable("l2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("r0"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("r3")}}, ast.Assignment{LHS: ast.Variable("r1"), RHS: ast.Sub{X: ast.Variable("m"), Y: ast.Variable("n")}}, ast.Assignment{LHS: ast.Variable("r2"), RHS: ast.Sub{X: ast.Variable("l3"), Y: ast.Variable("r1")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Variable("r0")}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Variable("r1")}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Variable("r2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("r3")}}},
	},
	{
		ID:             "g1p/jintersect/standard/doubling/dbl-20080225-hwcd",
		Tag:            "dbl-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "doubling",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"SC1 = S1 C1", "DZ1 = D1 Z1", "E = DZ1^2", "F = SC1^2", "G = a F", "Z3 = E+G", "D3 = E-G", "CC1 = C1^2", "C3 = 2(F+CC1^2)-Z3", "S3 = (SC1+DZ1)^2-E-F"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("SC1"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("DZ1"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("DZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("SC1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("CC1"), RHS: ast.Pow{X: ast.Variable("C1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("CC1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("SC1"), Y: ast.Variable("DZ1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("F")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/doubling/mdbl-2007-bl",
		Tag:            "mdbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"a0 = S1", "a1 = C1", "a2 = D1", "m = a1^2", "l2 = a0 a2", "n = l2^2", "l3 = 2(a1 a2)^2", "r3 = m+n", "r0 = (a1+l2)^2-r3", "r1 = m-n", "r2 = l3-r1", "S3 = r0", "C3 = r1", "D3 = r2", "Z3 = r3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("a0"), RHS: ast.Variable("S1")}, ast.Assignment{LHS: ast.Variable("a1"), RHS: ast.Variable("C1")}, ast.Assignment{LHS: ast.Variable("a2"), RHS: ast.Variable("D1")}, ast.Assignment{LHS: ast.Variable("m"), RHS: ast.Pow{X: ast.Variable("a1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("l2"), RHS: ast.Mul{X: ast.Variable("a0"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("n"), RHS: ast.Pow{X: ast.Variable("l2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a1"), Y: ast.Variable("a2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("l3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("r3"), RHS: ast.Add{X: ast.Variable("m"), Y: ast.Variable("n")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("a1"), Y: ast.Variable("l2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("r0"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("r3")}}, ast.Assignment{LHS: ast.Variable("r1"), RHS: ast.Sub{X: ast.Variable("m"), Y: ast.Variable("n")}}, ast.Assignment{LHS: ast.Variable("r2"), RHS: ast.Sub{X: ast.Variable("l3"), Y: ast.Variable("r1")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Variable("r0")}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Variable("r1")}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Variable("r2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("r3")}}},
	},
	{
		ID:             "g1p/jintersect/standard/doubling/mdbl-20080225-hwcd",
		Tag:            "mdbl-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "doubling",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, plus assumption Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"SC1 = S1 C1", "E = D1^2", "F = SC1^2", "G = a F", "Z3 = E+G", "D3 = E-G", "CC1 = C1^2", "C3 = 2(F+CC1^2)-Z3", "S3 = (SC1+D1)^2-E-F"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("SC1"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("D1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("SC1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("CC1"), RHS: ast.Pow{X: ast.Variable("C1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("CC1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("SC1"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("F")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/doubling/mdbl-20090427-b",
		Tag:            "mdbl-20090427-b",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "doubling",
		Source:         "2009.04.27 Bernstein",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"SS1 = S1^2", "CC1 = 1-SS1", "SC1 = (S1+C1)^2-SS1-CC1", "E = D1^2", "F = SC1^2", "G = a F", "Z3 = 4 E+G", "D3 = 4 E-G", "C3 = 2(F+4 CC1^2)-Z3", "S3 = 2((SC1+D1)^2-E-F)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("SS1"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("CC1"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("SS1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("S1"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("SS1")}}, ast.Assignment{LHS: ast.Variable("SC1"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("CC1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("D1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("SC1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("CC1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("F"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("SC1"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("t9"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "S3 = S1 A", "C3 = C1 A", "D3 = D1 A", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/jintersect/standard/tripling/tpl-2007-hcd",
		Tag:            "tpl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"b = a - 1"},
		Compute:        []string{"E  =  S1^2", "F  =  C1^2", "G  =  E^2", "H  =  F^2", "J  =  2 H", "K  =  2 J", "L  =  (2 F+E)^2-G-K", "M  =  b G", "N  =  K+J", "P  =  M^2", "R  =  N M", "U  =  M L", "V  =  H^2", "W  =  H L", "S3  =  S1(R+b W+2(P-V)-W-P-V)", "C3  =  C1(2(P-V)-U+P+V-R+b U)", "D3  =  D1(U-P-V+R+b W)", "Z3  =  Z1(R-b U-W-P-V)"},
		Parameters:     []string{"b"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("C1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("N"), RHS: ast.Add{X: ast.Variable("K"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("N"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("P"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("R"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("P"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Add{X: ast.Variable("t16"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Add{X: ast.Variable("t18"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Sub{X: ast.Variable("t21"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("t22"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("t23"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Sub{X: ast.Variable("t26"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Sub{X: ast.Variable("t27"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Sub{X: ast.Variable("t28"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t29")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/tripling/tpl-2007-hcd-2",
		Tag:            "tpl-2007-hcd-2",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"b = a - 1"},
		Compute:        []string{"R0  =  S1^2", "R1  =  C1^2", "R2  =  R0^2", "R3  =  R1^2", "R4  =  2 R3", "R5  =  2 R4", "R6  =  2 R1", "R6  =  R6+R0", "R6  =  R6^2", "R6  =  R6-R2", "R6  =  R6-R5", "R2  =  b R2", "R5  =  R5+R4", "R4  =  R2^2", "R0  =  R5 R2", "R5  =  R2 R6", "R2  =  R3^2", "R1  =  R3 R6", "R3  =  R4-R2", "R2  =  R4+R2", "R4  =  2 R3", "R3  =  b R1", "R6  =  b R5", "R3  =  R0+R3", "R1  =  R1+R2", "R0  =  R0-R6", "R2  =  R5-R2", "R5  =  R3+R4", "R5  =  R5-R1", "S3  =  S1 R5", "R4  =  R4-R2", "R4  =  R4-R0", "C3  =  C1 R4", "R2  =  R2+R3", "D3  =  D1 R2", "R0  =  R0-R1", "Z3  =  Z1 R0"},
		Parameters:     []string{"b"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("C1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("R0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Add{X: ast.Variable("R6"), Y: ast.Variable("R0")}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Pow{X: ast.Variable("R6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Sub{X: ast.Variable("R6"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Sub{X: ast.Variable("R6"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Add{X: ast.Variable("R5"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Mul{X: ast.Variable("R5"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("R4"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Add{X: ast.Variable("R4"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Add{X: ast.Variable("R0"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Sub{X: ast.Variable("R0"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R5"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Add{X: ast.Variable("R3"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Sub{X: ast.Variable("R5"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Sub{X: ast.Variable("R4"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Sub{X: ast.Variable("R4"), Y: ast.Variable("R0")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R0"), RHS: ast.Sub{X: ast.Variable("R0"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("R0")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/tripling/tpl-2007-hcd-3",
		Tag:            "tpl-2007-hcd-3",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"b = a - 1", "b2 = 2 b", "bb2 = 2 b b", "b3 = 3 b"},
		Compute:        []string{"E = S1^2", "F = C1^2", "G = E^2", "H = F^2", "J = G^2", "K = H^2", "L = (E+F)^2-H-G", "M = L^2", "N = (G+L)^2-J-M", "P = (H+L)^2-K-M", "R = bb2 J", "Q = b2 N", "T = b3 M", "U = 2 P", "V = 2 K", "W = a U", "Y = a Q", "S3 = S1((R-V)+(T+W)-2(U+V))", "C3 = C1((R-V)-(T-Y)+2(R-Q))", "D3 = D1((T+W)-(R-Q)-(U+V))", "Z3 = Z1((T-Y)-(R-Q)-(U+V))"},
		Parameters:     []string{"b", "b2", "bb2", "b3"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("C1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Pow{X: ast.Variable("G"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Pow{X: ast.Variable("L"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("N"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("bb2"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Variable("b2"), Y: ast.Variable("N")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Variable("b3"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("Y"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("Y")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Sub{X: ast.Variable("t21"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Sub{X: ast.Variable("t24"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("Y")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Sub{X: ast.Variable("t26"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Sub{X: ast.Variable("t29"), Y: ast.Variable("t28")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t30")}}}},
	},
	{
		ID:             "g1p/jintersect/standard/tripling/tpl-2007-hcd-4",
		Tag:            "tpl-2007-hcd-4",
		Class:          "g1p",
		Shape:          shapes[7],
		Representation: representations[28],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"b = a - 1", "b2 = 2 b", "b3 = 3 b", "bb2 = 2 b b"},
		Compute:        []string{"E = S1^2", "F = C1^2", "G = E^2", "H = F^2", "J = G^2", "K = H^2", "L = (E+F)^2-H-G", "M = L^2", "N = (G+L)^2-J-M", "P = (H+L)^2-K-M", "R = bb2 J", "Q = b2 N", "T = b3 M", "U = 2 P", "V = 2 K", "W = a U", "Y = a Q", "RV = R-V", "RQ = R-Q", "UV = U+V", "TW = T+W", "TY = T-Y", "RQUV = RQ+UV", "S3 = S1(RV+TW-2 UV)", "C3 = C1(RV-TY+2 RQ)", "D3 = D1(TW-RQUV)", "Z3 = Z1(TY-RQUV)"},
		Parameters:     []string{"b", "b2", "b3", "bb2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("C1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Pow{X: ast.Variable("G"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Pow{X: ast.Variable("L"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("G"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("N"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("bb2"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Variable("b2"), Y: ast.Variable("N")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Variable("b3"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("Y"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("RV"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("RQ"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("UV"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("TW"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("TY"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("Y")}}, ast.Assignment{LHS: ast.Variable("RQUV"), RHS: ast.Add{X: ast.Variable("RQ"), Y: ast.Variable("UV")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("UV")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("RV"), Y: ast.Variable("TW")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("S3"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("RQ")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("RV"), Y: ast.Variable("TY")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("C3"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("TW"), Y: ast.Variable("RQUV")}}, ast.Assignment{LHS: ast.Variable("D3"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("TY"), Y: ast.Variable("RQUV")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t16")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzz/addition/add-20080225-hwcd",
		Tag:            "add-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[29],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, plus U=XX, plus V=ZZ, plus W=R/2, plus rescaling, plus denominator elimination, plus standard streamlining",
		AppliesTo:      "",
		Assume:         []string{"k = a-1"},
		Compute:        []string{"R1 = (X1+Z1)^2-XX1-ZZ1", "R2 = (X2+Z2)^2-XX2-ZZ2", "A = 2 XX1 XX2", "B = 2 ZZ1 ZZ2", "C = R1 R2", "D = Y1 Y2", "X3 = (R1+Y1)(R2+Y2)-C-D", "Z3 = B-A", "XX3 = X3^2", "ZZ3 = Z3^2", "F = A + B + C", "G = 2((XX1+ZZ1)(XX2+ZZ2)+D)+k C", "H = XX3+ZZ3", "Y3 = F G - H"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("t18"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t19"), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzz/addition/madd-20080225-hwcd",
		Tag:            "madd-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[29],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, plus U=XX, plus V=ZZ, plus W=R/2, plus rescaling, plus denominator elimination, plus standard streamlining, plus Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1", "k = a-1"},
		Compute:        []string{"R1 = (X1+Z1)^2-XX1-ZZ1", "R2 = 2 X2", "A = 2 XX1 XX2", "B = 2 ZZ1", "C = R1 R2", "D = Y1 Y2", "X3 = (R1+Y1)(R2+Y2)-C-D", "Z3 = B-A", "XX3 = X3^2", "ZZ3 = Z3^2", "F = A + B + C", "G = 2((XX1+ZZ1)(XX2+1)+D)+k C", "H = XX3+ZZ3", "Y3 = F G - H"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("t14"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzz/doubling/dbl-2007-fw",
		Tag:            "dbl-2007-fw",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[29],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus delta=-a",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a"},
		Compute:        []string{"A1 = (X1 Z1+Y1)^2", "A2 = Y1^2", "Q1 = (X1^2)^2", "S1 = (X1 Z1)^2", "T = A2-Q1-2 a S1", "X3 = A1-A2-S1", "Y3 = (T+Q1)(A2+a2 S1)+4 S1^2", "Z3 = T-Q1", "XX3 = X3^2", "ZZ3 = Z3^2", "T3 = XX3+ZZ3"},
		Parameters:     []string{"a2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Q1"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("A2"), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzz/doubling/dbl-2007-fw-2",
		Tag:            "dbl-2007-fw-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[29],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus delta=-a, plus scaling, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"R1 = (X1+Z1)^2-XX1-ZZ1", "A1 = (R1+2 Y1)^2", "A2 = 4 Y1^2", "Q1 = XX1^2", "S1 = R1^2", "S12 = 2 S1", "M = a S12", "A2M = A2-M", "X3 = A1-A2-S1", "Y3 = A2M(A2+M)+S12^2", "Z3 = A2M-8 Q1", "XX3 = X3^2", "ZZ3 = Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Q1"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("S12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("S12")}}, ast.Assignment{LHS: ast.Variable("A2M"), RHS: ast.Sub{X: ast.Variable("A2"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("S12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("A2M"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("A2M"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzz/doubling/dbl-2007-fw-3",
		Tag:            "dbl-2007-fw-3",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[29],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, second JQN2 doubling formula, plus epsilon=1, plus delta=-a",
		AppliesTo:      "2xxyzz",
		Assume:         []string{"a2 = 2 a"},
		Compute:        []string{"T1 = (X1 Z1)^2", "T2 = Y1^2", "S1 = (T2+2 c T1)^2", "U = (X1 Z1+Y1)^2-T1-T2", "Q = U^2", "X3 = U", "Y3 = S1-c Q", "Z3 = T2-a2 T1-2 X1^4", "XX3 = X3^2", "ZZ3 = Z3^2"},
		Parameters:     []string{"a2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Pow{X: ast.Variable("U"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("U")}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("S1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzz/doubling/dbl-2007-fw-4",
		Tag:            "dbl-2007-fw-4",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[29],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, second JQN2 doubling formula, plus epsilon=1, plus delta=-a, plus scaling, plus common-subexpression elimination",
		AppliesTo:      "2xxyzz",
		Assume:         []string(nil),
		Compute:        []string{"R1 = (X1+Z1)^2-XX1-ZZ1", "Y12 = 2 Y1", "T1 = R1^2", "T12 = 2 T1", "T2 = Y12^2", "X3 = (R1+Y12)^2-T1-T2", "XX3 = X3^2", "Y3 = (T2+c T12)^2-c XX3", "Z3 = T2-a T12-8 XX1^2", "ZZ3 = Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("Y12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Pow{X: ast.Variable("Y12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y12")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("T12")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("t7"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T12")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzz/doubling/dbl-2007-hcd",
		Tag:            "dbl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[29],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"B   = XX1-ZZ1", "T1  = XX1+ZZ1", "C   = Y1 T1", "X3  = C-Y1(X1+Z1)^2", "Z3  = T1 B", "XX3 = X3^2", "ZZ3 = Z3^2", "T3  = XX3+ZZ3", "Y3  = 2 C^2-T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzz/doubling/dbl-20090311-hwcd",
		Tag:            "dbl-20090311-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[29],
		Operation:      "doubling",
		Source:         "2009 Hisil--Wong--Carter--Dawson, formula (9), plus substitutions U = XX, V = ZZ, W = R/2, plus R rotation",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"R1 = (X1+Z1)^2 - XX1 - ZZ1", "YY1 = Y1^2", "X3 = Y1 R1", "Z3 = (ZZ1 - XX1)(ZZ1 + XX1)", "XX3 = X3^2", "ZZ3 = Z3^2", "Y3 = 2 YY1^2 - a XX3 - ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("YY1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("ZZ1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("ZZ1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("YY1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzz/doubling/mdbl-2007-hcd",
		Tag:            "mdbl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[29],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"A   = XX1^2", "B   = Y1^2", "X3  = XX1+B-(X1+Y1)^2", "Z3  =  A-1", "XX3 =  X3^2", "ZZ3 =  Z3^2", "T3  =  XX3+ZZ3", "Y3  =  2 B(A+2 XX1+1)-T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzz/doubling/mdbl-20090311-hwcd",
		Tag:            "mdbl-20090311-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[29],
		Operation:      "doubling",
		Source:         "2009 Hisil--Wong--Carter--Dawson, formula (9), plus substitutions U = XX, V = ZZ, W = R/2, plus R rotation, plus assumption Z1=1, plus standard simplification",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"YY1 = Y1^2", "X3 = (X1+Y1)^2 - XX1 - YY1", "Z3 = 1 - XX1^2", "XX3 = X3^2", "ZZ3 = Z3^2", "Y3 = 2 YY1^2 - a XX3 - ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("YY1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("YY1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzz/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[29],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = X1 A", "XX3 = X3^2", "Y3 = Y1 A^2", "Z3 = 1", "ZZ3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzz/tripling/tpl-2007-hcd",
		Tag:            "tpl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[29],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = XX1^2", "B = ZZ1^2", "C = A+B", "D = 2((XX1+ZZ1)^2-C)", "E = A-B", "F = 2 A", "G = 2 B", "J = a D+2 C", "K = J+E", "L = J-E", "M = C E", "N = G K", "P = F L", "X3 = X1(M-N)", "Y3 = Y1((M+N)(P-M)+(D E)^2)", "Z3 = Z1(P+M)", "XX3 = X3^2", "ZZ3 = Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("ZZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Add{X: ast.Variable("J"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Sub{X: ast.Variable("J"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("N"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("M"), Y: ast.Variable("N")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("M"), Y: ast.Variable("N")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("P"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("P"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzz/tripling/tpl-2007-hcd-2",
		Tag:            "tpl-2007-hcd-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[29],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"b = a^2-1"},
		Compute:        []string{"UU  = XX1^2", "WW  = ZZ1^2", "RR  = ((X1+Z1)^2-XX1-ZZ1)^2", "A   = 4(UU - WW)", "AA  = A^2", "B   = 2(UU + WW)+ a RR", "BB  = B^2", "AB  = (A+B)^2-AA-BB", "C   = b RR^2", "Q   = 2(BB-C)", "X3  = X1(AB - Q)", "Z3  = Z1(AB + Q)", "Y3  = Y1(Q^2 - 4 AA C)", "XX3 = X3^2", "ZZ3 = Z3^2"},
		Parameters:     []string{"b"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("UU"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("WW"), RHS: ast.Pow{X: ast.Variable("ZZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("RR"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("UU"), Y: ast.Variable("WW")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("UU"), Y: ast.Variable("WW")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("BB"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("AB"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("BB")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("RR"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("BB"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("AB"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("AB"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("Q"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("AA"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/addition/add-2007-bl",
		Tag:            "add-2007-bl",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"E1 = R1+Y1", "E2 = R2+Y2", "XX1XX2 = XX1 XX2", "R1R2 = R1 R2", "ZZ1ZZ2 = ZZ1 ZZ2", "Y1Y2 = Y1 Y2", "F = ZZ1ZZ2+XX1XX2", "G = 2 R1R2", "X3 = E1 E2-R1R2-Y1Y2", "Y3 = F(4 Y1Y2+a G)+((XX1+ZZ1)(XX2+ZZ2)-F)G", "Z3 = 2(ZZ1ZZ2-XX1XX2)", "XX3 = X3^2", "ZZ3 = Z3^2", "R3 = (X3+Z3)^2-XX3-ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E1"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("E2"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("XX1XX2"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("R1R2"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("ZZ1ZZ2"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("Y1Y2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("ZZ1ZZ2"), Y: ast.Variable("XX1XX2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R1R2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("E1"), Y: ast.Variable("E2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("R1R2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("ZZ1ZZ2"), Y: ast.Variable("XX1XX2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/addition/add-2007-d",
		Tag:            "add-2007-d",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "addition",
		Source:         "2007 Duquesne, page 103, Table 1, plus V=R/2",
		AppliesTo:      "",
		Assume:         []string{"b = -2 a", "half 2=1"},
		Compute:        []string{"A1 = XX1", "A2 = XX2", "A3 = half R1", "A4 = half R2", "A5 = ZZ1", "A6 = ZZ2", "A7 = Y1", "A8 = Y2", "A9 = A7 A8", "A7 = A7+A3", "A8 = A8+A4", "A3 = A3 A4", "A7 = A7 A8", "A7 = A7-A9", "A7 = A7-A3", "A4 = A1 A2", "A8 = A5 A6", "A1 = A1+A5", "A2 = A2+A6", "A5 = A1 A2", "A5 = A5-A4", "A5 = A5-A8", "A1 = A8-A4", "A2 = A8+A4", "A6 = b A3", "A6 = A9-A6", "A6 = A6 A2", "A3 = 2 A3", "A3 = A5 A3", "A8 = A6+A3", "A2 = A7^2", "A4 = A1 A7", "A6 = A1^2", "X3 = A7", "Y3 = A8", "Z3 = A1", "XX3 = A2", "R3 = 2 A4", "ZZ3 = A6"},
		Parameters:     []string{"b", "half"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Variable("XX1")}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Variable("XX2")}, ast.Assignment{LHS: ast.Variable("A3"), RHS: ast.Mul{X: ast.Variable("half"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("A4"), RHS: ast.Mul{X: ast.Variable("half"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("A5"), RHS: ast.Variable("ZZ1")}, ast.Assignment{LHS: ast.Variable("A6"), RHS: ast.Variable("ZZ2")}, ast.Assignment{LHS: ast.Variable("A7"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("A8"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("A9"), RHS: ast.Mul{X: ast.Variable("A7"), Y: ast.Variable("A8")}}, ast.Assignment{LHS: ast.Variable("A7"), RHS: ast.Add{X: ast.Variable("A7"), Y: ast.Variable("A3")}}, ast.Assignment{LHS: ast.Variable("A8"), RHS: ast.Add{X: ast.Variable("A8"), Y: ast.Variable("A4")}}, ast.Assignment{LHS: ast.Variable("A3"), RHS: ast.Mul{X: ast.Variable("A3"), Y: ast.Variable("A4")}}, ast.Assignment{LHS: ast.Variable("A7"), RHS: ast.Mul{X: ast.Variable("A7"), Y: ast.Variable("A8")}}, ast.Assignment{LHS: ast.Variable("A7"), RHS: ast.Sub{X: ast.Variable("A7"), Y: ast.Variable("A9")}}, ast.Assignment{LHS: ast.Variable("A7"), RHS: ast.Sub{X: ast.Variable("A7"), Y: ast.Variable("A3")}}, ast.Assignment{LHS: ast.Variable("A4"), RHS: ast.Mul{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("A8"), RHS: ast.Mul{X: ast.Variable("A5"), Y: ast.Variable("A6")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Add{X: ast.Variable("A1"), Y: ast.Variable("A5")}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("A6")}}, ast.Assignment{LHS: ast.Variable("A5"), RHS: ast.Mul{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("A5"), RHS: ast.Sub{X: ast.Variable("A5"), Y: ast.Variable("A4")}}, ast.Assignment{LHS: ast.Variable("A5"), RHS: ast.Sub{X: ast.Variable("A5"), Y: ast.Variable("A8")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Sub{X: ast.Variable("A8"), Y: ast.Variable("A4")}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Add{X: ast.Variable("A8"), Y: ast.Variable("A4")}}, ast.Assignment{LHS: ast.Variable("A6"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("A3")}}, ast.Assignment{LHS: ast.Variable("A6"), RHS: ast.Sub{X: ast.Variable("A9"), Y: ast.Variable("A6")}}, ast.Assignment{LHS: ast.Variable("A6"), RHS: ast.Mul{X: ast.Variable("A6"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("A3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("A3")}}, ast.Assignment{LHS: ast.Variable("A3"), RHS: ast.Mul{X: ast.Variable("A5"), Y: ast.Variable("A3")}}, ast.Assignment{LHS: ast.Variable("A8"), RHS: ast.Add{X: ast.Variable("A6"), Y: ast.Variable("A3")}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Pow{X: ast.Variable("A7"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A4"), RHS: ast.Mul{X: ast.Variable("A1"), Y: ast.Variable("A7")}}, ast.Assignment{LHS: ast.Variable("A6"), RHS: ast.Pow{X: ast.Variable("A1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("A7")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("A8")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("A1")}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Variable("A2")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("A4")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("A6")}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/addition/add-20080225-hwcd",
		Tag:            "add-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, plus U=XX, plus V=ZZ, plus W=R/2, plus rescaling, plus denominator elimination, plus standard streamlining",
		AppliesTo:      "",
		Assume:         []string{"k = a-1"},
		Compute:        []string{"A = 2 XX1 XX2", "B = 2 ZZ1 ZZ2", "C = R1 R2", "D = Y1 Y2", "X3 = (R1+Y1)(R2+Y2)-C-D", "Z3 = B-A", "XX3 = X3^2", "ZZ3 = Z3^2", "F = A + B + C", "G = 2((XX1+ZZ1)(XX2+ZZ2)+D)+k C", "H = XX3+ZZ3", "Y3 = F G - H", "R3 = (X3+Z3)^2-H"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/addition/madd-2007-bl",
		Tag:            "madd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"E1 = R1+Y1", "E2 = R2+Y2", "XX1XX2 = XX1 XX2", "R1R2 = R1 R2", "Y1Y2 = Y1 Y2", "F = ZZ1+XX1XX2", "G = 2 R1R2", "X3 = E1 E2-R1R2-Y1Y2", "Y3 = F(4 Y1Y2+a G)+((XX1+ZZ1)(XX2+ZZ2)-F)G", "Z3 = 2(ZZ1-XX1XX2)", "XX3 = X3^2", "ZZ3 = Z3^2", "R3 = (X3+Z3)^2-XX3-ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E1"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("E2"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("XX1XX2"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("R1R2"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("Y1Y2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("ZZ1"), Y: ast.Variable("XX1XX2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R1R2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("E1"), Y: ast.Variable("E2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("R1R2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("ZZ1"), Y: ast.Variable("XX1XX2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/addition/madd-20080225-hwcd",
		Tag:            "madd-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, plus U=XX, plus V=ZZ, plus W=R/2, plus rescaling, plus denominator elimination, plus standard streamlining, plus Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1", "k = a-1"},
		Compute:        []string{"A = 2 XX1 XX2", "B = 2 ZZ1", "C = R1 R2", "D = Y1 Y2", "X3 = (R1+Y1)(R2+Y2)-C-D", "Z3 = B-A", "XX3 = X3^2", "ZZ3 = Z3^2", "F = A + B + C", "G = 2((XX1+ZZ1)(XX2+1)+D)+k C", "H = XX3+ZZ3", "Y3 = F G - H", "R3 = (X3+Z3)^2-H"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("t13"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/addition/mmadd-2007-bl",
		Tag:            "mmadd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"E1 = X1+Y1", "E2 = X2+Y2", "B = X1 X2", "XX1XX2 = B^2", "Y1Y2 = Y1 Y2", "F = 1+XX1XX2", "G = 2 B", "X3 = E1 E2-B-Y1Y2", "Y3 = F(Y1Y2+a G)+(XX1+XX2)G", "Z3 = 1-XX1XX2", "XX3 = X3^2", "ZZ3 = Z3^2", "R3 = (X3+Z3)^2-XX3-ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("E2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("XX1XX2"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y1Y2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("XX1XX2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("E1"), Y: ast.Variable("E2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Y1Y2"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("XX1XX2")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("t7"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/doubling/dbl-2007-fw",
		Tag:            "dbl-2007-fw",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus delta=-a",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a"},
		Compute:        []string{"A1 = (X1 Z1+Y1)^2", "A2 = Y1^2", "Q1 = (X1^2)^2", "S1 = (X1 Z1)^2", "T = A2-Q1-a2 S1", "X3 = A1-A2-S1", "Y3 = (T+Q1)(A2+a2 S1)+4 S1^2", "Z3 = T-Q1", "XX3 = X3^2", "ZZ3 = Z3^2", "T3 = XX3+ZZ3", "R3 = (X3+Z3)^2-T3"},
		Parameters:     []string{"a2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Q1"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("A2"), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("t13"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/doubling/dbl-2007-fw-2",
		Tag:            "dbl-2007-fw-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus delta=-a, plus scaling, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A1 = (R1+2 Y1)^2", "A2 = 4 Y1^2", "Q1 = XX1^2", "S1 = R1^2", "S12 = 2 S1", "M = a S12", "A2M = A2-M", "X3 = A1-A2-S1", "Y3 = A2M(A2+M)+S12^2", "Z3 = A2M-8 Q1", "XX3 = X3^2", "ZZ3 = Z3^2", "T3 = XX3+ZZ3", "R3 = (X3+Z3)^2-T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Q1"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("S12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("S12")}}, ast.Assignment{LHS: ast.Variable("A2M"), RHS: ast.Sub{X: ast.Variable("A2"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("S12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("A2M"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("A2M"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/doubling/dbl-2007-fw-3",
		Tag:            "dbl-2007-fw-3",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, second JQN2 doubling formula, plus epsilon=1, plus delta=-a",
		AppliesTo:      "2xxyzzr",
		Assume:         []string(nil),
		Compute:        []string{"T1 = (X1 Z1)^2", "T2 = Y1^2", "S1 = (T2+2 c T1)^2", "U = (X1 Z1+Y1)^2-T1-T2", "Q = U^2", "X3 = U", "Y3 = S1-c Q", "Z3 = T2-2 a T1-2 X1^4", "XX3 = X3^2", "ZZ3 = Z3^2", "T3 = XX3+ZZ3", "R3 = (X3+Z3)^2-T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Pow{X: ast.Variable("U"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("U")}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("S1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/doubling/dbl-2007-fw-4",
		Tag:            "dbl-2007-fw-4",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, second JQN2 doubling formula, plus epsilon=1, plus delta=-a, plus scaling, plus common-subexpression elimination",
		AppliesTo:      "2xxyzzr",
		Assume:         []string(nil),
		Compute:        []string{"Y12 = 2 Y1", "T1 = R1^2", "T12 = 2 T1", "T2 = Y12^2", "X3 = (R1+Y12)^2-T1-T2", "XX3 = X3^2", "Y3 = (T2+c T12)^2-c XX3", "Z3 = T2-a T12-8 XX1^2", "ZZ3 = Z3^2", "T3 = XX3+ZZ3", "R3 = (X3+Z3)^2-T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Y12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Pow{X: ast.Variable("Y12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y12")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("T12")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T12")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("t11"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/doubling/dbl-2007-hcd",
		Tag:            "dbl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"B   = XX1-ZZ1", "T1  = XX1+ZZ1", "C   = Y1 T1", "X3  = C-Y1(T1+R1)", "Z3  = T1 B", "XX3 = X3^2", "ZZ3 = Z3^2", "T3  = XX3+ZZ3", "R3  = (X3+Z3)^2-T3", "Y3  = 2 C^2-T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("T1"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/doubling/dbl-20090311-hwcd",
		Tag:            "dbl-20090311-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "doubling",
		Source:         "2009 Hisil--Wong--Carter--Dawson, formula (9), plus substitutions U = XX, V = ZZ, W = R/2",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"YY1 = Y1^2", "X3 = Y1 R1", "Z3 = (ZZ1 - XX1)(ZZ1 + XX1)", "XX3 = X3^2", "ZZ3 = Z3^2", "R3 = (X3+Z3)^2 - XX3 - ZZ3", "Y3 = 2 YY1^2 - a XX3 - ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("ZZ1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("ZZ1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("YY1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/doubling/mdbl-2007-hcd",
		Tag:            "mdbl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"A   = XX1^2", "B   = Y1^2", "X3  = XX1+B-(X1+Y1)^2", "Z3  =  A-1", "XX3 =  X3^2", "ZZ3 =  Z3^2", "T3  =  XX3+ZZ3", "R3  = (X3+Z3)^2-T3", "Y3  =  2 B(A+2 XX1+1)-T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/doubling/mdbl-20090311-hwcd",
		Tag:            "mdbl-20090311-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "doubling",
		Source:         "2009 Hisil--Wong--Carter--Dawson, formula (9), plus substitutions U = XX, V = ZZ, W = R/2, plus Z3 expansion using Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"YY1 = Y1^2", "X3 = Y1 R1", "Z3 = 1 - XX1^2", "XX3 = X3^2", "ZZ3 = Z3^2", "R3 = (X3+Z3)^2 - XX3 - ZZ3", "Y3 = 2 YY1^2 - a XX3 - ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("YY1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 2 ZZ1", "B = 1/A", "X3 = R1 B", "Y3 = 2 Y1 B", "XX3 = X3^2", "R3 = 2 X3", "Z3 = 1", "ZZ3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Inv{X: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/tripling/tpl-2007-hcd",
		Tag:            "tpl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = XX1^2", "B = ZZ1^2", "C = A+B", "D = 2((XX1+ZZ1)^2-C)", "E = A-B", "F = 2 A", "G = 2 B", "J = a D+2 C", "K = J+E", "L = J-E", "M = C E", "N = G K", "P = F L", "X3 = X1(M-N)", "Y3 = Y1((M+N)(P-M)+(D E)^2)", "Z3 = Z1(P+M)", "XX3 = X3^2", "ZZ3 = Z3^2", "R3 = (X3+Z3)^2-XX3-ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("ZZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Add{X: ast.Variable("J"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Sub{X: ast.Variable("J"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("N"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("M"), Y: ast.Variable("N")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("M"), Y: ast.Variable("N")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("P"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("P"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("t13"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xxyzzr/tripling/tpl-2007-hcd-2",
		Tag:            "tpl-2007-hcd-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[30],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"b = a^2-1"},
		Compute:        []string{"UU  = XX1^2", "WW  = ZZ1^2", "RR  = R1^2", "A   = 4(UU - WW)", "AA  = A^2", "B   = 2(UU + WW)+ a RR", "BB  = B^2", "AB  = (A+B)^2-AA-BB", "C   = b RR^2", "Q   = 2(BB-C)", "X3  = X1(AB - Q)", "Z3  = Z1(AB + Q)", "Y3  = Y1(Q^2 - 4 AA C)", "XX3 = X3^2", "ZZ3 = Z3^2", "R3  = (X3+Z3)^2-XX3-ZZ3"},
		Parameters:     []string{"b"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("UU"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("WW"), RHS: ast.Pow{X: ast.Variable("ZZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("RR"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("UU"), Y: ast.Variable("WW")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("UU"), Y: ast.Variable("WW")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("BB"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("AB"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("BB")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("RR"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("BB"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("AB"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("AB"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Q"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("AA"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Pow{X: ast.Variable("t15"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Sub{X: ast.Variable("t16"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/addition/add-2002-bj",
		Tag:            "add-2002-bj",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "addition",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", formula (11)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = X1 Z1 Y2+Y1 X2 Z2", "Y3 = ((Z1 Z2)^2+(X1 X2)^2) (Y1 Y2+2 a X1 X2 Z1 Z2)+2 X1 X2 Z1 Z2 (X1^2 Z2^2+Z1^2 X2^2)", "Z3 = (Z1 Z2)^2-(X1 X2)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("t20"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t28"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Pow{X: ast.Variable("t30"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("t29"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t31"), Y: ast.Variable("t32")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/addition/add-2002-bj-2",
		Tag:            "add-2002-bj-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "addition",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", page 6",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"T1 = X1", "T2 = Y1", "T3 = Z1", "T4 = X2", "T5 = Y2", "T6 = Z2", "T7 = T1 T3", "T7 = T2+T7", "T8 = T4 T6", "T8 = T5+T8", "T2 = T2 T5", "T7 = T7 T8", "T7 = T7-T2", "T5 = T1 T4", "T1 = T1+T3", "T8 = T3 T6", "T4 = T4+T6", "T6 = T5 T8", "T7 = T7-T6", "T1 = T1 T4", "T1 = T1-T5", "T1 = T1-T8", "T3 = T1^2", "T6 = 2 T6", "T3 = T3-T6", "T3 = T3 T6", "T4 = a T6", "T2 = T2+T4", "T4 = T8^2", "T8 = T5^2", "T5 = T4+T8", "T2 = T2 T5", "T2 = T2+T3", "T5 = T4-T8", "X3 = T7", "Y3 = T2", "Z3 = T5"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Variable("X2")}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Variable("Z2")}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Mul{X: ast.Variable("T4"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Add{X: ast.Variable("T5"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T7"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Add{X: ast.Variable("T1"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Add{X: ast.Variable("T4"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("T5"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Pow{X: ast.Variable("T1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Pow{X: ast.Variable("T8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Pow{X: ast.Variable("T5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Add{X: ast.Variable("T4"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Sub{X: ast.Variable("T4"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T7")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("T2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("T5")}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/addition/add-2002-bj-3",
		Tag:            "add-2002-bj-3",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "addition",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", formula (11), plus separation of X2^2,Z2^2 as suggested by 2007 Duquesne",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A2 = X2^2", "B2 = X2 Z2", "C2 = Z2^2", "A1 = X1^2", "B1 = X1 Z1", "C1 = Z1^2", "A1A2 = A1 A2", "B1B2 = B1 B2", "C1C2 = C1 C2", "Y1Y2 = Y1 Y2", "E = C1C2+A1A2", "F = (A1+C1)(A2+C2)-E", "G = 2 B1B2", "X3 = (B1+Y1)(B2+Y2)-B1B2-Y1Y2", "Y3 = E(Y1Y2+a G)+G F", "Z3 = C1C2-A1A2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("C2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A1A2"), RHS: ast.Mul{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("B1B2"), RHS: ast.Mul{X: ast.Variable("B1"), Y: ast.Variable("B2")}}, ast.Assignment{LHS: ast.Variable("C1C2"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("Y1Y2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("C1C2"), Y: ast.Variable("A1A2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("A1"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B1B2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("B1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("B2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("B1B2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("Y1Y2"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("C1C2"), Y: ast.Variable("A1A2")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/addition/add-2007-bl",
		Tag:            "add-2007-bl",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A2 = X2^2", "C2 = Z2^2", "D2 = A2+C2", "B2 = (X2+Z2)^2-D2", "E2 = B2+Y2", "A1 = X1^2", "C1 = Z1^2", "D1 = A1+C1", "B1 = (X1+Z1)^2-D1", "E1 = B1+Y1", "A1A2 = A1 A2", "B1B2 = B1 B2", "C1C2 = C1 C2", "Y1Y2 = Y1 Y2", "F = C1C2+A1A2", "G = 2 B1B2", "X3 = E1 E2-B1B2-Y1Y2", "Y3 = F(4 Y1Y2+a G)+(D1 D2-F)G", "Z3 = 2(C1C2-A1A2)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D2"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("E2"), RHS: ast.Add{X: ast.Variable("B2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D1"), RHS: ast.Add{X: ast.Variable("A1"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B1"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("E1"), RHS: ast.Add{X: ast.Variable("B1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("A1A2"), RHS: ast.Mul{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("B1B2"), RHS: ast.Mul{X: ast.Variable("B1"), Y: ast.Variable("B2")}}, ast.Assignment{LHS: ast.Variable("C1C2"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("Y1Y2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("C1C2"), Y: ast.Variable("A1A2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B1B2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("E1"), Y: ast.Variable("E2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("B1B2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("C1C2"), Y: ast.Variable("A1A2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t13")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/addition/add-2007-d",
		Tag:            "add-2007-d",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "addition",
		Source:         "2007 Duquesne, page 103, Table 1",
		AppliesTo:      "",
		Assume:         []string{"b = -2 a"},
		Compute:        []string{"T1 = X1^2", "T2 = X2^2", "T3 = X1 Z1", "T4 = X2 Z2", "T5 = Z1^2", "T6 = Z2^2", "T7 = Y1", "T8 = Y2", "T9 = T7 T8", "T7 = T7+T3", "T8 = T8+T4", "T3 = T3 T4", "T7 = T7 T8", "T7 = T7-T9", "T7 = T7-T3", "T4 = T1 T2", "T8 = T5 T6", "T1 = T1+T5", "T2 = T2+T6", "T5 = T1 T2", "T5 = T5-T4", "T5 = T5-T8", "T1 = T8-T4", "T2 = T8+T4", "T6 = b T3", "T6 = T9-T6", "T6 = T6 T2", "T3 = 2 T3", "T3 = T5 T3", "T8 = T6+T3", "X3 = T7", "Y3 = T8", "Z3 = T1"},
		Parameters:     []string{"b"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("T9"), RHS: ast.Mul{X: ast.Variable("T7"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Add{X: ast.Variable("T7"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Add{X: ast.Variable("T8"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T7"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T9")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Mul{X: ast.Variable("T5"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Add{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Sub{X: ast.Variable("T5"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Sub{X: ast.Variable("T5"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T8"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T8"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Sub{X: ast.Variable("T9"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("T6"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T5"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Add{X: ast.Variable("T6"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T7")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("T8")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("T1")}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/addition/madd-2002-bj",
		Tag:            "madd-2002-bj",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "addition",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", page 6, plus specialization to Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"T1 = X1", "T2 = Y1", "T3 = Z1", "T4 = X2", "T5 = Y2", "T7 = T1 T3", "T7 = T2+T7", "T8 = T4", "T8 = T5+T8", "T2 = T2 T5", "T7 = T7 T8", "T7 = T7-T2", "T5 = T1 T4", "T1 = T1+T3", "T8 = T3", "T4 = T4+1", "T6 = T5 T8", "T7 = T7-T6", "T1 = T1 T4", "T1 = T1-T5", "T1 = T1-T8", "T3 = T1^2", "T6 = 2 T6", "T3 = T3-T6", "T3 = T3 T6", "T4 = a T6", "T2 = T2+T4", "T4 = T8^2", "T8 = T5^2", "T5 = T4+T8", "T2 = T2 T5", "T2 = T2+T3", "T5 = T4-T8", "X3 = T7", "Y3 = T2", "Z3 = T5"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Variable("X2")}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Variable("T4")}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Add{X: ast.Variable("T5"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T7"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Add{X: ast.Variable("T1"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Variable("T3")}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Add{X: ast.Variable("T4"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("T5"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Pow{X: ast.Variable("T1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Pow{X: ast.Variable("T8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Pow{X: ast.Variable("T5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Add{X: ast.Variable("T4"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Sub{X: ast.Variable("T4"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T7")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("T2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("T5")}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/addition/mmadd-2002-bj",
		Tag:            "mmadd-2002-bj",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "addition",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", formula (11), plus specialization to affine",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"r = 1-(X1 X2)^2", "X3 = (X1 Y2+Y1 X2)/r", "Y3 = ((1+(X1 X2)^2) (Y1 Y2+2 a X1 X2)+2 X1 X2 (X1^2+X2^2))/r^2", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Inv{X: ast.Variable("r")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("t14"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Add{X: ast.Variable("t20"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Inv{X: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t21"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/addition/mmadd-2002-bj-2",
		Tag:            "mmadd-2002-bj-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "addition",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", page 6, plus specialization to Z1=1 and Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"T7 = Y1+X1", "T8 = Y2+X2", "T2 = Y1 Y2", "T7 = T7 T8", "T7 = T7-T2", "T5 = X1 X2", "T6 = T5", "X3 = T7-T6", "T1 = X1+X2", "T3 = T1^2", "T6 = 2 T6", "T3 = T3-T6", "T3 = T3 T6", "T4 = a T6", "T2 = T2+T4", "T8 = T5^2", "T5 = T8+1", "T2 = T2 T5", "Y3 = T2+T3", "Z3 = 1-T8"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T7"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Variable("T5")}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Pow{X: ast.Variable("T1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Pow{X: ast.Variable("T5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Add{X: ast.Variable("T8"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("T8")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/doubling/dbl-2002-bj",
		Tag:            "dbl-2002-bj",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "doubling",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", formula (11)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X2 = X1", "Y2 = Y1", "Z2 = Z1", "X3 = X1 Z1 Y2+Y1 X2 Z2", "Y3 = ((Z1 Z2)^2+(X1 X2)^2) (Y1 Y2+2 a X1 X2 Z1 Z2)+2 X1 X2 Z1 Z2 (X1^2 Z2^2+Z1^2 X2^2)", "Z3 = (Z1 Z2)^2-(X1 X2)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("X2"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("Y2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("Z2"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("t20"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t28"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Pow{X: ast.Variable("t30"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("t29"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t31"), Y: ast.Variable("t32")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/doubling/dbl-2002-bj-2",
		Tag:            "dbl-2002-bj-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "doubling",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", formula (11), plus specialization to doubling",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = X1 Z1 Y1+Y1 X1 Z1", "Y3 = ((Z1 Z1)^2+(X1 X1)^2) (Y1 Y1+2 a X1 X1 Z1 Z1)+2 X1 X1 Z1 Z1 (X1^2 Z1^2+Z1^2 X1^2)", "Z3 = (Z1 Z1)^2-(X1 X1)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("t20"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t28"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Pow{X: ast.Variable("t30"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("t29"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t31"), Y: ast.Variable("t32")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/doubling/dbl-2007-bl",
		Tag:            "dbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "XXXX = XX^2", "YY = Y1^2", "ZZ = Z1^2", "ZZZZ = ZZ^2", "M = XX+ZZ", "XZ = (X1+Z1)^2-M", "XZXZ = XZ^2", "X3 = (Y1+XZ)^2-YY-XZXZ", "Y3 = (ZZZZ+XXXX)(4 YY+2 a XZXZ)+XZXZ^2", "Z3 = 2 (ZZZZ-XXXX)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("XXXX"), RHS: ast.Pow{X: ast.Variable("XX"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZZZ"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("XZ"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("XZXZ"), RHS: ast.Pow{X: ast.Variable("XZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("XZ")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("XZXZ")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("XZXZ")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("ZZZZ"), Y: ast.Variable("XXXX")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("XZXZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("ZZZZ"), Y: ast.Variable("XXXX")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/doubling/dbl-2007-fw",
		Tag:            "dbl-2007-fw",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus substitution delta=-a",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a"},
		Compute:        []string{"U1 = (X1 Z1+Y1)^2", "U2 = Y1^2", "V1 = (X1^2)^2", "S1 = (X1 Z1)^2", "T = U2-V1-a2 S1", "X3 = U1-U2-S1", "Y3 = (T+V1)(U2+a2 S1)+4 S1^2", "Z3 = T-V1"},
		Parameters:     []string{"a2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V1"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("U2"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("V1")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/doubling/dbl-2007-fw-2",
		Tag:            "dbl-2007-fw-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus delta=-a, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a"},
		Compute:        []string{"XZ1 = X1 Z1", "U1 = (XZ1+Y1)^2", "U2 = Y1^2", "V1 = (X1^2)^2", "S1 = XZ1^2", "aS1 = a2 S1", "T = U2-V1-aS1", "X3 = U1-U2-S1", "Y3 = (T+V1)(U2+aS1)+(2 S1)^2", "Z3 = T-V1"},
		Parameters:     []string{"a2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XZ1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("XZ1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V1"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("XZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("aS1"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("aS1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("U2"), Y: ast.Variable("aS1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("V1")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/doubling/dbl-2007-fw-3",
		Tag:            "dbl-2007-fw-3",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, second JQN2 doubling formula, plus substitution epsilon=1, plus substitution delta=-a",
		AppliesTo:      "2xyz",
		Assume:         []string{"a2 = 2 a"},
		Compute:        []string{"T1 = (X1 Z1)^2", "T2 = Y1^2", "S1 = (T2+2 c T1)^2", "U = (X1 Z1+Y1)^2-T1-T2", "V = U^2", "X3 = U", "Y3 = S1-c V", "Z3 = T2-a2 T1-2 X1^4"},
		Parameters:     []string{"a2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Pow{X: ast.Variable("U"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("U")}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("S1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/doubling/dbl-2007-fw-4",
		Tag:            "dbl-2007-fw-4",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, second JQN2 doubling formula, plus epsilon=1, plus delta=-a, plus common-subexpression elimination",
		AppliesTo:      "2xyz",
		Assume:         []string{"a2 = 2 a", "c2 = 2 c"},
		Compute:        []string{"XX1 = X1^2", "XZ1 = X1 Z1", "T1 = XZ1^2", "T2 = Y1^2", "S1 = (T2+c2 T1)^2", "X3 = (XZ1+Y1)^2-T1-T2", "V = X3^2", "Y3 = S1-c V", "Z3 = T2-a2 T1-2 XX1^2"},
		Parameters:     []string{"a2", "c2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("XZ1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("XZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("c2"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("XZ1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("S1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t7")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/doubling/dbl-2007-hcd",
		Tag:            "dbl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"b = 4-4 a^2"},
		Compute:        []string{"T0 = X1 Z1", "X3 = T0 Y1", "X3 = X3+X3", "T0 = T0^2", "T1 = 2 a T0", "T2 = Y1^2", "Z3 = T2-T1", "Y3 = T0^2", "Y3 = b Y3", "T0 = T2^2", "Y3 = Y3+T0", "T0 = X1^2", "T0 = T0^2", "Z3 = Z3-T0", "Z3 = Z3-T0"},
		Parameters:     []string{"b"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("T0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("T0"), RHS: ast.Pow{X: ast.Variable("T0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T0")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Pow{X: ast.Variable("T0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("T0"), RHS: ast.Pow{X: ast.Variable("T2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("Y3"), Y: ast.Variable("T0")}}, ast.Assignment{LHS: ast.Variable("T0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T0"), RHS: ast.Pow{X: ast.Variable("T0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("T0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("T0")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/doubling/mdbl-2007-fw",
		Tag:            "mdbl-2007-fw",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus delta=-a, plus Z1=1, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a", "Z1 = 1"},
		Compute:        []string{"U1 = (X1+Y1)^2", "U2 = Y1^2", "S1 = X1^2", "V1 = S1^2", "aS1 = a2 S1", "T = U2-V1-aS1", "X3 = U1-U2-S1", "Y3 = (T+V1)(U2+aS1)+4 V1", "Z3 = T-V1"},
		Parameters:     []string{"a2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V1"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("aS1"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("aS1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("U2"), Y: ast.Variable("aS1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("V1")}}}},
	},
	{
		ID:             "g1p/jquartic/2xyz/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[31],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = X1 A", "Y3 = Y1 A^2", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/jquartic/xxyzz/addition/add-20080225-hwcd",
		Tag:            "add-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[32],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, plus U=XX, plus V=ZZ, plus W=R/2, plus rescaling, plus denominator elimination, plus standard streamlining",
		AppliesTo:      "",
		Assume:         []string{"k = a-1"},
		Compute:        []string{"R1 = (X1+Z1)^2-XX1-ZZ1", "R2 = (X2+Z2)^2-XX2-ZZ2", "A = 2 XX1 XX2", "B = 2 ZZ1 ZZ2", "C = R1 R2", "D = Y1 Y2", "X3 = (R1+Y1)(R2+Y2)-C-D", "Z3 = B-A", "XX3 = X3^2", "ZZ3 = Z3^2", "F = A + B + C", "G = 2((XX1+ZZ1)(XX2+ZZ2)+D)+k C", "H = XX3+ZZ3", "Y3 = F G - H"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("t18"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t19"), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzz/addition/madd-20080225-hwcd",
		Tag:            "madd-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[32],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, plus U=XX, plus V=ZZ, plus W=R/2, plus rescaling, plus denominator elimination, plus standard streamlining, plus Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1", "k = a-1"},
		Compute:        []string{"R1 = (X1+Z1)^2-XX1-ZZ1", "R2 = 2 X2", "A = 2 XX1 XX2", "B = 2 ZZ1", "C = R1 R2", "D = Y1 Y2", "X3 = (R1+Y1)(R2+Y2)-C-D", "Z3 = B-A", "XX3 = X3^2", "ZZ3 = Z3^2", "F = A + B + C", "G = 2((XX1+ZZ1)(XX2+1)+D)+k C", "H = XX3+ZZ3", "Y3 = F G - H"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("t14"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzz/doubling/dbl-2007-fw",
		Tag:            "dbl-2007-fw",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[32],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus delta=-a",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a"},
		Compute:        []string{"A1 = (X1 Z1+Y1)^2", "A2 = Y1^2", "Q1 = (X1^2)^2", "S1 = (X1 Z1)^2", "T = A2-Q1-2 a S1", "X3 = A1-A2-S1", "Y3 = (T+Q1)(A2+a2 S1)+4 S1^2", "Z3 = T-Q1", "XX3 = X3^2", "ZZ3 = Z3^2", "T3 = XX3+ZZ3"},
		Parameters:     []string{"a2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Q1"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("A2"), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t9"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzz/doubling/dbl-2007-fw-2",
		Tag:            "dbl-2007-fw-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[32],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus delta=-a, plus scaling, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"R1 = (X1+Z1)^2-XX1-ZZ1", "A1 = (R1+2 Y1)^2", "A2 = 4 Y1^2", "Q1 = XX1^2", "S1 = R1^2", "S12 = 2 S1", "M = a S12", "A2M = A2-M", "X3 = A1-A2-S1", "Y3 = A2M(A2+M)+S12^2", "Z3 = A2M-8 Q1", "XX3 = X3^2", "ZZ3 = Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Q1"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("S12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("S12")}}, ast.Assignment{LHS: ast.Variable("A2M"), RHS: ast.Sub{X: ast.Variable("A2"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("S12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("A2M"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("A2M"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzz/doubling/dbl-2007-hcd",
		Tag:            "dbl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[32],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"B   = XX1-ZZ1", "T1  = XX1+ZZ1", "C   = Y1 T1", "X3  = C-Y1(X1+Z1)^2", "Z3  = T1 B", "XX3 = X3^2", "ZZ3 = Z3^2", "T3  = XX3+ZZ3", "Y3  = 2 C^2-T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzz/doubling/dbl-20090311-hwcd",
		Tag:            "dbl-20090311-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[32],
		Operation:      "doubling",
		Source:         "2009 Hisil--Wong--Carter--Dawson, formula (9), plus substitutions U = XX, V = ZZ, W = R/2, plus R rotation",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"R1 = (X1+Z1)^2 - XX1 - ZZ1", "YY1 = Y1^2", "X3 = Y1 R1", "Z3 = (ZZ1 - XX1)(ZZ1 + XX1)", "XX3 = X3^2", "ZZ3 = Z3^2", "Y3 = 2 YY1^2 - a XX3 - ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("YY1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("ZZ1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("ZZ1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("YY1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzz/doubling/mdbl-2007-hcd",
		Tag:            "mdbl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[32],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"A   = XX1^2", "B   = Y1^2", "X3  = XX1+B-(X1+Y1)^2", "Z3  =  A-1", "XX3 =  X3^2", "ZZ3 =  Z3^2", "T3  =  XX3+ZZ3", "Y3  =  2 B(A+2 XX1+1)-T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzz/doubling/mdbl-20090311-hwcd",
		Tag:            "mdbl-20090311-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[32],
		Operation:      "doubling",
		Source:         "2009 Hisil--Wong--Carter--Dawson, formula (9), plus substitutions U = XX, V = ZZ, W = R/2, plus R rotation, plus assumption Z1=1, plus standard simplification",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"YY1 = Y1^2", "X3 = (X1+Y1)^2 - XX1 - YY1", "Z3 = 1 - XX1^2", "XX3 = X3^2", "ZZ3 = Z3^2", "Y3 = 2 YY1^2 - a XX3 - ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("YY1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("YY1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzz/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[32],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = X1 A", "XX3 = X3^2", "Y3 = Y1 A^2", "Z3 = 1", "ZZ3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/jquartic/xxyzz/tripling/tpl-2007-hcd",
		Tag:            "tpl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[32],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = XX1^2", "B = ZZ1^2", "C = A+B", "D = 2((XX1+ZZ1)^2-C)", "E = A-B", "F = 2 A", "G = 2 B", "J = a D+2 C", "K = J+E", "L = J-E", "M = C E", "N = G K", "P = F L", "X3 = X1(M-N)", "Y3 = Y1((M+N)(P-M)+(D E)^2)", "Z3 = Z1(P+M)", "XX3 = X3^2", "ZZ3 = Z3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("ZZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Add{X: ast.Variable("J"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Sub{X: ast.Variable("J"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("N"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("M"), Y: ast.Variable("N")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("M"), Y: ast.Variable("N")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("P"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("P"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzz/tripling/tpl-2007-hcd-2",
		Tag:            "tpl-2007-hcd-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[32],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"b = a^2-1"},
		Compute:        []string{"UU  = XX1^2", "WW  = ZZ1^2", "RR  = ((X1+Z1)^2-XX1-ZZ1)^2", "A   = 4(UU - WW)", "AA  = A^2", "B   = 2(UU + WW)+ a RR", "BB  = B^2", "AB  = (A+B)^2-AA-BB", "C   = b RR^2", "Q   = 2(BB-C)", "X3  = X1(AB - Q)", "Z3  = Z1(AB + Q)", "Y3  = Y1(Q^2 - 4 AA C)", "XX3 = X3^2", "ZZ3 = Z3^2"},
		Parameters:     []string{"b"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("UU"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("WW"), RHS: ast.Pow{X: ast.Variable("ZZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("RR"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("UU"), Y: ast.Variable("WW")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("UU"), Y: ast.Variable("WW")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("BB"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("AB"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("BB")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("RR"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("BB"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("AB"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("AB"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("Q"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("AA"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/addition/add-2007-bl",
		Tag:            "add-2007-bl",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"E1 = R1+Y1", "E2 = R2+Y2", "XX1XX2 = XX1 XX2", "R1R2 = R1 R2", "ZZ1ZZ2 = ZZ1 ZZ2", "Y1Y2 = Y1 Y2", "F = ZZ1ZZ2+XX1XX2", "G = 2 R1R2", "X3 = E1 E2-R1R2-Y1Y2", "Y3 = F(4 Y1Y2+a G)+((XX1+ZZ1)(XX2+ZZ2)-F)G", "Z3 = 2(ZZ1ZZ2-XX1XX2)", "XX3 = X3^2", "ZZ3 = Z3^2", "R3 = (X3+Z3)^2-XX3-ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E1"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("E2"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("XX1XX2"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("R1R2"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("ZZ1ZZ2"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("Y1Y2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("ZZ1ZZ2"), Y: ast.Variable("XX1XX2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R1R2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("E1"), Y: ast.Variable("E2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("R1R2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("ZZ1ZZ2"), Y: ast.Variable("XX1XX2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/addition/add-2007-d",
		Tag:            "add-2007-d",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "addition",
		Source:         "2007 Duquesne, page 103, Table 1, plus V=R/2",
		AppliesTo:      "",
		Assume:         []string{"b = -2 a", "half 2=1"},
		Compute:        []string{"A1 = XX1", "A2 = XX2", "A3 = half R1", "A4 = half R2", "A5 = ZZ1", "A6 = ZZ2", "A7 = Y1", "A8 = Y2", "A9 = A7 A8", "A7 = A7+A3", "A8 = A8+A4", "A3 = A3 A4", "A7 = A7 A8", "A7 = A7-A9", "A7 = A7-A3", "A4 = A1 A2", "A8 = A5 A6", "A1 = A1+A5", "A2 = A2+A6", "A5 = A1 A2", "A5 = A5-A4", "A5 = A5-A8", "A1 = A8-A4", "A2 = A8+A4", "A6 = b A3", "A6 = A9-A6", "A6 = A6 A2", "A3 = 2 A3", "A3 = A5 A3", "A8 = A6+A3", "A2 = A7^2", "A4 = A1 A7", "A6 = A1^2", "X3 = A7", "Y3 = A8", "Z3 = A1", "XX3 = A2", "R3 = 2 A4", "ZZ3 = A6"},
		Parameters:     []string{"b", "half"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Variable("XX1")}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Variable("XX2")}, ast.Assignment{LHS: ast.Variable("A3"), RHS: ast.Mul{X: ast.Variable("half"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("A4"), RHS: ast.Mul{X: ast.Variable("half"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("A5"), RHS: ast.Variable("ZZ1")}, ast.Assignment{LHS: ast.Variable("A6"), RHS: ast.Variable("ZZ2")}, ast.Assignment{LHS: ast.Variable("A7"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("A8"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("A9"), RHS: ast.Mul{X: ast.Variable("A7"), Y: ast.Variable("A8")}}, ast.Assignment{LHS: ast.Variable("A7"), RHS: ast.Add{X: ast.Variable("A7"), Y: ast.Variable("A3")}}, ast.Assignment{LHS: ast.Variable("A8"), RHS: ast.Add{X: ast.Variable("A8"), Y: ast.Variable("A4")}}, ast.Assignment{LHS: ast.Variable("A3"), RHS: ast.Mul{X: ast.Variable("A3"), Y: ast.Variable("A4")}}, ast.Assignment{LHS: ast.Variable("A7"), RHS: ast.Mul{X: ast.Variable("A7"), Y: ast.Variable("A8")}}, ast.Assignment{LHS: ast.Variable("A7"), RHS: ast.Sub{X: ast.Variable("A7"), Y: ast.Variable("A9")}}, ast.Assignment{LHS: ast.Variable("A7"), RHS: ast.Sub{X: ast.Variable("A7"), Y: ast.Variable("A3")}}, ast.Assignment{LHS: ast.Variable("A4"), RHS: ast.Mul{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("A8"), RHS: ast.Mul{X: ast.Variable("A5"), Y: ast.Variable("A6")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Add{X: ast.Variable("A1"), Y: ast.Variable("A5")}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("A6")}}, ast.Assignment{LHS: ast.Variable("A5"), RHS: ast.Mul{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("A5"), RHS: ast.Sub{X: ast.Variable("A5"), Y: ast.Variable("A4")}}, ast.Assignment{LHS: ast.Variable("A5"), RHS: ast.Sub{X: ast.Variable("A5"), Y: ast.Variable("A8")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Sub{X: ast.Variable("A8"), Y: ast.Variable("A4")}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Add{X: ast.Variable("A8"), Y: ast.Variable("A4")}}, ast.Assignment{LHS: ast.Variable("A6"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("A3")}}, ast.Assignment{LHS: ast.Variable("A6"), RHS: ast.Sub{X: ast.Variable("A9"), Y: ast.Variable("A6")}}, ast.Assignment{LHS: ast.Variable("A6"), RHS: ast.Mul{X: ast.Variable("A6"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("A3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("A3")}}, ast.Assignment{LHS: ast.Variable("A3"), RHS: ast.Mul{X: ast.Variable("A5"), Y: ast.Variable("A3")}}, ast.Assignment{LHS: ast.Variable("A8"), RHS: ast.Add{X: ast.Variable("A6"), Y: ast.Variable("A3")}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Pow{X: ast.Variable("A7"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A4"), RHS: ast.Mul{X: ast.Variable("A1"), Y: ast.Variable("A7")}}, ast.Assignment{LHS: ast.Variable("A6"), RHS: ast.Pow{X: ast.Variable("A1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("A7")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("A8")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("A1")}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Variable("A2")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("A4")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("A6")}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/addition/add-20080225-hwcd",
		Tag:            "add-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, plus U=XX, plus V=ZZ, plus W=R/2, plus rescaling, plus denominator elimination, plus standard streamlining",
		AppliesTo:      "",
		Assume:         []string{"k = a-1"},
		Compute:        []string{"A = 2 XX1 XX2", "B = 2 ZZ1 ZZ2", "C = R1 R2", "D = Y1 Y2", "X3 = (R1+Y1)(R2+Y2)-C-D", "Z3 = B-A", "XX3 = X3^2", "ZZ3 = Z3^2", "F = A + B + C", "G = 2((XX1+ZZ1)(XX2+ZZ2)+D)+k C", "H = XX3+ZZ3", "Y3 = F G - H", "R3 = (X3+Z3)^2-H"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/addition/madd-2007-bl",
		Tag:            "madd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"E1 = R1+Y1", "E2 = R2+Y2", "XX1XX2 = XX1 XX2", "R1R2 = R1 R2", "Y1Y2 = Y1 Y2", "F = ZZ1+XX1XX2", "G = 2 R1R2", "X3 = E1 E2-R1R2-Y1Y2", "Y3 = F(4 Y1Y2+a G)+((XX1+ZZ1)(XX2+ZZ2)-F)G", "Z3 = 2(ZZ1-XX1XX2)", "XX3 = X3^2", "ZZ3 = Z3^2", "R3 = (X3+Z3)^2-XX3-ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E1"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("E2"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("XX1XX2"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("R1R2"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("Y1Y2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("ZZ1"), Y: ast.Variable("XX1XX2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R1R2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("E1"), Y: ast.Variable("E2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("R1R2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("ZZ1"), Y: ast.Variable("XX1XX2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/addition/madd-20080225-hwcd",
		Tag:            "madd-20080225-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "addition",
		Source:         "2008.02.25 Hisil--Wong--Carter--Dawson, plus U=XX, plus V=ZZ, plus W=R/2, plus rescaling, plus denominator elimination, plus standard streamlining, plus Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1", "k = a-1"},
		Compute:        []string{"A = 2 XX1 XX2", "B = 2 ZZ1", "C = R1 R2", "D = Y1 Y2", "X3 = (R1+Y1)(R2+Y2)-C-D", "Z3 = B-A", "XX3 = X3^2", "ZZ3 = Z3^2", "F = A + B + C", "G = 2((XX1+ZZ1)(XX2+1)+D)+k C", "H = XX3+ZZ3", "Y3 = F G - H", "R3 = (X3+Z3)^2-H"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("XX2"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("t13"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/addition/mmadd-2007-bl",
		Tag:            "mmadd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"E1 = X1+Y1", "E2 = X2+Y2", "B = X1 X2", "XX1XX2 = B^2", "Y1Y2 = Y1 Y2", "F = 1+XX1XX2", "G = 2 B", "X3 = E1 E2-B-Y1Y2", "Y3 = F(Y1Y2+a G)+(XX1+XX2)G", "Z3 = 1-XX1XX2", "XX3 = X3^2", "ZZ3 = Z3^2", "R3 = (X3+Z3)^2-XX3-ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("E1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("E2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("XX1XX2"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y1Y2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("XX1XX2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("E1"), Y: ast.Variable("E2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Y1Y2"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("XX2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("XX1XX2")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("t7"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/doubling/dbl-2007-fw",
		Tag:            "dbl-2007-fw",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus delta=-a",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a"},
		Compute:        []string{"A1 = (X1 Z1+Y1)^2", "A2 = Y1^2", "Q1 = (X1^2)^2", "S1 = (X1 Z1)^2", "T = A2-Q1-a2 S1", "X3 = A1-A2-S1", "Y3 = (T+Q1)(A2+a2 S1)+4 S1^2", "Z3 = T-Q1", "XX3 = X3^2", "ZZ3 = Z3^2", "T3 = XX3+ZZ3", "R3 = (X3+Z3)^2-T3"},
		Parameters:     []string{"a2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Q1"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("A2"), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("t13"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/doubling/dbl-2007-fw-2",
		Tag:            "dbl-2007-fw-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus delta=-a, plus scaling, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A1 = (R1+2 Y1)^2", "A2 = 4 Y1^2", "Q1 = XX1^2", "S1 = R1^2", "S12 = 2 S1", "M = a S12", "A2M = A2-M", "X3 = A1-A2-S1", "Y3 = A2M(A2+M)+S12^2", "Z3 = A2M-8 Q1", "XX3 = X3^2", "ZZ3 = Z3^2", "T3 = XX3+ZZ3", "R3 = (X3+Z3)^2-T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Q1"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("S12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("S12")}}, ast.Assignment{LHS: ast.Variable("A2M"), RHS: ast.Sub{X: ast.Variable("A2"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("S12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("A2M"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("Q1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("A2M"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/doubling/dbl-2007-hcd",
		Tag:            "dbl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"B   = XX1-ZZ1", "T1  = XX1+ZZ1", "C   = Y1 T1", "X3  = C-Y1(T1+R1)", "Z3  = T1 B", "XX3 = X3^2", "ZZ3 = Z3^2", "T3  = XX3+ZZ3", "R3  = (X3+Z3)^2-T3", "Y3  = 2 C^2-T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("T1"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/doubling/dbl-20090311-hwcd",
		Tag:            "dbl-20090311-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "doubling",
		Source:         "2009 Hisil--Wong--Carter--Dawson, formula (9), plus substitutions U = XX, V = ZZ, W = R/2",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"YY1 = Y1^2", "X3 = Y1 R1", "Z3 = (ZZ1 - XX1)(ZZ1 + XX1)", "XX3 = X3^2", "ZZ3 = Z3^2", "R3 = (X3+Z3)^2 - XX3 - ZZ3", "Y3 = 2 YY1^2 - a XX3 - ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("ZZ1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("ZZ1"), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("YY1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/doubling/mdbl-2007-hcd",
		Tag:            "mdbl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"A   = XX1^2", "B   = Y1^2", "X3  = XX1+B-(X1+Y1)^2", "Z3  =  A-1", "XX3 =  X3^2", "ZZ3 =  Z3^2", "T3  =  XX3+ZZ3", "R3  = (X3+Z3)^2-T3", "Y3  =  2 B(A+2 XX1+1)-T3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Add{X: ast.Variable("XX3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("XX1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("T3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/doubling/mdbl-20090311-hwcd",
		Tag:            "mdbl-20090311-hwcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "doubling",
		Source:         "2009 Hisil--Wong--Carter--Dawson, formula (9), plus substitutions U = XX, V = ZZ, W = R/2, plus Z3 expansion using Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"YY1 = Y1^2", "X3 = Y1 R1", "Z3 = 1 - XX1^2", "XX3 = X3^2", "ZZ3 = Z3^2", "R3 = (X3+Z3)^2 - XX3 - ZZ3", "Y3 = 2 YY1^2 - a XX3 - ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("YY1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 2 ZZ1", "B = 1/A", "X3 = R1 B", "Y3 = 2 Y1 B", "XX3 = X3^2", "R3 = 2 X3", "Z3 = 1", "ZZ3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Inv{X: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/tripling/tpl-2007-hcd",
		Tag:            "tpl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = XX1^2", "B = ZZ1^2", "C = A+B", "D = 2((XX1+ZZ1)^2-C)", "E = A-B", "F = 2 A", "G = 2 B", "J = a D+2 C", "K = J+E", "L = J-E", "M = C E", "N = G K", "P = F L", "X3 = X1(M-N)", "Y3 = Y1((M+N)(P-M)+(D E)^2)", "Z3 = Z1(P+M)", "XX3 = X3^2", "ZZ3 = Z3^2", "R3 = (X3+Z3)^2-XX3-ZZ3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("ZZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Add{X: ast.Variable("J"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Sub{X: ast.Variable("J"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("N"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("M"), Y: ast.Variable("N")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("M"), Y: ast.Variable("N")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("P"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("P"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("t13"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/xxyzzr/tripling/tpl-2007-hcd-2",
		Tag:            "tpl-2007-hcd-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[33],
		Operation:      "tripling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"b = a^2-1"},
		Compute:        []string{"UU  = XX1^2", "WW  = ZZ1^2", "RR  = R1^2", "A   = 4(UU - WW)", "AA  = A^2", "B   = 2(UU + WW)+ a RR", "BB  = B^2", "AB  = (A+B)^2-AA-BB", "C   = b RR^2", "Q   = 2(BB-C)", "X3  = X1(AB - Q)", "Z3  = Z1(AB + Q)", "Y3  = Y1(Q^2 - 4 AA C)", "XX3 = X3^2", "ZZ3 = Z3^2", "R3  = (X3+Z3)^2-XX3-ZZ3"},
		Parameters:     []string{"b"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("UU"), RHS: ast.Pow{X: ast.Variable("XX1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("WW"), RHS: ast.Pow{X: ast.Variable("ZZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("RR"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("UU"), Y: ast.Variable("WW")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("UU"), Y: ast.Variable("WW")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("BB"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("AB"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("BB")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("RR"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("BB"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("AB"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("AB"), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Q"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("AA"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("XX3"), RHS: ast.Pow{X: ast.Variable("X3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Pow{X: ast.Variable("t15"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Sub{X: ast.Variable("t16"), Y: ast.Variable("XX3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("ZZ3")}}}},
	},
	{
		ID:             "g1p/jquartic/xyz/addition/add-2002-bj",
		Tag:            "add-2002-bj",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "addition",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", formula (11)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = X1 Z1 Y2+Y1 X2 Z2", "Y3 = ((Z1 Z2)^2+(X1 X2)^2) (Y1 Y2+2 a X1 X2 Z1 Z2)+2 X1 X2 Z1 Z2 (X1^2 Z2^2+Z1^2 X2^2)", "Z3 = (Z1 Z2)^2-(X1 X2)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("t20"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t28"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Pow{X: ast.Variable("t30"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("t29"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t31"), Y: ast.Variable("t32")}}}},
	},
	{
		ID:             "g1p/jquartic/xyz/addition/add-2002-bj-2",
		Tag:            "add-2002-bj-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "addition",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", page 6",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"T1 = X1", "T2 = Y1", "T3 = Z1", "T4 = X2", "T5 = Y2", "T6 = Z2", "T7 = T1 T3", "T7 = T2+T7", "T8 = T4 T6", "T8 = T5+T8", "T2 = T2 T5", "T7 = T7 T8", "T7 = T7-T2", "T5 = T1 T4", "T1 = T1+T3", "T8 = T3 T6", "T4 = T4+T6", "T6 = T5 T8", "T7 = T7-T6", "T1 = T1 T4", "T1 = T1-T5", "T1 = T1-T8", "T3 = T1^2", "T6 = 2 T6", "T3 = T3-T6", "T3 = T3 T6", "T4 = a T6", "T2 = T2+T4", "T4 = T8^2", "T8 = T5^2", "T5 = T4+T8", "T2 = T2 T5", "T2 = T2+T3", "T5 = T4-T8", "X3 = T7", "Y3 = T2", "Z3 = T5"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Variable("X2")}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Variable("Z2")}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Mul{X: ast.Variable("T4"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Add{X: ast.Variable("T5"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T7"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Add{X: ast.Variable("T1"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Add{X: ast.Variable("T4"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("T5"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Pow{X: ast.Variable("T1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Pow{X: ast.Variable("T8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Pow{X: ast.Variable("T5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Add{X: ast.Variable("T4"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Sub{X: ast.Variable("T4"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T7")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("T2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("T5")}}},
	},
	{
		ID:             "g1p/jquartic/xyz/addition/add-2002-bj-3",
		Tag:            "add-2002-bj-3",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "addition",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", formula (11), plus separation of X2^2,Z2^2 as suggested by 2007 Duquesne",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A2 = X2^2", "B2 = X2 Z2", "C2 = Z2^2", "A1 = X1^2", "B1 = X1 Z1", "C1 = Z1^2", "A1A2 = A1 A2", "B1B2 = B1 B2", "C1C2 = C1 C2", "Y1Y2 = Y1 Y2", "E = C1C2+A1A2", "F = (A1+C1)(A2+C2)-E", "G = 2 B1B2", "X3 = (B1+Y1)(B2+Y2)-B1B2-Y1Y2", "Y3 = E(Y1Y2+a G)+G F", "Z3 = C1C2-A1A2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("C2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A1A2"), RHS: ast.Mul{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("B1B2"), RHS: ast.Mul{X: ast.Variable("B1"), Y: ast.Variable("B2")}}, ast.Assignment{LHS: ast.Variable("C1C2"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("Y1Y2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("C1C2"), Y: ast.Variable("A1A2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("A1"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B1B2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("B1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("B2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("B1B2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("Y1Y2"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("C1C2"), Y: ast.Variable("A1A2")}}}},
	},
	{
		ID:             "g1p/jquartic/xyz/addition/add-2007-bl",
		Tag:            "add-2007-bl",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A2 = X2^2", "C2 = Z2^2", "D2 = A2+C2", "B2 = (X2+Z2)^2-D2", "E2 = B2+Y2", "A1 = X1^2", "C1 = Z1^2", "D1 = A1+C1", "B1 = (X1+Z1)^2-D1", "E1 = B1+Y1", "A1A2 = A1 A2", "B1B2 = B1 B2", "C1C2 = C1 C2", "Y1Y2 = Y1 Y2", "F = C1C2+A1A2", "G = 2 B1B2", "X3 = E1 E2-B1B2-Y1Y2", "Y3 = F(4 Y1Y2+a G)+(D1 D2-F)G", "Z3 = 2(C1C2-A1A2)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A2"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D2"), RHS: ast.Add{X: ast.Variable("A2"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("E2"), RHS: ast.Add{X: ast.Variable("B2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("A1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D1"), RHS: ast.Add{X: ast.Variable("A1"), Y: ast.Variable("C1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B1"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("D1")}}, ast.Assignment{LHS: ast.Variable("E1"), RHS: ast.Add{X: ast.Variable("B1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("A1A2"), RHS: ast.Mul{X: ast.Variable("A1"), Y: ast.Variable("A2")}}, ast.Assignment{LHS: ast.Variable("B1B2"), RHS: ast.Mul{X: ast.Variable("B1"), Y: ast.Variable("B2")}}, ast.Assignment{LHS: ast.Variable("C1C2"), RHS: ast.Mul{X: ast.Variable("C1"), Y: ast.Variable("C2")}}, ast.Assignment{LHS: ast.Variable("Y1Y2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("C1C2"), Y: ast.Variable("A1A2")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B1B2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("E1"), Y: ast.Variable("E2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("B1B2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("D1"), Y: ast.Variable("D2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("Y1Y2")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("C1C2"), Y: ast.Variable("A1A2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t13")}}}},
	},
	{
		ID:             "g1p/jquartic/xyz/addition/add-2007-d",
		Tag:            "add-2007-d",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "addition",
		Source:         "2007 Duquesne, page 103, Table 1",
		AppliesTo:      "",
		Assume:         []string{"b = -2 a"},
		Compute:        []string{"T1 = X1^2", "T2 = X2^2", "T3 = X1 Z1", "T4 = X2 Z2", "T5 = Z1^2", "T6 = Z2^2", "T7 = Y1", "T8 = Y2", "T9 = T7 T8", "T7 = T7+T3", "T8 = T8+T4", "T3 = T3 T4", "T7 = T7 T8", "T7 = T7-T9", "T7 = T7-T3", "T4 = T1 T2", "T8 = T5 T6", "T1 = T1+T5", "T2 = T2+T6", "T5 = T1 T2", "T5 = T5-T4", "T5 = T5-T8", "T1 = T8-T4", "T2 = T8+T4", "T6 = b T3", "T6 = T9-T6", "T6 = T6 T2", "T3 = 2 T3", "T3 = T5 T3", "T8 = T6+T3", "X3 = T7", "Y3 = T8", "Z3 = T1"},
		Parameters:     []string{"b"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("T9"), RHS: ast.Mul{X: ast.Variable("T7"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Add{X: ast.Variable("T7"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Add{X: ast.Variable("T8"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T7"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T9")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Mul{X: ast.Variable("T5"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Add{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Sub{X: ast.Variable("T5"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Sub{X: ast.Variable("T5"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T8"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T8"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Sub{X: ast.Variable("T9"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("T6"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T5"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Add{X: ast.Variable("T6"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T7")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("T8")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("T1")}}},
	},
	{
		ID:             "g1p/jquartic/xyz/addition/madd-2002-bj",
		Tag:            "madd-2002-bj",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "addition",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", page 6, plus specialization to Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"T1 = X1", "T2 = Y1", "T3 = Z1", "T4 = X2", "T5 = Y2", "T7 = T1 T3", "T7 = T2+T7", "T8 = T4", "T8 = T5+T8", "T2 = T2 T5", "T7 = T7 T8", "T7 = T7-T2", "T5 = T1 T4", "T1 = T1+T3", "T8 = T3", "T4 = T4+1", "T6 = T5 T8", "T7 = T7-T6", "T1 = T1 T4", "T1 = T1-T5", "T1 = T1-T8", "T3 = T1^2", "T6 = 2 T6", "T3 = T3-T6", "T3 = T3 T6", "T4 = a T6", "T2 = T2+T4", "T4 = T8^2", "T8 = T5^2", "T5 = T4+T8", "T2 = T2 T5", "T2 = T2+T3", "T5 = T4-T8", "X3 = T7", "Y3 = T2", "Z3 = T5"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Variable("X2")}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Variable("T4")}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Add{X: ast.Variable("T5"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T7"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Add{X: ast.Variable("T1"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Variable("T3")}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Add{X: ast.Variable("T4"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("T5"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Pow{X: ast.Variable("T1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Pow{X: ast.Variable("T8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Pow{X: ast.Variable("T5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Add{X: ast.Variable("T4"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Sub{X: ast.Variable("T4"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T7")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("T2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("T5")}}},
	},
	{
		ID:             "g1p/jquartic/xyz/addition/mmadd-2002-bj",
		Tag:            "mmadd-2002-bj",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "addition",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", formula (11), plus specialization to affine",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"r = 1-(X1 X2)^2", "X3 = (X1 Y2+Y1 X2)/r", "Y3 = ((1+(X1 X2)^2) (Y1 Y2+2 a X1 X2)+2 X1 X2 (X1^2+X2^2))/r^2", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Inv{X: ast.Variable("r")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("t14"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Add{X: ast.Variable("t20"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Inv{X: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t21"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/jquartic/xyz/addition/mmadd-2002-bj-2",
		Tag:            "mmadd-2002-bj-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "addition",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", page 6, plus specialization to Z1=1 and Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"T7 = Y1+X1", "T8 = Y2+X2", "T2 = Y1 Y2", "T7 = T7 T8", "T7 = T7-T2", "T5 = X1 X2", "T6 = T5", "X3 = T7-T6", "T1 = X1+X2", "T3 = T1^2", "T6 = 2 T6", "T3 = T3-T6", "T3 = T3 T6", "T4 = a T6", "T2 = T2+T4", "T8 = T5^2", "T5 = T8+1", "T2 = T2 T5", "Y3 = T2+T3", "Z3 = 1-T8"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("T7"), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Variable("T5")}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Pow{X: ast.Variable("T1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Pow{X: ast.Variable("T5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Add{X: ast.Variable("T8"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("T2"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("T8")}}}},
	},
	{
		ID:             "g1p/jquartic/xyz/doubling/dbl-2002-bj",
		Tag:            "dbl-2002-bj",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "doubling",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", formula (11)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X2 = X1", "Y2 = Y1", "Z2 = Z1", "X3 = X1 Z1 Y2+Y1 X2 Z2", "Y3 = ((Z1 Z2)^2+(X1 X2)^2) (Y1 Y2+2 a X1 X2 Z1 Z2)+2 X1 X2 Z1 Z2 (X1^2 Z2^2+Z1^2 X2^2)", "Z3 = (Z1 Z2)^2-(X1 X2)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("X2"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("Y2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("Z2"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("t20"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t28"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Pow{X: ast.Variable("t30"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("t29"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t31"), Y: ast.Variable("t32")}}}},
	},
	{
		ID:             "g1p/jquartic/xyz/doubling/dbl-2002-bj-2",
		Tag:            "dbl-2002-bj-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "doubling",
		Source:         "2002 Billet--Joye \"The Jacobi model of an elliptic curve and side-channel analysis\", formula (11), plus specialization to doubling",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = X1 Z1 Y1+Y1 X1 Z1", "Y3 = ((Z1 Z1)^2+(X1 X1)^2) (Y1 Y1+2 a X1 X1 Z1 Z1)+2 X1 X1 Z1 Z1 (X1^2 Z1^2+Z1^2 X1^2)", "Z3 = (Z1 Z1)^2-(X1 X1)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t23")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("t20"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t28"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Pow{X: ast.Variable("t30"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Pow{X: ast.Variable("t29"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t31"), Y: ast.Variable("t32")}}}},
	},
	{
		ID:             "g1p/jquartic/xyz/doubling/dbl-2007-bl",
		Tag:            "dbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "XXXX = XX^2", "YY = Y1^2", "ZZ = Z1^2", "ZZZZ = ZZ^2", "M = XX+ZZ", "XZ = (X1+Z1)^2-M", "XZXZ = XZ^2", "X3 = (Y1+XZ)^2-YY-XZXZ", "Y3 = (ZZZZ+XXXX)(4 YY+2 a XZXZ)+XZXZ^2", "Z3 = 2 (ZZZZ-XXXX)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("XXXX"), RHS: ast.Pow{X: ast.Variable("XX"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZZZ"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("XZ"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("XZXZ"), RHS: ast.Pow{X: ast.Variable("XZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("XZ")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("XZXZ")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("XZXZ")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("ZZZZ"), Y: ast.Variable("XXXX")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("XZXZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("ZZZZ"), Y: ast.Variable("XXXX")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/jquartic/xyz/doubling/dbl-2007-fw",
		Tag:            "dbl-2007-fw",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus substitution delta=-a",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a"},
		Compute:        []string{"U1 = (X1 Z1+Y1)^2", "U2 = Y1^2", "V1 = (X1^2)^2", "S1 = (X1 Z1)^2", "T = U2-V1-a2 S1", "X3 = U1-U2-S1", "Y3 = (T+V1)(U2+a2 S1)+4 S1^2", "Z3 = T-V1"},
		Parameters:     []string{"a2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V1"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("U2"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("V1")}}}},
	},
	{
		ID:             "g1p/jquartic/xyz/doubling/dbl-2007-fw-2",
		Tag:            "dbl-2007-fw-2",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus delta=-a, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a"},
		Compute:        []string{"XZ1 = X1 Z1", "U1 = (XZ1+Y1)^2", "U2 = Y1^2", "V1 = (X1^2)^2", "S1 = XZ1^2", "aS1 = a2 S1", "T = U2-V1-aS1", "X3 = U1-U2-S1", "Y3 = (T+V1)(U2+aS1)+(2 S1)^2", "Z3 = T-V1"},
		Parameters:     []string{"a2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XZ1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("XZ1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V1"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("XZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("aS1"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("aS1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("U2"), Y: ast.Variable("aS1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("V1")}}}},
	},
	{
		ID:             "g1p/jquartic/xyz/doubling/dbl-2007-hcd",
		Tag:            "dbl-2007-hcd",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "doubling",
		Source:         "2007 Hisil--Carter--Dawson",
		AppliesTo:      "",
		Assume:         []string{"b = 4-4 a^2"},
		Compute:        []string{"T0 = X1 Z1", "X3 = T0 Y1", "X3 = X3+X3", "T0 = T0^2", "T1 = 2 a T0", "T2 = Y1^2", "Z3 = T2-T1", "Y3 = T0^2", "Y3 = b Y3", "T0 = T2^2", "Y3 = Y3+T0", "T0 = X1^2", "T0 = T0^2", "Z3 = Z3-T0", "Z3 = Z3-T0"},
		Parameters:     []string{"b"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("T0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("T0"), RHS: ast.Pow{X: ast.Variable("T0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T0")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Pow{X: ast.Variable("T0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("T0"), RHS: ast.Pow{X: ast.Variable("T2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("Y3"), Y: ast.Variable("T0")}}, ast.Assignment{LHS: ast.Variable("T0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T0"), RHS: ast.Pow{X: ast.Variable("T0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("T0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("Z3"), Y: ast.Variable("T0")}}}},
	},
	{
		ID:             "g1p/jquartic/xyz/doubling/mdbl-2007-fw",
		Tag:            "mdbl-2007-fw",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "doubling",
		Source:         "2007 Feng--Wu, first JQN2 doubling formula, plus correction of obvious typos, plus epsilon=1, plus delta=-a, plus Z1=1, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"a2 = 2 a", "Z1 = 1"},
		Compute:        []string{"U1 = (X1+Y1)^2", "U2 = Y1^2", "S1 = X1^2", "V1 = S1^2", "aS1 = a2 S1", "T = U2-V1-aS1", "X3 = U1-U2-S1", "Y3 = (T+V1)(U2+aS1)+4 V1", "Z3 = T-V1"},
		Parameters:     []string{"a2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V1"), RHS: ast.Pow{X: ast.Variable("S1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("aS1"), RHS: ast.Mul{X: ast.Variable("a2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("aS1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("U2"), Y: ast.Variable("aS1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("V1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("V1")}}}},
	},
	{
		ID:             "g1p/jquartic/xyz/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[8],
		Representation: representations[34],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = X1 A", "Y3 = Y1 A^2", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/montgom/xz/diffadd/dadd-1987-m",
		Tag:            "dadd-1987-m",
		Class:          "g1p",
		Shape:          shapes[9],
		Representation: representations[35],
		Operation:      "diffadd",
		Source:         "1987 Montgomery \"Speeding the Pollard and elliptic curve methods of factorization\", page 261, third display",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X5 = Z1(X2 X3-Z2 Z3)^2", "Z5 = X1(X2 Z3-Z2 X3)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t7")}}}},
	},
	{
		ID:             "g1p/montgom/xz/diffadd/dadd-1987-m-2",
		Tag:            "dadd-1987-m-2",
		Class:          "g1p",
		Shape:          shapes[9],
		Representation: representations[35],
		Operation:      "diffadd",
		Source:         "1987 Montgomery \"Speeding the Pollard and elliptic curve methods of factorization\", page 261, fifth display",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X5 = Z1((X3-Z3)(X2+Z2)+(X3+Z3)(X2-Z2))^2", "Z5 = X1((X3-Z3)(X2+Z2)-(X3+Z3)(X2-Z2))^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/montgom/xz/diffadd/dadd-1987-m-3",
		Tag:            "dadd-1987-m-3",
		Class:          "g1p",
		Shape:          shapes[9],
		Representation: representations[35],
		Operation:      "diffadd",
		Source:         "1987 Montgomery \"Speeding the Pollard and elliptic curve methods of factorization\", page 261, fifth display, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X2+Z2", "B = X2-Z2", "C = X3+Z3", "D = X3-Z3", "DA = D A", "CB = C B", "X5 = Z1(DA+CB)^2", "Z5 = X1(DA-CB)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("DA"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("CB"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("DA"), Y: ast.Variable("CB")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("DA"), Y: ast.Variable("CB")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t3")}}}},
	},
	{
		ID:             "g1p/montgom/xz/diffadd/mdadd-1987-m",
		Tag:            "mdadd-1987-m",
		Class:          "g1p",
		Shape:          shapes[9],
		Representation: representations[35],
		Operation:      "diffadd",
		Source:         "1987 Montgomery \"Speeding the Pollard and elliptic curve methods of factorization\", page 261, fifth display, plus common-subexpression elimination, plus assumption Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"A = X2+Z2", "B = X2-Z2", "C = X3+Z3", "D = X3-Z3", "DA = D A", "CB = C B", "X5 = (DA+CB)^2", "Z5 = X1(DA-CB)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("DA"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("CB"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("DA"), Y: ast.Variable("CB")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("DA"), Y: ast.Variable("CB")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t2")}}}},
	},
	{
		ID:             "g1p/montgom/xz/doubling/dbl-1987-m",
		Tag:            "dbl-1987-m",
		Class:          "g1p",
		Shape:          shapes[9],
		Representation: representations[35],
		Operation:      "doubling",
		Source:         "1987 Montgomery \"Speeding the Pollard and elliptic curve methods of factorization\", page 261, fourth display",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = (X1^2-Z1^2)^2", "Z3 = 4 X1 Z1 (X1^2 + a X1 Z1 + Z1^2)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/montgom/xz/doubling/dbl-1987-m-2",
		Tag:            "dbl-1987-m-2",
		Class:          "g1p",
		Shape:          shapes[9],
		Representation: representations[35],
		Operation:      "doubling",
		Source:         "1987 Montgomery \"Speeding the Pollard and elliptic curve methods of factorization\", page 261, sixth display",
		AppliesTo:      "",
		Assume:         []string{"4 a24 = a+2"},
		Compute:        []string{"X3 = (X1+Z1)^2 (X1-Z1)^2", "Z3 = (4 X1 Z1)((X1-Z1)^2 + a24(4 X1 Z1))"},
		Parameters:     []string{"a24"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("a24"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g1p/montgom/xz/doubling/dbl-1987-m-3",
		Tag:            "dbl-1987-m-3",
		Class:          "g1p",
		Shape:          shapes[9],
		Representation: representations[35],
		Operation:      "doubling",
		Source:         "1987 Montgomery \"Speeding the Pollard and elliptic curve methods of factorization\", page 261, sixth display, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"4 a24 = a+2"},
		Compute:        []string{"A = X1+Z1", "AA = A^2", "B = X1-Z1", "BB = B^2", "C = AA-BB", "X3 = AA BB", "Z3 = C(BB + a24 C)"},
		Parameters:     []string{"a24"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("BB"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Sub{X: ast.Variable("AA"), Y: ast.Variable("BB")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("AA"), Y: ast.Variable("BB")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a24"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("BB"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("t1")}}}},
	},
	{
		ID:             "g1p/montgom/xz/doubling/mdbl-1987-m",
		Tag:            "mdbl-1987-m",
		Class:          "g1p",
		Shape:          shapes[9],
		Representation: representations[35],
		Operation:      "doubling",
		Source:         "1987 Montgomery \"Speeding the Pollard and elliptic curve methods of factorization\", page 261, fourth display, plus assumption Z1=1, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"XX1 = X1^2", "X3 = (XX1-1)^2", "Z3 = 4 X1 (XX1 + a X1 + 1)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("XX1"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("XX1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t4")}}}},
	},
	{
		ID:             "g1p/montgom/xz/ladder/ladd-1987-m",
		Tag:            "ladd-1987-m",
		Class:          "g1p",
		Shape:          shapes[9],
		Representation: representations[35],
		Operation:      "ladder",
		Source:         "1987 Montgomery \"Speeding the Pollard and elliptic curve methods of factorization\", page 261, third and fourth displays",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X5 = Z1(X2 X3-Z2 Z3)^2", "Z5 = X1(X2 Z3-Z2 X3)^2", "X4 = (X2^2-Z2^2)^2", "Z4 = 4 X2 Z2 (X2^2 + a X2 Z2 + Z2^2)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Pow{X: ast.Variable("t10"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t18")}}}},
	},
	{
		ID:             "g1p/montgom/xz/ladder/ladd-1987-m-2",
		Tag:            "ladd-1987-m-2",
		Class:          "g1p",
		Shape:          shapes[9],
		Representation: representations[35],
		Operation:      "ladder",
		Source:         "1987 Montgomery \"Speeding the Pollard and elliptic curve methods of factorization\", page 261, fifth and sixth displays",
		AppliesTo:      "",
		Assume:         []string{"4 a24 = a+2"},
		Compute:        []string{"X5 = Z1((X3-Z3)(X2+Z2)+(X3+Z3)(X2-Z2))^2", "Z5 = X1((X3-Z3)(X2+Z2)-(X3+Z3)(X2-Z2))^2", "X4 = (X2+Z2)^2 (X2-Z2)^2", "Z4 = (4 X2 Z2)((X2-Z2)^2 + a24(4 X2 Z2))"},
		Parameters:     []string{"a24"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Pow{X: ast.Variable("t16"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Pow{X: ast.Variable("t17"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Mul{X: ast.Variable("t18"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Pow{X: ast.Variable("t22"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Mul{X: ast.Variable("a24"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t25")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Add{X: ast.Variable("t23"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Variable("t26"), Y: ast.Variable("t27")}}}},
	},
	{
		ID:             "g1p/montgom/xz/ladder/ladd-1987-m-3",
		Tag:            "ladd-1987-m-3",
		Class:          "g1p",
		Shape:          shapes[9],
		Representation: representations[35],
		Operation:      "ladder",
		Source:         "1987 Montgomery \"Speeding the Pollard and elliptic curve methods of factorization\", page 261, fifth and sixth displays, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"4 a24 = a+2"},
		Compute:        []string{"A = X2+Z2", "AA = A^2", "B = X2-Z2", "BB = B^2", "E = AA-BB", "C = X3+Z3", "D = X3-Z3", "DA = D A", "CB = C B", "X5 = Z1(DA+CB)^2", "Z5 = X1(DA-CB)^2", "X4 = AA BB", "Z4 = E(BB + a24 E)"},
		Parameters:     []string{"a24"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("BB"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("AA"), Y: ast.Variable("BB")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("DA"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("CB"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("DA"), Y: ast.Variable("CB")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("DA"), Y: ast.Variable("CB")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Mul{X: ast.Variable("AA"), Y: ast.Variable("BB")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a24"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("BB"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g1p/montgom/xz/ladder/mladd-1987-m",
		Tag:            "mladd-1987-m",
		Class:          "g1p",
		Shape:          shapes[9],
		Representation: representations[35],
		Operation:      "ladder",
		Source:         "1987 Montgomery \"Speeding the Pollard and elliptic curve methods of factorization\", page 261, fifth and sixth displays, plus common-subexpression elimination, plus assumption Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "4 a24 = a+2"},
		Compute:        []string{"A = X2+Z2", "AA = A^2", "B = X2-Z2", "BB = B^2", "E = AA-BB", "C = X3+Z3", "D = X3-Z3", "DA = D A", "CB = C B", "X5 = (DA+CB)^2", "Z5 = X1(DA-CB)^2", "X4 = AA BB", "Z4 = E(BB + a24 E)"},
		Parameters:     []string{"a24"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("BB"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("AA"), Y: ast.Variable("BB")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("DA"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("CB"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("DA"), Y: ast.Variable("CB")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("DA"), Y: ast.Variable("CB")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Mul{X: ast.Variable("AA"), Y: ast.Variable("BB")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a24"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("BB"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t4")}}}},
	},
	{
		ID:             "g1p/montgom/xz/scaling/scale",
		Tag:            "scale",
		Class:          "g1p",
		Shape:          shapes[9],
		Representation: representations[35],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = X1 / Z1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/addition/add-1986-cc",
		Tag:            "add-1986-cc",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "addition",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", page 414, formula (4.3i)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2^2", "U2 = X2 Z1^2", "S1 = Y1 Z2^3", "S2 = Y2 Z1^3", "P = U2-U1", "R = S2-S1", "X3 = R^2-(U1+U2) P^2", "Y3 = R (U1 P^2-X3)-S1 P^3", "Z3 = Z1 Z2 P"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t14")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/addition/add-1986-cc-2",
		Tag:            "add-1986-cc-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "addition",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", page 414, formula (4.3i')",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2^2", "U2 = X2 Z1^2", "S1 = Y1 Z2^3", "S2 = Y2 Z1^3", "P = U2-U1", "R = S2-S1", "X3 = R^2-(U1+U2) P^2", "Y3 = (R (-2 R^2+3 P^2 (U1+U2))-P^3 (S1+S2))/2", "Z3 = Z1 Z2 P"},
		Parameters:     []string(nil),
		Program:        (*ast.Program)(nil),
	},
	{
		ID:             "g1p/shortw/jacobian-0/addition/add-1998-cmo",
		Tag:            "add-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (5)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2^2", "U2 = X2 Z1^2", "S1 = Y1 Z2^3", "S2 = Y2 Z1^3", "H = U2-U1", "r = S2-S1", "X3 = r^2-H^3-2 U1 H^2", "Y3 = r (U1 H^2-X3)-S1 H^3", "Z3 = Z1 Z2 H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t16")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/addition/add-1998-cmo-2",
		Tag:            "add-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (5), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Z1Z1 = Z1^2", "Z2Z2 = Z2^2", "U1 = X1 Z2Z2", "U2 = X2 Z1Z1", "S1 = Y1 Z2 Z2Z2", "S2 = Y2 Z1 Z1Z1", "H = U2-U1", "HH = H^2", "HHH = H HH", "r = S2-S1", "V = U1 HH", "X3 = r^2-HHH-2 V", "Y3 = r (V-X3)-S1 HHH", "Z3 = Z1 Z2 H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1Z1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z2Z2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("HH"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("HHH"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("HHH")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("HHH")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/addition/add-1998-hnm",
		Tag:            "add-1998-hnm",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "addition",
		Source:         "1998 Hasegawa--Nakajima--Matsui, page 188",
		AppliesTo:      "",
		Assume:         []string{"half 2=1"},
		Compute:        []string{"R1 = X1", "R2 = Y1", "R3 = Z1", "R4 = X2", "R5 = Y2", "R6 = Z2", "R7 = R6^2", "R1 = R1 R7", "R7 = R6 R7", "R2 = R2 R7", "R7 = R3^2", "R8 = R4 R7", "R7 = R3 R7", "R7 = R5 R7", "R2 = R2-R7", "R7 = 2 R7", "R7 = R2+R7", "R1 = R1-R8", "R8 = 2 R8", "R8 = R1+R8", "R3 = R3 R6", "R3 = R3 R1", "R7 = R7 R1", "R1 = R1^2", "R8 = R8 R1", "R7 = R7 R1", "R1 = R2^2", "R1 = R1-R8", "R8 = R8-R1", "R8 = R8-R1", "R8 = R8 R2", "R2 = R8-R7", "R2 = half R2", "X3 = R1", "Y3 = R2", "Z3 = R3"},
		Parameters:     []string{"half"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Variable("X2")}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Variable("Z2")}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Pow{X: ast.Variable("R6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R6"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Variable("R4"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R5"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R7"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Variable("R8"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R7"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Sub{X: ast.Variable("R8"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Sub{X: ast.Variable("R8"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Variable("R8"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R8"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("half"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("R1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("R2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("R3")}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/addition/add-2001-b",
		Tag:            "add-2001-b",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "addition",
		Source:         "2001 Bernstein http://cr.yp.to/nistp224.html opt-idea53.c ecadd",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"ZZ1 = Z1^2", "ZZZ1 = Z1 ZZ1", "ZZ2 = Z2^2", "ZZZ2 = Z2 ZZ2", "A = X1 ZZ2", "B = X2 ZZ1 -A", "c = Y1 ZZZ2", "d = Y2 ZZZ1 -c", "e = B^2", "f = B e", "g = A e", "h = Z1 Z2", "f2g = 2 g+f", "X3 = d^2-f2g", "Z3 = B h", "gx = g-X3", "Y3 = d gx-c f"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("ZZ1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZZ1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZZ2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("c"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("ZZZ2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZZ1")}}, ast.Assignment{LHS: ast.Variable("d"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("c")}}, ast.Assignment{LHS: ast.Variable("e"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("f"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("e")}}, ast.Assignment{LHS: ast.Variable("g"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("e")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("g")}}, ast.Assignment{LHS: ast.Variable("f2g"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("f")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("d"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("f2g")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("gx"), RHS: ast.Sub{X: ast.Variable("g"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("f")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("gx")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/addition/add-2007-bl",
		Tag:            "add-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange; note that the improvement from 12M+4S to 11M+5S was already mentioned in 2001 Bernstein http://cr.yp.to/talks.html#2001.10.29",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Z1Z1 = Z1^2", "Z2Z2 = Z2^2", "U1 = X1 Z2Z2", "U2 = X2 Z1Z1", "S1 = Y1 Z2 Z2Z2", "S2 = Y2 Z1 Z1Z1", "H = U2-U1", "I = (2 H)^2", "J = H I", "r = 2 (S2-S1)", "V = U1 I", "X3 = r^2-J-2 V", "Y3 = r (V-X3)-2 S1 J", "Z3 = ((Z1+Z2)^2-Z1Z1-Z2Z2) H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1Z1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z2Z2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("t11"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t14"), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/addition/madd",
		Tag:            "madd",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string{"Z2=1"},
		Compute:        []string{"Z1Z1 = Z1^2", "U2 = X2 Z1Z1", "S2 = Y2 Z1 Z1Z1", "H = U2-X1", "I = (2 H)^2", "J = H I", "r = 2 (S2-Y1)", "V = X1 I", "X3 = r^2-J-2 V", "Y3 = r (V-X3)-2 Y1 J", "Z3 = 2 Z1 H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1Z1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/addition/madd-2004-hmv",
		Tag:            "madd-2004-hmv",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "addition",
		Source:         "2004 Hankerson--Menezes--Vanstone, page 91",
		AppliesTo:      "",
		Assume:         []string{"Z2=1"},
		Compute:        []string{"T1 = Z1^2", "T2 = T1 Z1", "T1 = T1 X2", "T2 = T2 Y2", "T1 = T1-X1", "T2 = T2-Y1", "Z3 = Z1 T1", "T3 = T1^2", "T4 = T3 T1", "T3 = T3 X1", "T1 = 2 T3", "X3 = T2^2", "X3 = X3-T1", "X3 = X3-T4", "T3 = T3-X3", "T3 = T3 T2", "T4 = T4 Y1", "Y3 = T3-T4"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Pow{X: ast.Variable("T1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("T2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T4"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T4")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/addition/madd-2007-bl",
		Tag:            "madd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z2=1"},
		Compute:        []string{"Z1Z1 = Z1^2", "U2 = X2 Z1Z1", "S2 = Y2 Z1 Z1Z1", "H = U2-X1", "HH = H^2", "I = 4 HH", "J = H I", "r = 2 (S2-Y1)", "V = X1 I", "X3 = r^2-J-2 V", "Y3 = r (V-X3)-2 Y1 J", "Z3 = (Z1+H)^2-Z1Z1-HH"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1Z1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("HH"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("t9"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("HH")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/addition/madd-2008-g",
		Tag:            "madd-2008-g",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "addition",
		Source:         "2008 Giessmann",
		AppliesTo:      "",
		Assume:         []string{"Z2=1"},
		Compute:        []string{"T1 = Z1^2", "T2 = T1 Z1", "T1 = T1 X2", "T2 = T2 Y2", "T1 = X1-T1", "T2 = T2-Y1", "Z3 = Z1 T1", "T4 = T1^2", "T1 = T1 T4", "T4 = T4 X1", "X3 = T2^2", "X3 = X3+T1", "Y3 = T1 Y1", "T1 = 2 T4", "X3 = X3-T1", "T4 = X3-T4", "T4 = T4 T2", "Y3 = T4-Y3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Pow{X: ast.Variable("T1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T4"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("T2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T4"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("T4"), Y: ast.Variable("Y3")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/addition/mmadd-2007-bl",
		Tag:            "mmadd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1=1", "Z2=1"},
		Compute:        []string{"H = X2-X1", "HH = H^2", "I = 4 HH", "J = H I", "r = 2 (Y2-Y1)", "V = X1 I", "X3 = r^2-J-2 V", "Y3 = r (V-X3)-2 Y1 J", "Z3 = 2 H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("HH"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/addition/zadd-2007-m",
		Tag:            "zadd-2007-m",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "addition",
		Source:         "2007 Meloni \"New point addition formulae for ECC applications\", page 192",
		AppliesTo:      "",
		Assume:         []string{"Z1 = Z2"},
		Compute:        []string{"A = (X2-X1)^2", "B = X1 A", "C = X2 A", "D = (Y2-Y1)^2", "X3 = D-B-C", "Y3 = (Y2-Y1)(B-X3)-Y1(C-B)", "Z3 = Z1(X2-X1)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/doubling/dbl-1986-cc",
		Tag:            "dbl-1986-cc",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "doubling",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", page 414, formula (4.2ii)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"S = 4 X1 Y1^2", "M = 3 X1^2+a Z1^4", "T = M^2-2 S", "X3 = T", "Y3 = M(S-T)-8 Y1^4", "Z3 = 2 Y1 Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/doubling/dbl-1998-cmo",
		Tag:            "dbl-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "doubling",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (6)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"S = 4 X1 Y1^2", "M = 3 X1^2+a Z1^4", "T = M^2-2 S", "X3 = T", "Y3 = M (S-T)-8 Y1^4", "Z3 = 2 Y1 Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/doubling/dbl-1998-cmo-2",
		Tag:            "dbl-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "doubling",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (6), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "ZZ = Z1^2", "S = 4 X1 YY", "M = 3 XX+a ZZ^2", "T = M^2-2 S", "X3 = T", "Y3 = M (S-T)-8 YY^2", "Z3 = 2 Y1 Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/doubling/dbl-1998-hnm",
		Tag:            "dbl-1998-hnm",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "doubling",
		Source:         "1998 Hasegawa--Nakajima--Matsui, page 188",
		AppliesTo:      "",
		Assume:         []string{"half*2=1"},
		Compute:        []string{"R1 = X1", "R2 = Y1", "R3 = Z1", "R4 = R3^2", "R3 = R2 R3", "R3 = 2 R3", "R4 = R4^2", "R4 = a R4", "R5 = R1^2", "R4 = R4+R5", "R5 = 2 R5", "R4 = R4+R5", "R2 = 2 R2", "R2 = R2^2", "R5 = R2^2", "R5 = half R5", "R2 = R2 R1", "R1 = R4^2", "R1 = R1-R2", "R1 = R1-R2", "R2 = R2-R1", "R2 = R2 R4", "R2 = R2-R5", "X3 = R1", "Y3 = R2", "Z3 = R3"},
		Parameters:     []string{"half"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Pow{X: ast.Variable("R4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Add{X: ast.Variable("R4"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Add{X: ast.Variable("R4"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Mul{X: ast.Variable("half"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("R1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("R2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("R3")}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/doubling/dbl-2007-bl",
		Tag:            "dbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "YYYY = YY^2", "ZZ = Z1^2", "S = 2 ((X1+YY)^2-XX-YYYY)", "M = 3 XX+a ZZ^2", "T = M^2-2 S", "X3 = T", "Y3 = M (S-T)-8 YYYY", "Z3 = (Y1+Z1)^2-YY-ZZ"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YYYY"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("ZZ")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/doubling/dbl-2009-alnr",
		Tag:            "dbl-2009-alnr",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "doubling",
		Source:         "2009.04.01 Arene--Lange--Naehrig--Ritzenthaler",
		AppliesTo:      "jacobian-0",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = Y1^2", "ZZ = Z1^2", "C = B^2", "D = 2 ((X1 + B)^2 - A - C)", "E = 3 A", "F = E^2", "X3 = F - 2 D", "Y3 = E (D - X3) - 8 C", "Z3 = (Y1 + Z1)^2 - B - ZZ"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("F"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("ZZ")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/doubling/dbl-2009-l",
		Tag:            "dbl-2009-l",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "doubling",
		Source:         "2009.04.01 Lange",
		AppliesTo:      "jacobian-0",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = Y1^2", "C = B^2", "D = 2 ((X1 + B)^2 - A - C)", "E = 3 A", "F = E^2", "X3 = F - 2 D", "Y3 = E (D - X3) - 8 C", "Z3 = 2 Y1 Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("F"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/doubling/mdbl-2007-bl",
		Tag:            "mdbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1=1"},
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "YYYY = YY^2", "S = 2((X1+YY)^2-XX-YYYY)", "M = 3 XX+a", "T = M^2-2 S", "X3 = T", "Y3 = M(S-T)-8 YYYY", "Z3 = 2 Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YYYY"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("a")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "AA = A^2", "X3 = X1*AA", "Y3 = Y1*AA*A", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("AA"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/tripling/tpl-2005-dim",
		Tag:            "tpl-2005-dim",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "tripling",
		Source:         "2005 Dimitrov--Imbert--Mishra",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"M = 3 X1^2+a Z1^4", "E = 12 X1 Y1^2-M^2", "T = 8 Y1^4", "X3 = 8 Y1^2 (T-M E)+X1 E^2", "Y3 = Y1 (4 (M E-T) (2 T-M E)-E^3)", "Z3 = Z1 E"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(12), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Sub{X: ast.Variable("t18"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("t19"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Sub{X: ast.Variable("t23"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("E")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/tripling/tpl-2005-dim-2",
		Tag:            "tpl-2005-dim-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "tripling",
		Source:         "2005 Dimitrov--Imbert--Mishra, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"ZZ = Z1^2", "YY = Y1^2", "C = 2 YY", "M = 3 X1^2+a ZZ^2", "E = 6 X1 C-M^2", "EE = E^2", "T = 2 C^2", "U = M E-T", "U4 = 4 U", "X3 = X1 EE-C U4", "Y3 = Y1 (U4 (T-U)-E EE)", "Z3 = Z1 E"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(6), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("EE"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("U4"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("U4")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("U4"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("E")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-0/tripling/tpl-2007-bl",
		Tag:            "tpl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[37],
		Operation:      "tripling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "ZZ = Z1^2", "YYYY = YY^2", "M = 3 XX+a ZZ^2", "MM = M^2", "E = 6 ((X1+YY)^2-XX-YYYY)-MM", "EE = E^2", "T = 16 YYYY", "U = (M+E)^2-MM-EE-T", "X3 = 4 (X1 EE-4 YY U)", "Y3 = 8 Y1 (U (T-U)-E EE)", "Z3 = (Z1+E)^2-ZZ-EE"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YYYY"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("MM"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(6), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("MM")}}, ast.Assignment{LHS: ast.Variable("EE"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Constant(16), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("MM")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Sub{X: ast.Variable("t18"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("t21"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Sub{X: ast.Variable("t22"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t23"), Y: ast.Variable("EE")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/addition/add-1986-cc",
		Tag:            "add-1986-cc",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "addition",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", page 414, formula (4.3i)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2^2", "U2 = X2 Z1^2", "S1 = Y1 Z2^3", "S2 = Y2 Z1^3", "P = U2-U1", "R = S2-S1", "X3 = R^2-(U1+U2) P^2", "Y3 = R (U1 P^2-X3)-S1 P^3", "Z3 = Z1 Z2 P"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t14")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/addition/add-1986-cc-2",
		Tag:            "add-1986-cc-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "addition",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", page 414, formula (4.3i')",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2^2", "U2 = X2 Z1^2", "S1 = Y1 Z2^3", "S2 = Y2 Z1^3", "P = U2-U1", "R = S2-S1", "X3 = R^2-(U1+U2) P^2", "Y3 = (R (-2 R^2+3 P^2 (U1+U2))-P^3 (S1+S2))/2", "Z3 = Z1 Z2 P"},
		Parameters:     []string(nil),
		Program:        (*ast.Program)(nil),
	},
	{
		ID:             "g1p/shortw/jacobian-3/addition/add-1998-cmo",
		Tag:            "add-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (5)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2^2", "U2 = X2 Z1^2", "S1 = Y1 Z2^3", "S2 = Y2 Z1^3", "H = U2-U1", "r = S2-S1", "X3 = r^2-H^3-2 U1 H^2", "Y3 = r (U1 H^2-X3)-S1 H^3", "Z3 = Z1 Z2 H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t16")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/addition/add-1998-cmo-2",
		Tag:            "add-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (5), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Z1Z1 = Z1^2", "Z2Z2 = Z2^2", "U1 = X1 Z2Z2", "U2 = X2 Z1Z1", "S1 = Y1 Z2 Z2Z2", "S2 = Y2 Z1 Z1Z1", "H = U2-U1", "HH = H^2", "HHH = H HH", "r = S2-S1", "V = U1 HH", "X3 = r^2-HHH-2 V", "Y3 = r (V-X3)-S1 HHH", "Z3 = Z1 Z2 H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1Z1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z2Z2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("HH"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("HHH"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("HHH")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("HHH")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/addition/add-1998-hnm",
		Tag:            "add-1998-hnm",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "addition",
		Source:         "1998 Hasegawa--Nakajima--Matsui, page 188",
		AppliesTo:      "",
		Assume:         []string{"half 2=1"},
		Compute:        []string{"R1 = X1", "R2 = Y1", "R3 = Z1", "R4 = X2", "R5 = Y2", "R6 = Z2", "R7 = R6^2", "R1 = R1 R7", "R7 = R6 R7", "R2 = R2 R7", "R7 = R3^2", "R8 = R4 R7", "R7 = R3 R7", "R7 = R5 R7", "R2 = R2-R7", "R7 = 2 R7", "R7 = R2+R7", "R1 = R1-R8", "R8 = 2 R8", "R8 = R1+R8", "R3 = R3 R6", "R3 = R3 R1", "R7 = R7 R1", "R1 = R1^2", "R8 = R8 R1", "R7 = R7 R1", "R1 = R2^2", "R1 = R1-R8", "R8 = R8-R1", "R8 = R8-R1", "R8 = R8 R2", "R2 = R8-R7", "R2 = half R2", "X3 = R1", "Y3 = R2", "Z3 = R3"},
		Parameters:     []string{"half"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Variable("X2")}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Variable("Z2")}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Pow{X: ast.Variable("R6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R6"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Variable("R4"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R5"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R7"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Variable("R8"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R7"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Sub{X: ast.Variable("R8"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Sub{X: ast.Variable("R8"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Variable("R8"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R8"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("half"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("R1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("R2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("R3")}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/addition/add-2001-b",
		Tag:            "add-2001-b",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "addition",
		Source:         "2001 Bernstein http://cr.yp.to/nistp224.html opt-idea53.c ecadd",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"ZZ1 = Z1^2", "ZZZ1 = Z1 ZZ1", "ZZ2 = Z2^2", "ZZZ2 = Z2 ZZ2", "A = X1 ZZ2", "B = X2 ZZ1 -A", "c = Y1 ZZZ2", "d = Y2 ZZZ1 -c", "e = B^2", "f = B e", "g = A e", "h = Z1 Z2", "f2g = 2 g+f", "X3 = d^2-f2g", "Z3 = B h", "gx = g-X3", "Y3 = d gx-c f"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("ZZ1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZZ1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZZ2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("c"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("ZZZ2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZZ1")}}, ast.Assignment{LHS: ast.Variable("d"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("c")}}, ast.Assignment{LHS: ast.Variable("e"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("f"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("e")}}, ast.Assignment{LHS: ast.Variable("g"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("e")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("g")}}, ast.Assignment{LHS: ast.Variable("f2g"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("f")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("d"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("f2g")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("gx"), RHS: ast.Sub{X: ast.Variable("g"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("f")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("gx")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/addition/add-2007-bl",
		Tag:            "add-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange; note that the improvement from 12M+4S to 11M+5S was already mentioned in 2001 Bernstein http://cr.yp.to/talks.html#2001.10.29",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Z1Z1 = Z1^2", "Z2Z2 = Z2^2", "U1 = X1 Z2Z2", "U2 = X2 Z1Z1", "S1 = Y1 Z2 Z2Z2", "S2 = Y2 Z1 Z1Z1", "H = U2-U1", "I = (2 H)^2", "J = H I", "r = 2 (S2-S1)", "V = U1 I", "X3 = r^2-J-2 V", "Y3 = r (V-X3)-2 S1 J", "Z3 = ((Z1+Z2)^2-Z1Z1-Z2Z2) H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1Z1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z2Z2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("t11"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t14"), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/addition/madd",
		Tag:            "madd",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string{"Z2=1"},
		Compute:        []string{"Z1Z1 = Z1^2", "U2 = X2 Z1Z1", "S2 = Y2 Z1 Z1Z1", "H = U2-X1", "I = (2 H)^2", "J = H I", "r = 2 (S2-Y1)", "V = X1 I", "X3 = r^2-J-2 V", "Y3 = r (V-X3)-2 Y1 J", "Z3 = 2 Z1 H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1Z1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/addition/madd-2004-hmv",
		Tag:            "madd-2004-hmv",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "addition",
		Source:         "2004 Hankerson--Menezes--Vanstone, page 91",
		AppliesTo:      "",
		Assume:         []string{"Z2=1"},
		Compute:        []string{"T1 = Z1^2", "T2 = T1 Z1", "T1 = T1 X2", "T2 = T2 Y2", "T1 = T1-X1", "T2 = T2-Y1", "Z3 = Z1 T1", "T3 = T1^2", "T4 = T3 T1", "T3 = T3 X1", "T1 = 2 T3", "X3 = T2^2", "X3 = X3-T1", "X3 = X3-T4", "T3 = T3-X3", "T3 = T3 T2", "T4 = T4 Y1", "Y3 = T3-T4"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Pow{X: ast.Variable("T1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("T2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T4"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T4")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/addition/madd-2007-bl",
		Tag:            "madd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z2=1"},
		Compute:        []string{"Z1Z1 = Z1^2", "U2 = X2 Z1Z1", "S2 = Y2 Z1 Z1Z1", "H = U2-X1", "HH = H^2", "I = 4 HH", "J = H I", "r = 2 (S2-Y1)", "V = X1 I", "X3 = r^2-J-2 V", "Y3 = r (V-X3)-2 Y1 J", "Z3 = (Z1+H)^2-Z1Z1-HH"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1Z1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("HH"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("t9"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("HH")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/addition/madd-2008-g",
		Tag:            "madd-2008-g",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "addition",
		Source:         "2008 Giessmann",
		AppliesTo:      "",
		Assume:         []string{"Z2=1"},
		Compute:        []string{"T1 = Z1^2", "T2 = T1 Z1", "T1 = T1 X2", "T2 = T2 Y2", "T1 = X1-T1", "T2 = T2-Y1", "Z3 = Z1 T1", "T4 = T1^2", "T1 = T1 T4", "T4 = T4 X1", "X3 = T2^2", "X3 = X3+T1", "Y3 = T1 Y1", "T1 = 2 T4", "X3 = X3-T1", "T4 = X3-T4", "T4 = T4 T2", "Y3 = T4-Y3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Pow{X: ast.Variable("T1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T4"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("T2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T4"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("T4"), Y: ast.Variable("Y3")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/addition/mmadd-2007-bl",
		Tag:            "mmadd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1=1", "Z2=1"},
		Compute:        []string{"H = X2-X1", "HH = H^2", "I = 4 HH", "J = H I", "r = 2 (Y2-Y1)", "V = X1 I", "X3 = r^2-J-2 V", "Y3 = r (V-X3)-2 Y1 J", "Z3 = 2 H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("HH"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/addition/zadd-2007-m",
		Tag:            "zadd-2007-m",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "addition",
		Source:         "2007 Meloni \"New point addition formulae for ECC applications\", page 192",
		AppliesTo:      "",
		Assume:         []string{"Z1 = Z2"},
		Compute:        []string{"A = (X2-X1)^2", "B = X1 A", "C = X2 A", "D = (Y2-Y1)^2", "X3 = D-B-C", "Y3 = (Y2-Y1)(B-X3)-Y1(C-B)", "Z3 = Z1(X2-X1)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/doubling/dbl-1986-cc",
		Tag:            "dbl-1986-cc",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "doubling",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", page 414, formula (4.2ii)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"S = 4 X1 Y1^2", "M = 3 X1^2+a Z1^4", "T = M^2-2 S", "X3 = T", "Y3 = M(S-T)-8 Y1^4", "Z3 = 2 Y1 Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/doubling/dbl-1986-cc-2",
		Tag:            "dbl-1986-cc-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "doubling",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", page 414, formula (4.2ii) modified as indicated after \"It is even smarter ...\"",
		AppliesTo:      "jacobian-3",
		Assume:         []string(nil),
		Compute:        []string{"S = 4 X1 Y1^2", "M = 3(X1-Z1^2)(X1+Z1^2)", "T = M^2-2 S", "X3 = T", "Y3 = M(S-T)-8 Y1^4", "Z3 = 2 Y1 Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t13")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/doubling/dbl-1998-cmo",
		Tag:            "dbl-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "doubling",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (6)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"S = 4 X1 Y1^2", "M = 3 X1^2+a Z1^4", "T = M^2-2 S", "X3 = T", "Y3 = M (S-T)-8 Y1^4", "Z3 = 2 Y1 Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/doubling/dbl-1998-cmo-2",
		Tag:            "dbl-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "doubling",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (6), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "ZZ = Z1^2", "S = 4 X1 YY", "M = 3 XX+a ZZ^2", "T = M^2-2 S", "X3 = T", "Y3 = M (S-T)-8 YY^2", "Z3 = 2 Y1 Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/doubling/dbl-1998-hnm",
		Tag:            "dbl-1998-hnm",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "doubling",
		Source:         "1998 Hasegawa--Nakajima--Matsui, page 188",
		AppliesTo:      "",
		Assume:         []string{"half*2=1"},
		Compute:        []string{"R1 = X1", "R2 = Y1", "R3 = Z1", "R4 = R3^2", "R3 = R2 R3", "R3 = 2 R3", "R4 = R4^2", "R4 = a R4", "R5 = R1^2", "R4 = R4+R5", "R5 = 2 R5", "R4 = R4+R5", "R2 = 2 R2", "R2 = R2^2", "R5 = R2^2", "R5 = half R5", "R2 = R2 R1", "R1 = R4^2", "R1 = R1-R2", "R1 = R1-R2", "R2 = R2-R1", "R2 = R2 R4", "R2 = R2-R5", "X3 = R1", "Y3 = R2", "Z3 = R3"},
		Parameters:     []string{"half"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Pow{X: ast.Variable("R4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Add{X: ast.Variable("R4"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Add{X: ast.Variable("R4"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Mul{X: ast.Variable("half"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("R1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("R2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("R3")}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/doubling/dbl-1998-hnm-2",
		Tag:            "dbl-1998-hnm-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "doubling",
		Source:         "1998 Hasegawa--Nakajima--Matsui, page 188",
		AppliesTo:      "jacobian-3",
		Assume:         []string{"2 half=1"},
		Compute:        []string{"R1 = X1", "R2 = Y1", "R3 = Z1", "R4 = R3^2", "R3 = R2 R3", "R3 = 2 R3", "R5 = R1-R4", "R4 = R1+R4", "R5 = R4 R5", "R4 = 2 R5", "R4 = R4+R5", "R2 = 2 R2", "R2 = R2^2", "R5 = R2^2", "R5 = half R5", "R2 = R2 R1", "R1 = R4^2", "R1 = R1-R2", "R1 = R1-R2", "R2 = R2-R1", "R2 = R2 R4", "R2 = R2-R5", "X3 = R1", "Y3 = R2", "Z3 = R3"},
		Parameters:     []string{"half"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Mul{X: ast.Variable("R4"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Add{X: ast.Variable("R4"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Mul{X: ast.Variable("half"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("R1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("R2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("R3")}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/doubling/dbl-2001-b",
		Tag:            "dbl-2001-b",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "doubling",
		Source:         "2001 Bernstein \"A software implementation of NIST P-224\"",
		AppliesTo:      "jacobian-3",
		Assume:         []string(nil),
		Compute:        []string{"delta = Z1^2", "gamma = Y1^2", "beta = X1 gamma", "alpha = 3 (X1-delta) (X1+delta)", "X3 = alpha^2-8 beta", "Z3 = (Y1+Z1)^2-gamma-delta", "Y3 = alpha (4 beta-X3)-8 gamma^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("delta"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("gamma"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("beta"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("gamma")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("delta")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("delta")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("alpha"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("alpha"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("beta")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("gamma")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("delta")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("beta")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("gamma"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("alpha"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/doubling/dbl-2004-hmv",
		Tag:            "dbl-2004-hmv",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "doubling",
		Source:         "2004 Hankerson--Menezes--Vanstone, page 91",
		AppliesTo:      "jacobian-3",
		Assume:         []string{"2 half = 1"},
		Compute:        []string{"T1 = Z1^2", "T2 = X1-T1", "T1 = X1+T1", "T2 = T2 T1", "T2 = 3 T2", "Y3 = 2 Y1", "Z3 = Y3 Z1", "Y3 = Y3^2", "T3 = Y3 X1", "Y3 = Y3^2", "Y3 = half Y3", "X3 = T2^2", "T1 = 2 T3", "X3 = X3-T1", "T1 = T3-X3", "T1 = T1 T2", "Y3 = T1-Y3"},
		Parameters:     []string{"half"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Y3"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("Y3"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Pow{X: ast.Variable("Y3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("half"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("T2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("Y3")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/doubling/dbl-2007-bl",
		Tag:            "dbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "YYYY = YY^2", "ZZ = Z1^2", "S = 2 ((X1+YY)^2-XX-YYYY)", "M = 3 XX+a ZZ^2", "T = M^2-2 S", "X3 = T", "Y3 = M (S-T)-8 YYYY", "Z3 = (Y1+Z1)^2-YY-ZZ"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YYYY"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("ZZ")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/doubling/mdbl-2007-bl",
		Tag:            "mdbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1=1"},
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "YYYY = YY^2", "S = 2((X1+YY)^2-XX-YYYY)", "M = 3 XX+a", "T = M^2-2 S", "X3 = T", "Y3 = M(S-T)-8 YYYY", "Z3 = 2 Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YYYY"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("a")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "AA = A^2", "X3 = X1*AA", "Y3 = Y1*AA*A", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("AA"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/tripling/tpl-2005-dim",
		Tag:            "tpl-2005-dim",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "tripling",
		Source:         "2005 Dimitrov--Imbert--Mishra",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"M = 3 X1^2+a Z1^4", "E = 12 X1 Y1^2-M^2", "T = 8 Y1^4", "X3 = 8 Y1^2 (T-M E)+X1 E^2", "Y3 = Y1 (4 (M E-T) (2 T-M E)-E^3)", "Z3 = Z1 E"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(12), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Sub{X: ast.Variable("t18"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("t19"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Sub{X: ast.Variable("t23"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("E")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/tripling/tpl-2005-dim-2",
		Tag:            "tpl-2005-dim-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "tripling",
		Source:         "2005 Dimitrov--Imbert--Mishra, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"ZZ = Z1^2", "YY = Y1^2", "C = 2 YY", "M = 3 X1^2+a ZZ^2", "E = 6 X1 C-M^2", "EE = E^2", "T = 2 C^2", "U = M E-T", "U4 = 4 U", "X3 = X1 EE-C U4", "Y3 = Y1 (U4 (T-U)-E EE)", "Z3 = Z1 E"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(6), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("EE"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("U4"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("U4")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("U4"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("E")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/tripling/tpl-2007-bl",
		Tag:            "tpl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "tripling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "ZZ = Z1^2", "YYYY = YY^2", "M = 3 XX+a ZZ^2", "MM = M^2", "E = 6 ((X1+YY)^2-XX-YYYY)-MM", "EE = E^2", "T = 16 YYYY", "U = (M+E)^2-MM-EE-T", "X3 = 4 (X1 EE-4 YY U)", "Y3 = 8 Y1 (U (T-U)-E EE)", "Z3 = (Z1+E)^2-ZZ-EE"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YYYY"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("MM"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(6), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("MM")}}, ast.Assignment{LHS: ast.Variable("EE"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Constant(16), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("MM")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Sub{X: ast.Variable("t18"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("t21"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Sub{X: ast.Variable("t22"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t23"), Y: ast.Variable("EE")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian-3/tripling/tpl-2007-bl-2",
		Tag:            "tpl-2007-bl-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[38],
		Operation:      "tripling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "jacobian-3",
		Assume:         []string(nil),
		Compute:        []string{"YY = Y1^2", "ZZ = Z1^2", "YYYY = YY^2", "M = 3 (X1-ZZ) (X1+ZZ)", "MM = M^2", "E = 12 X1 YY-MM", "EE = E^2", "T = 16 YYYY", "U = (M+E)^2-MM-EE-T", "X3 = 4 (X1 EE-4 YY U)", "Y3 = 8 Y1 (U (T-U)-E EE)", "Z3 = (Z1+E)^2-ZZ-EE"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YYYY"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("MM"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(12), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("MM")}}, ast.Assignment{LHS: ast.Variable("EE"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Constant(16), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("MM")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Pow{X: ast.Variable("t18"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Sub{X: ast.Variable("t19"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t20"), Y: ast.Variable("EE")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/addition/add-1986-cc",
		Tag:            "add-1986-cc",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "addition",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", page 414, formula (4.3i)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2^2", "U2 = X2 Z1^2", "S1 = Y1 Z2^3", "S2 = Y2 Z1^3", "P = U2-U1", "R = S2-S1", "X3 = R^2-(U1+U2) P^2", "Y3 = R (U1 P^2-X3)-S1 P^3", "Z3 = Z1 Z2 P"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t14")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/addition/add-1986-cc-2",
		Tag:            "add-1986-cc-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "addition",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", page 414, formula (4.3i')",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2^2", "U2 = X2 Z1^2", "S1 = Y1 Z2^3", "S2 = Y2 Z1^3", "P = U2-U1", "R = S2-S1", "X3 = R^2-(U1+U2) P^2", "Y3 = (R (-2 R^2+3 P^2 (U1+U2))-P^3 (S1+S2))/2", "Z3 = Z1 Z2 P"},
		Parameters:     []string(nil),
		Program:        (*ast.Program)(nil),
	},
	{
		ID:             "g1p/shortw/jacobian/addition/add-1998-cmo",
		Tag:            "add-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (5)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2^2", "U2 = X2 Z1^2", "S1 = Y1 Z2^3", "S2 = Y2 Z1^3", "H = U2-U1", "r = S2-S1", "X3 = r^2-H^3-2 U1 H^2", "Y3 = r (U1 H^2-X3)-S1 H^3", "Z3 = Z1 Z2 H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t16")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/addition/add-1998-cmo-2",
		Tag:            "add-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (5), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Z1Z1 = Z1^2", "Z2Z2 = Z2^2", "U1 = X1 Z2Z2", "U2 = X2 Z1Z1", "S1 = Y1 Z2 Z2Z2", "S2 = Y2 Z1 Z1Z1", "H = U2-U1", "HH = H^2", "HHH = H HH", "r = S2-S1", "V = U1 HH", "X3 = r^2-HHH-2 V", "Y3 = r (V-X3)-S1 HHH", "Z3 = Z1 Z2 H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1Z1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z2Z2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("HH"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("HHH"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("HHH")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("HHH")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/addition/add-1998-hnm",
		Tag:            "add-1998-hnm",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "addition",
		Source:         "1998 Hasegawa--Nakajima--Matsui, page 188",
		AppliesTo:      "",
		Assume:         []string{"half 2=1"},
		Compute:        []string{"R1 = X1", "R2 = Y1", "R3 = Z1", "R4 = X2", "R5 = Y2", "R6 = Z2", "R7 = R6^2", "R1 = R1 R7", "R7 = R6 R7", "R2 = R2 R7", "R7 = R3^2", "R8 = R4 R7", "R7 = R3 R7", "R7 = R5 R7", "R2 = R2-R7", "R7 = 2 R7", "R7 = R2+R7", "R1 = R1-R8", "R8 = 2 R8", "R8 = R1+R8", "R3 = R3 R6", "R3 = R3 R1", "R7 = R7 R1", "R1 = R1^2", "R8 = R8 R1", "R7 = R7 R1", "R1 = R2^2", "R1 = R1-R8", "R8 = R8-R1", "R8 = R8-R1", "R8 = R8 R2", "R2 = R8-R7", "R2 = half R2", "X3 = R1", "Y3 = R2", "Z3 = R3"},
		Parameters:     []string{"half"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Variable("X2")}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Variable("Y2")}, ast.Assignment{LHS: ast.Variable("R6"), RHS: ast.Variable("Z2")}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Pow{X: ast.Variable("R6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Mul{X: ast.Variable("R1"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R6"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Variable("R4"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R5"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Add{X: ast.Variable("R2"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Add{X: ast.Variable("R1"), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R6")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R3"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R7"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Variable("R8"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R7"), RHS: ast.Mul{X: ast.Variable("R7"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R8")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Sub{X: ast.Variable("R8"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Sub{X: ast.Variable("R8"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R8"), RHS: ast.Mul{X: ast.Variable("R8"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R8"), Y: ast.Variable("R7")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("half"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("R1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("R2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("R3")}}},
	},
	{
		ID:             "g1p/shortw/jacobian/addition/add-2001-b",
		Tag:            "add-2001-b",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "addition",
		Source:         "2001 Bernstein http://cr.yp.to/nistp224.html opt-idea53.c ecadd",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"ZZ1 = Z1^2", "ZZZ1 = Z1 ZZ1", "ZZ2 = Z2^2", "ZZZ2 = Z2 ZZ2", "A = X1 ZZ2", "B = X2 ZZ1 -A", "c = Y1 ZZZ2", "d = Y2 ZZZ1 -c", "e = B^2", "f = B e", "g = A e", "h = Z1 Z2", "f2g = 2 g+f", "X3 = d^2-f2g", "Z3 = B h", "gx = g-X3", "Y3 = d gx-c f"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("ZZ1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZZ1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZZ2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("c"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("ZZZ2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZZ1")}}, ast.Assignment{LHS: ast.Variable("d"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("c")}}, ast.Assignment{LHS: ast.Variable("e"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("f"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("e")}}, ast.Assignment{LHS: ast.Variable("g"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("e")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("g")}}, ast.Assignment{LHS: ast.Variable("f2g"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("f")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("d"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("f2g")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("gx"), RHS: ast.Sub{X: ast.Variable("g"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("c"), Y: ast.Variable("f")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("gx")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/addition/add-2007-bl",
		Tag:            "add-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange; note that the improvement from 12M+4S to 11M+5S was already mentioned in 2001 Bernstein http://cr.yp.to/talks.html#2001.10.29",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Z1Z1 = Z1^2", "Z2Z2 = Z2^2", "U1 = X1 Z2Z2", "U2 = X2 Z1Z1", "S1 = Y1 Z2 Z2Z2", "S2 = Y2 Z1 Z1Z1", "H = U2-U1", "I = (2 H)^2", "J = H I", "r = 2 (S2-S1)", "V = U1 I", "X3 = r^2-J-2 V", "Y3 = r (V-X3)-2 S1 J", "Z3 = ((Z1+Z2)^2-Z1Z1-Z2Z2) H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1Z1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z2Z2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("t11"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("Z2Z2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t14"), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/addition/madd",
		Tag:            "madd",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "addition",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string{"Z2=1"},
		Compute:        []string{"Z1Z1 = Z1^2", "U2 = X2 Z1Z1", "S2 = Y2 Z1 Z1Z1", "H = U2-X1", "I = (2 H)^2", "J = H I", "r = 2 (S2-Y1)", "V = X1 I", "X3 = r^2-J-2 V", "Y3 = r (V-X3)-2 Y1 J", "Z3 = 2 Z1 H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1Z1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/addition/madd-2004-hmv",
		Tag:            "madd-2004-hmv",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "addition",
		Source:         "2004 Hankerson--Menezes--Vanstone, page 91",
		AppliesTo:      "",
		Assume:         []string{"Z2=1"},
		Compute:        []string{"T1 = Z1^2", "T2 = T1 Z1", "T1 = T1 X2", "T2 = T2 Y2", "T1 = T1-X1", "T2 = T2-Y1", "Z3 = Z1 T1", "T3 = T1^2", "T4 = T3 T1", "T3 = T3 X1", "T1 = 2 T3", "X3 = T2^2", "X3 = X3-T1", "X3 = X3-T4", "T3 = T3-X3", "T3 = T3 T2", "T4 = T4 Y1", "Y3 = T3-T4"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Pow{X: ast.Variable("T1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("T2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("T3"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T4"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T4")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/addition/madd-2007-bl",
		Tag:            "madd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z2=1"},
		Compute:        []string{"Z1Z1 = Z1^2", "U2 = X2 Z1Z1", "S2 = Y2 Z1 Z1Z1", "H = U2-X1", "HH = H^2", "I = 4 HH", "J = H I", "r = 2 (S2-Y1)", "V = X1 I", "X3 = r^2-J-2 V", "Y3 = r (V-X3)-2 Y1 J", "Z3 = (Z1+H)^2-Z1Z1-HH"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Z1Z1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("HH"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("t9"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("Z1Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("HH")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/addition/madd-2008-g",
		Tag:            "madd-2008-g",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "addition",
		Source:         "2008 Giessmann",
		AppliesTo:      "",
		Assume:         []string{"Z2=1"},
		Compute:        []string{"T1 = Z1^2", "T2 = T1 Z1", "T1 = T1 X2", "T2 = T2 Y2", "T1 = X1-T1", "T2 = T2-Y1", "Z3 = Z1 T1", "T4 = T1^2", "T1 = T1 T4", "T4 = T4 X1", "X3 = T2^2", "X3 = X3+T1", "Y3 = T1 Y1", "T1 = 2 T4", "X3 = X3-T1", "T4 = X3-T4", "T4 = T4 T2", "Y3 = T4-Y3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("T2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Sub{X: ast.Variable("T2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Pow{X: ast.Variable("T1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T4"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("T2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("T4"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("T4"), Y: ast.Variable("Y3")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/addition/mmadd-2007-bl",
		Tag:            "mmadd-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1=1", "Z2=1"},
		Compute:        []string{"H = X2-X1", "HH = H^2", "I = 4 HH", "J = H I", "r = 2 (Y2-Y1)", "V = X1 I", "X3 = r^2-J-2 V", "Y3 = r (V-X3)-2 Y1 J", "Z3 = 2 H"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("HH"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/addition/zadd-2007-m",
		Tag:            "zadd-2007-m",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "addition",
		Source:         "2007 Meloni \"New point addition formulae for ECC applications\", page 192",
		AppliesTo:      "",
		Assume:         []string{"Z1 = Z2"},
		Compute:        []string{"A = (X2-X1)^2", "B = X1 A", "C = X2 A", "D = (Y2-Y1)^2", "X3 = D-B-C", "Y3 = (Y2-Y1)(B-X3)-Y1(C-B)", "Z3 = Z1(X2-X1)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/doubling/dbl-1986-cc",
		Tag:            "dbl-1986-cc",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "doubling",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", page 414, formula (4.2ii)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"S = 4 X1 Y1^2", "M = 3 X1^2+a Z1^4", "T = M^2-2 S", "X3 = T", "Y3 = M(S-T)-8 Y1^4", "Z3 = 2 Y1 Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/doubling/dbl-1998-cmo",
		Tag:            "dbl-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "doubling",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (6)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"S = 4 X1 Y1^2", "M = 3 X1^2+a Z1^4", "T = M^2-2 S", "X3 = T", "Y3 = M (S-T)-8 Y1^4", "Z3 = 2 Y1 Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/doubling/dbl-1998-cmo-2",
		Tag:            "dbl-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "doubling",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (6), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "ZZ = Z1^2", "S = 4 X1 YY", "M = 3 XX+a ZZ^2", "T = M^2-2 S", "X3 = T", "Y3 = M (S-T)-8 YY^2", "Z3 = 2 Y1 Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/doubling/dbl-1998-hnm",
		Tag:            "dbl-1998-hnm",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "doubling",
		Source:         "1998 Hasegawa--Nakajima--Matsui, page 188",
		AppliesTo:      "",
		Assume:         []string{"half*2=1"},
		Compute:        []string{"R1 = X1", "R2 = Y1", "R3 = Z1", "R4 = R3^2", "R3 = R2 R3", "R3 = 2 R3", "R4 = R4^2", "R4 = a R4", "R5 = R1^2", "R4 = R4+R5", "R5 = 2 R5", "R4 = R4+R5", "R2 = 2 R2", "R2 = R2^2", "R5 = R2^2", "R5 = half R5", "R2 = R2 R1", "R1 = R4^2", "R1 = R1-R2", "R1 = R1-R2", "R2 = R2-R1", "R2 = R2 R4", "R2 = R2-R5", "X3 = R1", "Y3 = R2", "Z3 = R3"},
		Parameters:     []string{"half"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Variable("X1")}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Variable("Y1")}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Pow{X: ast.Variable("R3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R3")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Pow{X: ast.Variable("R4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Pow{X: ast.Variable("R1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Add{X: ast.Variable("R4"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R4"), RHS: ast.Add{X: ast.Variable("R4"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Pow{X: ast.Variable("R2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R5"), RHS: ast.Mul{X: ast.Variable("half"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Pow{X: ast.Variable("R4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R1"), RHS: ast.Sub{X: ast.Variable("R1"), Y: ast.Variable("R2")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R1")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Mul{X: ast.Variable("R2"), Y: ast.Variable("R4")}}, ast.Assignment{LHS: ast.Variable("R2"), RHS: ast.Sub{X: ast.Variable("R2"), Y: ast.Variable("R5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("R1")}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Variable("R2")}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("R3")}}},
	},
	{
		ID:             "g1p/shortw/jacobian/doubling/dbl-2007-bl",
		Tag:            "dbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "YYYY = YY^2", "ZZ = Z1^2", "S = 2 ((X1+YY)^2-XX-YYYY)", "M = 3 XX+a ZZ^2", "T = M^2-2 S", "X3 = T", "Y3 = M (S-T)-8 YYYY", "Z3 = (Y1+Z1)^2-YY-ZZ"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YYYY"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("ZZ")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/doubling/mdbl-2007-bl",
		Tag:            "mdbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1=1"},
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "YYYY = YY^2", "S = 2((X1+YY)^2-XX-YYYY)", "M = 3 XX+a", "T = M^2-2 S", "X3 = T", "Y3 = M(S-T)-8 YYYY", "Z3 = 2 Y1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YYYY"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("a")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Variable("T")}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "AA = A^2", "X3 = X1*AA", "Y3 = Y1*AA*A", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("AA"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/shortw/jacobian/tripling/tpl-2005-dim",
		Tag:            "tpl-2005-dim",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "tripling",
		Source:         "2005 Dimitrov--Imbert--Mishra",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"M = 3 X1^2+a Z1^4", "E = 12 X1 Y1^2-M^2", "T = 8 Y1^4", "X3 = 8 Y1^2 (T-M E)+X1 E^2", "Y3 = Y1 (4 (M E-T) (2 T-M E)-E^3)", "Z3 = Z1 E"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(12), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Sub{X: ast.Variable("t18"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Sub{X: ast.Variable("t17"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("t19"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t22")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Sub{X: ast.Variable("t23"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("E")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/tripling/tpl-2005-dim-2",
		Tag:            "tpl-2005-dim-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "tripling",
		Source:         "2005 Dimitrov--Imbert--Mishra, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"ZZ = Z1^2", "YY = Y1^2", "C = 2 YY", "M = 3 X1^2+a ZZ^2", "E = 6 X1 C-M^2", "EE = E^2", "T = 2 C^2", "U = M E-T", "U4 = 4 U", "X3 = X1 EE-C U4", "Y3 = Y1 (U4 (T-U)-E EE)", "Z3 = Z1 E"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(6), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("EE"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("U4"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("U4")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("U4"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("E")}}}},
	},
	{
		ID:             "g1p/shortw/jacobian/tripling/tpl-2007-bl",
		Tag:            "tpl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[36],
		Operation:      "tripling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "ZZ = Z1^2", "YYYY = YY^2", "M = 3 XX+a ZZ^2", "MM = M^2", "E = 6 ((X1+YY)^2-XX-YYYY)-MM", "EE = E^2", "T = 16 YYYY", "U = (M+E)^2-MM-EE-T", "X3 = 4 (X1 EE-4 YY U)", "Y3 = 8 Y1 (U (T-U)-E EE)", "Z3 = (Z1+E)^2-ZZ-EE"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YYYY"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("MM"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(6), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("MM")}}, ast.Assignment{LHS: ast.Variable("EE"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Mul{X: ast.Constant(16), Y: ast.Variable("YYYY")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("M"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("MM")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("T")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("EE")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Sub{X: ast.Variable("t18"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Pow{X: ast.Variable("t21"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Sub{X: ast.Variable("t22"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t23"), Y: ast.Variable("EE")}}}},
	},
	{
		ID:             "g1p/shortw/modified/addition/add-1998-cmo-2",
		Tag:            "add-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[39],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (9), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"ZZ1 = Z1^2", "ZZ2 = Z2^2", "U1 = X1 ZZ2", "U2 = X2 ZZ1", "S1 = Y1 Z2 ZZ2", "S2 = Y2 Z1 ZZ1", "H = U2-U1", "HH = H^2", "HHH = H HH", "r = S2-S1", "V = U1 HH", "X3 = r^2-HHH-2 V", "Y3 = r(V-X3)-S1 HHH", "Z3 = Z1 Z2 H", "ZZ3 = Z3^2", "T3 = a ZZ3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("ZZ1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("HH"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("HHH"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("HHH")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("HHH")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("ZZ3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g1p/shortw/modified/addition/add-2009-bl",
		Tag:            "add-2009-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[39],
		Operation:      "addition",
		Source:         "2009.04.01 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"ZZ1 = Z1^2", "ZZ2 = Z2^2", "U1 = X1 ZZ2", "U2 = X2 ZZ1", "S1 = Y1 Z2 ZZ2", "S2 = Y2 Z1 ZZ1", "H = U2-U1", "I = (2 H)^2", "J = H I", "r = 2(S2-S1)", "V = U1 I", "X3 = r^2-J-2 V", "Y3 = r(V-X3)-2 S1 J", "Z3 = ((Z1+Z2)^2-ZZ1-ZZ2) H", "ZZ3 = Z3^2", "T3 = a ZZ3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("ZZ1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ2"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("t11"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t14"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("ZZ3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/shortw/modified/addition/madd-2009-bl",
		Tag:            "madd-2009-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[39],
		Operation:      "addition",
		Source:         "2009.04.27 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"ZZ1 = Z1^2", "H = X2 ZZ1-X1", "HH = H^2", "I = 4 HH", "J = H I", "r = 2(Y2 Z1 ZZ1-Y1)", "V = X1 I", "X3 = r^2-J-2 V", "Y3 = r(V-X3)-2 Y1 J", "Z3 = (Z1+H)^2 - ZZ1 - HH", "ZZ3 = Z3^2", "T3 = a ZZ3^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("ZZ1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("HH"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Pow{X: ast.Variable("t11"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("ZZ3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t14")}}}},
	},
	{
		ID:             "g1p/shortw/modified/addition/mmadd-2009-bl",
		Tag:            "mmadd-2009-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[39],
		Operation:      "addition",
		Source:         "2009.04.27 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"H = X2-X1", "HH = H^2", "HHHH = HH^2", "Z3 = 2 H", "ZZ3 = 4 HH", "J = 2 ((H+HH)^2-HH-HHHH)", "r = 2(Y2-Y1)", "V = X1 ZZ3", "X3 = r^2-J-2 V", "Y3 = r(V-X3)-2 Y1 J", "T3 = 16 a HHHH"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("HH"), RHS: ast.Pow{X: ast.Variable("H"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("HHHH"), RHS: ast.Pow{X: ast.Variable("HH"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("H"), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("HH")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("HHHH")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("r"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("ZZ3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("r"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("r"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("HHHH")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Constant(16), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/shortw/modified/doubling/dbl-1998-cmo-2",
		Tag:            "dbl-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[39],
		Operation:      "doubling",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (10), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "YY = Y1^2", "U = 8 YY^2", "S = 4 X1 YY", "M = 3 XX + T1", "X3 = M^2 - 2 S", "Y3 = M(S-X3)-U", "Z3 = 2 Y1 Z1", "T3 = 2 U T1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("YY"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("YY")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/shortw/modified/doubling/dbl-2009-bl",
		Tag:            "dbl-2009-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[39],
		Operation:      "doubling",
		Source:         "2009.04.01 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "A = 2 Y1^2", "AA = A^2", "U = 2 AA", "S = (X1+A)^2-XX-AA", "M = 3 XX + T1", "X3 = M^2 - 2 S", "Y3 = M(S-X3)-U", "Z3 = 2 Y1 Z1", "T3 = 2 U T1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/shortw/modified/doubling/mdbl-2009-bl",
		Tag:            "mdbl-2009-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[39],
		Operation:      "doubling",
		Source:         "2009.04.27 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"XX = X1^2", "A = 2 Y1^2", "AA = A^2", "U = 2 AA", "S = (X1+A)^2-XX-AA", "M = 3 XX + T1", "X3 = M^2 - 2 S", "Y3 = M(S-X3)-U", "Z3 = 2 Y1", "T3 = 2 U T1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g1p/shortw/projective-1/addition/add-1986-cc",
		Tag:            "add-1986-cc",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[41],
		Operation:      "addition",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", page 415, formula (4.4i)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2", "U2 = X2 Z1", "S1 = Y1 Z2", "S2 = Y2 Z1", "W = Z1 Z2", "P = U2-U1", "R = S2-S1", "X3 = P(-(U1+U2)P^2+W R^2)", "Y3 = (R(-2 W R^2+3(U1+U2)P^2)-P^3(S1+S2))/2", "Z3 = W P^3"},
		Parameters:     []string(nil),
		Program:        (*ast.Program)(nil),
	},
	{
		ID:             "g1p/shortw/projective-1/addition/add-1998-cmo",
		Tag:            "add-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[41],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (3)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"u = Y2 Z1-Y1 Z2", "v = X2 Z1-X1 Z2", "A = u^2 Z1 Z2-v^3-2 v^2 X1 Z2", "X3 = v A", "Y3 = u(v^2 X1 Z2-A)-v^3 Y1 Z2", "Z3 = v^3 Z1 Z2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("u"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("v"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("u"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("t17"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("u"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t20"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t21"), Y: ast.Variable("t22")}}}},
	},
	{
		ID:             "g1p/shortw/projective-1/addition/add-1998-cmo-2",
		Tag:            "add-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[41],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (3), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Y1Z2 = Y1 Z2", "X1Z2 = X1 Z2", "Z1Z2 = Z1 Z2", "u = Y2 Z1-Y1Z2", "uu = u^2", "v = X2 Z1-X1Z2", "vv = v^2", "vvv = v vv", "R = vv X1Z2", "A = uu Z1Z2-vvv-2 R", "X3 = v A", "Y3 = u(R-A)-vvv Y1Z2", "Z3 = vvv Z1Z2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Y1Z2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("X1Z2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Z1Z2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("u"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("Y1Z2")}}, ast.Assignment{LHS: ast.Variable("uu"), RHS: ast.Pow{X: ast.Variable("u"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("v"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("X1Z2")}}, ast.Assignment{LHS: ast.Variable("vv"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("vvv"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("vv")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("vv"), Y: ast.Variable("X1Z2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("uu"), Y: ast.Variable("Z1Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("vvv")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Y1Z2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("u"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Z1Z2")}}}},
	},
	{
		ID:             "g1p/shortw/projective-1/addition/add-2002-bj",
		Tag:            "add-2002-bj",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[41],
		Operation:      "addition",
		Source:         "2002 Brier--Joye \"Weierstrass elliptic curves and side-channel attacks\", page 339",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2", "U2 = X2 Z1", "S1 = Y1 Z2", "S2 = Y2 Z1", "ZZ = Z1 Z2", "T = U1+U2", "M = S1+S2", "R = T^2-U1 U2+a ZZ^2", "F = ZZ M", "L = M F", "G = T L", "W = R^2-G", "X3 = 2 F W", "Y3 = R(G-2 W)-L^2", "Z3 = 2 F F^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("S1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("T"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("ZZ"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("T"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("L"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/shortw/projective-1/addition/add-2002-bj-2",
		Tag:            "add-2002-bj-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[41],
		Operation:      "addition",
		Source:         "2002 Brier--Joye \"Weierstrass elliptic curves and side-channel attacks\", page 340",
		AppliesTo:      "projective-1",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2", "U2 = X2 Z1", "S1 = Y1 Z2", "S2 = Y2 Z1", "ZZ = Z1 Z2", "T = U1+U2", "M = S1+S2", "R = (T-ZZ)(T+ZZ)-U1 U2", "F = ZZ M", "L = M F", "G = T L", "W = R^2-G", "X3 = 2 F W", "Y3 = R(G-2 W)-L^2", "Z3 = 2 F F^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("S1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("T"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("ZZ"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("T"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("L"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t11")}}}},
	},
	{
		ID:             "g1p/shortw/projective-1/addition/add-2007-bl",
		Tag:            "add-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[41],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2", "U2 = X2 Z1", "S1 = Y1 Z2", "S2 = Y2 Z1", "ZZ = Z1 Z2", "T = U1+U2", "TT = T^2", "M = S1+S2", "R = TT-U1 U2+a ZZ^2", "F = ZZ M", "L = M F", "LL = L^2", "G = (T+L)^2-TT-LL", "W = 2 R^2-G", "X3 = 2 F W", "Y3 = R(G-2 W)-2 LL", "Z3 = 4 F F^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("TT"), RHS: ast.Pow{X: ast.Variable("T"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("S1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("TT"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("ZZ"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("LL"), RHS: ast.Pow{X: ast.Variable("L"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("TT")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("LL")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("LL")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/shortw/projective-1/addition/madd-1998-cmo",
		Tag:            "madd-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[41],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (3), plus common-subexpression elimination, plus Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"u = Y2 Z1-Y1", "uu = u^2", "v = X2 Z1-X1", "vv = v^2", "vvv = v vv", "R = vv X1", "A = uu Z1-vvv-2 R", "X3 = v A", "Y3 = u(R-A)-vvv Y1", "Z3 = vvv Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("u"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("uu"), RHS: ast.Pow{X: ast.Variable("u"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("v"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("vv"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("vvv"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("vv")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("vv"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("uu"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("vvv")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("u"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g1p/shortw/projective-1/addition/mmadd-1998-cmo",
		Tag:            "mmadd-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[41],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", plus Z1=1, plus Z2=1, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"u = Y2-Y1", "uu = u^2", "v = X2-X1", "vv = v^2", "vvv = v vv", "R = vv X1", "A = uu-vvv-2 R", "X3 = v A", "Y3 = u(R-A)-vvv Y1", "Z3 = vvv"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("u"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("uu"), RHS: ast.Pow{X: ast.Variable("u"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("v"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("vv"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("vvv"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("vv")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("vv"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("uu"), Y: ast.Variable("vvv")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("u"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("vvv")}}},
	},
	{
		ID:             "g1p/shortw/projective-1/doubling/dbl-1998-cmo",
		Tag:            "dbl-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[41],
		Operation:      "doubling",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (4)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"w = a Z1^2+3 X1^2", "s = Y1 Z1", "B = X1 Y1 s", "h = w^2-8 B", "X3 = 2 h s", "Y3 = w(4 B-h)-8 Y1^2 s^2", "Z3 = 8 s^3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("w"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("s"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("w"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("h"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("s"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("w"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("s"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/shortw/projective-1/doubling/dbl-1998-cmo-2",
		Tag:            "dbl-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[41],
		Operation:      "doubling",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (4), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"w = a Z1^2+3 X1^2", "s = Y1 Z1", "ss = s^2", "sss = s ss", "R = Y1 s", "B = X1 R", "h = w^2-8 B", "X3 = 2 h s", "Y3 = w(4 B-h)-8 R^2", "Z3 = 8 sss"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("w"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("s"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("ss"), RHS: ast.Pow{X: ast.Variable("s"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("sss"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("ss")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("w"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("h"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("w"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("sss")}}}},
	},
	{
		ID:             "g1p/shortw/projective-1/doubling/dbl-2007-bl",
		Tag:            "dbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[41],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "ZZ = Z1^2", "w = a ZZ+3 XX", "s = 2 Y1 Z1", "ss = s^2", "sss = s ss", "R = Y1 s", "RR = R^2", "B = (X1+R)^2-XX-RR", "h = w^2-2 B", "X3 = h s", "Y3 = w(B-h)-2 RR", "Z3 = sss"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("w"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("s"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("ss"), RHS: ast.Pow{X: ast.Variable("s"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("sss"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("ss")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("RR"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("w"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("h"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("w"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("sss")}}},
	},
	{
		ID:             "g1p/shortw/projective-1/doubling/mdbl-2007-bl",
		Tag:            "mdbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[41],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"XX = X1^2", "w = a+3 XX", "Y1Y1 = Y1^2", "R = 2 Y1Y1", "sss = 4 Y1 R", "RR = R^2", "B = (X1+R)^2-XX-RR", "h = w^2-2 B", "X3 = 2 h Y1", "Y3 = w(B-h)-2 RR", "Z3 = sss"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("w"), RHS: ast.Add{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Y1Y1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("sss"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("RR"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("w"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("h"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("w"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("sss")}}},
	},
	{
		ID:             "g1p/shortw/projective-1/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[41],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = A X1", "Y3 = A Y1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/shortw/projective-3/addition/add-1986-cc",
		Tag:            "add-1986-cc",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "addition",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", page 415, formula (4.4i)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2", "U2 = X2 Z1", "S1 = Y1 Z2", "S2 = Y2 Z1", "W = Z1 Z2", "P = U2-U1", "R = S2-S1", "X3 = P(-(U1+U2)P^2+W R^2)", "Y3 = (R(-2 W R^2+3(U1+U2)P^2)-P^3(S1+S2))/2", "Z3 = W P^3"},
		Parameters:     []string(nil),
		Program:        (*ast.Program)(nil),
	},
	{
		ID:             "g1p/shortw/projective-3/addition/add-1998-cmo",
		Tag:            "add-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (3)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"u = Y2 Z1-Y1 Z2", "v = X2 Z1-X1 Z2", "A = u^2 Z1 Z2-v^3-2 v^2 X1 Z2", "X3 = v A", "Y3 = u(v^2 X1 Z2-A)-v^3 Y1 Z2", "Z3 = v^3 Z1 Z2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("u"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("v"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("u"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("t17"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("u"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t20"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t21"), Y: ast.Variable("t22")}}}},
	},
	{
		ID:             "g1p/shortw/projective-3/addition/add-1998-cmo-2",
		Tag:            "add-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (3), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Y1Z2 = Y1 Z2", "X1Z2 = X1 Z2", "Z1Z2 = Z1 Z2", "u = Y2 Z1-Y1Z2", "uu = u^2", "v = X2 Z1-X1Z2", "vv = v^2", "vvv = v vv", "R = vv X1Z2", "A = uu Z1Z2-vvv-2 R", "X3 = v A", "Y3 = u(R-A)-vvv Y1Z2", "Z3 = vvv Z1Z2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Y1Z2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("X1Z2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Z1Z2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("u"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("Y1Z2")}}, ast.Assignment{LHS: ast.Variable("uu"), RHS: ast.Pow{X: ast.Variable("u"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("v"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("X1Z2")}}, ast.Assignment{LHS: ast.Variable("vv"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("vvv"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("vv")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("vv"), Y: ast.Variable("X1Z2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("uu"), Y: ast.Variable("Z1Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("vvv")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Y1Z2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("u"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Z1Z2")}}}},
	},
	{
		ID:             "g1p/shortw/projective-3/addition/add-2002-bj",
		Tag:            "add-2002-bj",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "addition",
		Source:         "2002 Brier--Joye \"Weierstrass elliptic curves and side-channel attacks\", page 339",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2", "U2 = X2 Z1", "S1 = Y1 Z2", "S2 = Y2 Z1", "ZZ = Z1 Z2", "T = U1+U2", "M = S1+S2", "R = T^2-U1 U2+a ZZ^2", "F = ZZ M", "L = M F", "G = T L", "W = R^2-G", "X3 = 2 F W", "Y3 = R(G-2 W)-L^2", "Z3 = 2 F F^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("S1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("T"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("ZZ"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("T"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("L"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/shortw/projective-3/addition/add-2007-bl",
		Tag:            "add-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2", "U2 = X2 Z1", "S1 = Y1 Z2", "S2 = Y2 Z1", "ZZ = Z1 Z2", "T = U1+U2", "TT = T^2", "M = S1+S2", "R = TT-U1 U2+a ZZ^2", "F = ZZ M", "L = M F", "LL = L^2", "G = (T+L)^2-TT-LL", "W = 2 R^2-G", "X3 = 2 F W", "Y3 = R(G-2 W)-2 LL", "Z3 = 4 F F^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("TT"), RHS: ast.Pow{X: ast.Variable("T"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("S1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("TT"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("ZZ"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("LL"), RHS: ast.Pow{X: ast.Variable("L"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("TT")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("LL")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("LL")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/shortw/projective-3/addition/add-2015-rcb",
		Tag:            "add-2015-rcb",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "addition",
		Source:         "2015 Renes--Costello--Batina",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string(nil),
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("Y3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("Y3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("Y3"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Y3"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("t0"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("Y3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Add{X: ast.Variable("Y3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("X3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("Z3"), Y: ast.Variable("t1")}}}},
	},
	{
		ID:             "g1p/shortw/projective-3/addition/madd-1998-cmo",
		Tag:            "madd-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (3), plus common-subexpression elimination, plus Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"u = Y2 Z1-Y1", "uu = u^2", "v = X2 Z1-X1", "vv = v^2", "vvv = v vv", "R = vv X1", "A = uu Z1-vvv-2 R", "X3 = v A", "Y3 = u(R-A)-vvv Y1", "Z3 = vvv Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("u"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("uu"), RHS: ast.Pow{X: ast.Variable("u"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("v"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("vv"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("vvv"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("vv")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("vv"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("uu"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("vvv")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("u"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g1p/shortw/projective-3/addition/mmadd-1998-cmo",
		Tag:            "mmadd-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", plus Z1=1, plus Z2=1, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"u = Y2-Y1", "uu = u^2", "v = X2-X1", "vv = v^2", "vvv = v vv", "R = vv X1", "A = uu-vvv-2 R", "X3 = v A", "Y3 = u(R-A)-vvv Y1", "Z3 = vvv"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("u"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("uu"), RHS: ast.Pow{X: ast.Variable("u"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("v"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("vv"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("vvv"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("vv")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("vv"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("uu"), Y: ast.Variable("vvv")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("u"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("vvv")}}},
	},
	{
		ID:             "g1p/shortw/projective-3/doubling/dbl-1998-cmo",
		Tag:            "dbl-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "doubling",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (4)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"w = a Z1^2+3 X1^2", "s = Y1 Z1", "B = X1 Y1 s", "h = w^2-8 B", "X3 = 2 h s", "Y3 = w(4 B-h)-8 Y1^2 s^2", "Z3 = 8 s^3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("w"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("s"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("w"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("h"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("s"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("w"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("s"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/shortw/projective-3/doubling/dbl-1998-cmo-2",
		Tag:            "dbl-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "doubling",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (4), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"w = a Z1^2+3 X1^2", "s = Y1 Z1", "ss = s^2", "sss = s ss", "R = Y1 s", "B = X1 R", "h = w^2-8 B", "X3 = 2 h s", "Y3 = w(4 B-h)-8 R^2", "Z3 = 8 sss"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("w"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("s"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("ss"), RHS: ast.Pow{X: ast.Variable("s"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("sss"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("ss")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("w"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("h"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("w"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("sss")}}}},
	},
	{
		ID:             "g1p/shortw/projective-3/doubling/dbl-2007-bl",
		Tag:            "dbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "ZZ = Z1^2", "w = a ZZ+3 XX", "s = 2 Y1 Z1", "ss = s^2", "sss = s ss", "R = Y1 s", "RR = R^2", "B = (X1+R)^2-XX-RR", "h = w^2-2 B", "X3 = h s", "Y3 = w(B-h)-2 RR", "Z3 = sss"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("w"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("s"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("ss"), RHS: ast.Pow{X: ast.Variable("s"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("sss"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("ss")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("RR"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("w"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("h"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("w"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("sss")}}},
	},
	{
		ID:             "g1p/shortw/projective-3/doubling/dbl-2007-bl-2",
		Tag:            "dbl-2007-bl-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "projective-3",
		Assume:         []string(nil),
		Compute:        []string{"w = 3(X1-Z1)(X1+Z1)", "s = 2 Y1 Z1", "ss = s^2", "sss = s ss", "R = Y1 s", "RR = R^2", "B = 2 X1 R", "h = w^2-2 B", "X3 = h s", "Y3 = w(B-h)-2 RR", "Z3 = sss"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("w"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("s"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("ss"), RHS: ast.Pow{X: ast.Variable("s"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("sss"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("ss")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("RR"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("w"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("h"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("w"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("sss")}}},
	},
	{
		ID:             "g1p/shortw/projective-3/doubling/mdbl-2007-bl",
		Tag:            "mdbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"XX = X1^2", "w = a+3 XX", "Y1Y1 = Y1^2", "R = 2 Y1Y1", "sss = 4 Y1 R", "RR = R^2", "B = (X1+R)^2-XX-RR", "h = w^2-2 B", "X3 = 2 h Y1", "Y3 = w(B-h)-2 RR", "Z3 = sss"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("w"), RHS: ast.Add{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Y1Y1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("sss"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("RR"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("w"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("h"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("w"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("sss")}}},
	},
	{
		ID:             "g1p/shortw/projective-3/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[42],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = A X1", "Y3 = A Y1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/shortw/projective/addition/add-1986-cc",
		Tag:            "add-1986-cc",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[40],
		Operation:      "addition",
		Source:         "1986 Chudnovsky--Chudnovsky \"Sequences of numbers generated by addition in formal groups and new primality and factorization tests\", page 415, formula (4.4i)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2", "U2 = X2 Z1", "S1 = Y1 Z2", "S2 = Y2 Z1", "W = Z1 Z2", "P = U2-U1", "R = S2-S1", "X3 = P(-(U1+U2)P^2+W R^2)", "Y3 = (R(-2 W R^2+3(U1+U2)P^2)-P^3(S1+S2))/2", "Z3 = W P^3"},
		Parameters:     []string(nil),
		Program:        (*ast.Program)(nil),
	},
	{
		ID:             "g1p/shortw/projective/addition/add-1998-cmo",
		Tag:            "add-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[40],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (3)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"u = Y2 Z1-Y1 Z2", "v = X2 Z1-X1 Z2", "A = u^2 Z1 Z2-v^3-2 v^2 X1 Z2", "X3 = v A", "Y3 = u(v^2 X1 Z2-A)-v^3 Y1 Z2", "Z3 = v^3 Z1 Z2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("u"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("v"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("u"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("t17"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("u"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t20"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t21"), Y: ast.Variable("t22")}}}},
	},
	{
		ID:             "g1p/shortw/projective/addition/add-1998-cmo-2",
		Tag:            "add-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[40],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (3), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"Y1Z2 = Y1 Z2", "X1Z2 = X1 Z2", "Z1Z2 = Z1 Z2", "u = Y2 Z1-Y1Z2", "uu = u^2", "v = X2 Z1-X1Z2", "vv = v^2", "vvv = v vv", "R = vv X1Z2", "A = uu Z1Z2-vvv-2 R", "X3 = v A", "Y3 = u(R-A)-vvv Y1Z2", "Z3 = vvv Z1Z2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("Y1Z2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("X1Z2"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("Z1Z2"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("u"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("Y1Z2")}}, ast.Assignment{LHS: ast.Variable("uu"), RHS: ast.Pow{X: ast.Variable("u"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("v"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("X1Z2")}}, ast.Assignment{LHS: ast.Variable("vv"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("vvv"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("vv")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("vv"), Y: ast.Variable("X1Z2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("uu"), Y: ast.Variable("Z1Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("vvv")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Y1Z2")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("u"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Z1Z2")}}}},
	},
	{
		ID:             "g1p/shortw/projective/addition/add-2002-bj",
		Tag:            "add-2002-bj",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[40],
		Operation:      "addition",
		Source:         "2002 Brier--Joye \"Weierstrass elliptic curves and side-channel attacks\", page 339",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2", "U2 = X2 Z1", "S1 = Y1 Z2", "S2 = Y2 Z1", "ZZ = Z1 Z2", "T = U1+U2", "M = S1+S2", "R = T^2-U1 U2+a ZZ^2", "F = ZZ M", "L = M F", "G = T L", "W = R^2-G", "X3 = 2 F W", "Y3 = R(G-2 W)-L^2", "Z3 = 2 F F^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("S1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("T"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("ZZ"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("T"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("L"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}}},
	},
	{
		ID:             "g1p/shortw/projective/addition/add-2007-bl",
		Tag:            "add-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[40],
		Operation:      "addition",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 Z2", "U2 = X2 Z1", "S1 = Y1 Z2", "S2 = Y2 Z1", "ZZ = Z1 Z2", "T = U1+U2", "TT = T^2", "M = S1+S2", "R = TT-U1 U2+a ZZ^2", "F = ZZ M", "L = M F", "LL = L^2", "G = (T+L)^2-TT-LL", "W = 2 R^2-G", "X3 = 2 F W", "Y3 = R(G-2 W)-2 LL", "Z3 = 4 F F^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("T"), RHS: ast.Add{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("TT"), RHS: ast.Pow{X: ast.Variable("T"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("S1"), Y: ast.Variable("S2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("U2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("TT"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("ZZ"), Y: ast.Variable("M")}}, ast.Assignment{LHS: ast.Variable("L"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("LL"), RHS: ast.Pow{X: ast.Variable("L"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("T"), Y: ast.Variable("L")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("TT")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("LL")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("LL")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/shortw/projective/addition/madd-1998-cmo",
		Tag:            "madd-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[40],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (3), plus common-subexpression elimination, plus Z2=1",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"u = Y2 Z1-Y1", "uu = u^2", "v = X2 Z1-X1", "vv = v^2", "vvv = v vv", "R = vv X1", "A = uu Z1-vvv-2 R", "X3 = v A", "Y3 = u(R-A)-vvv Y1", "Z3 = vvv Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("u"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("uu"), RHS: ast.Pow{X: ast.Variable("u"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("v"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("vv"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("vvv"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("vv")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("vv"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("uu"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("vvv")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("u"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g1p/shortw/projective/addition/mmadd-1998-cmo",
		Tag:            "mmadd-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[40],
		Operation:      "addition",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", plus Z1=1, plus Z2=1, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"u = Y2-Y1", "uu = u^2", "v = X2-X1", "vv = v^2", "vvv = v vv", "R = vv X1", "A = uu-vvv-2 R", "X3 = v A", "Y3 = u(R-A)-vvv Y1", "Z3 = vvv"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("u"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("uu"), RHS: ast.Pow{X: ast.Variable("u"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("v"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("vv"), RHS: ast.Pow{X: ast.Variable("v"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("vvv"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("vv")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("vv"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("uu"), Y: ast.Variable("vvv")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("v"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("vvv"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("u"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("vvv")}}},
	},
	{
		ID:             "g1p/shortw/projective/doubling/dbl-1998-cmo",
		Tag:            "dbl-1998-cmo",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[40],
		Operation:      "doubling",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (4)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"w = a Z1^2+3 X1^2", "s = Y1 Z1", "B = X1 Y1 s", "h = w^2-8 B", "X3 = 2 h s", "Y3 = w(4 B-h)-8 Y1^2 s^2", "Z3 = 8 s^3"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("w"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("s"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("w"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("h"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("s"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("w"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("s"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/shortw/projective/doubling/dbl-1998-cmo-2",
		Tag:            "dbl-1998-cmo-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[40],
		Operation:      "doubling",
		Source:         "1998 Cohen--Miyaji--Ono \"Efficient elliptic curve exponentiation using mixed coordinates\", formula (4), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"w = a Z1^2+3 X1^2", "s = Y1 Z1", "ss = s^2", "sss = s ss", "R = Y1 s", "B = X1 R", "h = w^2-8 B", "X3 = 2 h s", "Y3 = w(4 B-h)-8 R^2", "Z3 = 8 sss"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("w"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("s"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("ss"), RHS: ast.Pow{X: ast.Variable("s"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("sss"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("ss")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("w"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("h"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("w"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("sss")}}}},
	},
	{
		ID:             "g1p/shortw/projective/doubling/dbl-2007-bl",
		Tag:            "dbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[40],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"XX = X1^2", "ZZ = Z1^2", "w = a ZZ+3 XX", "s = 2 Y1 Z1", "ss = s^2", "sss = s ss", "R = Y1 s", "RR = R^2", "B = (X1+R)^2-XX-RR", "h = w^2-2 B", "X3 = h s", "Y3 = w(B-h)-2 RR", "Z3 = sss"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("w"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("s"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("ss"), RHS: ast.Pow{X: ast.Variable("s"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("sss"), RHS: ast.Mul{X: ast.Variable("s"), Y: ast.Variable("ss")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("RR"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("w"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("h"), Y: ast.Variable("s")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("w"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("sss")}}},
	},
	{
		ID:             "g1p/shortw/projective/doubling/mdbl-2007-bl",
		Tag:            "mdbl-2007-bl",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[40],
		Operation:      "doubling",
		Source:         "2007 Bernstein--Lange",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"XX = X1^2", "w = a+3 XX", "Y1Y1 = Y1^2", "R = 2 Y1Y1", "sss = 4 Y1 R", "RR = R^2", "B = (X1+R)^2-XX-RR", "h = w^2-2 B", "X3 = 2 h Y1", "Y3 = w(B-h)-2 RR", "Z3 = sss"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("w"), RHS: ast.Add{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Y1Y1"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("sss"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("RR"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("R")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("w"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("h"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("h"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("h")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("RR")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("w"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Variable("sss")}}},
	},
	{
		ID:             "g1p/shortw/projective/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[40],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/Z1", "X3 = A X1", "Y3 = A Y1", "Z3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/shortw/w12-0/addition/add-2010-cln",
		Tag:            "add-2010-cln",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[43],
		Operation:      "addition",
		Source:         "2010 Costello--Lange--Naehrig",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Z1^2", "B = Z2^2", "C = (Z1 + Z2)^2-A-B", "D = X1 Z2", "E = X2 Z1", "F = Y1 B", "G = Y2 A", "H = D - E", "I = 2 (F - G)", "II = I^2", "J = C H", "K = 4 J H", "X3 = 2 II - (D + E) K", "JJ = J^2", "Y3 = ((J + I)^2 - JJ - II) (D K - X3) - F K^2", "Z3 = 2 JJ"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("II"), RHS: ast.Pow{X: ast.Variable("I"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("J"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("II")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("JJ"), RHS: ast.Pow{X: ast.Variable("J"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("J"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("t8"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("t9"), Y: ast.Variable("JJ")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t11"), Y: ast.Variable("II")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("t10"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("K"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("t12"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t16"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("JJ")}}}},
	},
	{
		ID:             "g1p/shortw/w12-0/addition/madd-2010-cln",
		Tag:            "madd-2010-cln",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[43],
		Operation:      "addition",
		Source:         "2010 Costello--Lange--Naehrig",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = Z1^2", "E = X2 Z1", "G = Y2 A", "H = (X1 - E)", "I = (Y1 - G)", "II = I^2", "J = Z1 H", "K = 2 J H", "X3 = 2 II - (X1 + E) K", "JJ = J^2", "Y3 = ((J+ I)^2 - JJ - II) (X1 K - X3) - Y1 K^2", "Z3 = 2 JJ"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Sub{X: ast.Variable("Y1"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("II"), RHS: ast.Pow{X: ast.Variable("I"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("J"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("K"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("II")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("JJ"), RHS: ast.Pow{X: ast.Variable("J"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("J"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("K")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("JJ")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("II")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("K"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t12"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("JJ")}}}},
	},
	{
		ID:             "g1p/shortw/w12-0/doubling/dbl-2010-cln",
		Tag:            "dbl-2010-cln",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[43],
		Operation:      "doubling",
		Source:         "2010 Costello--Lange--Naehrig",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = Y1^2", "C = Z1^2", "D = a C", "X3 = (A-D)^2", "E = 2 (A+D)^2-X3", "F = ((A-D+Y1)^2-B-X3)", "Y3 = E F", "Z3 = 4 B"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("B")}}}},
	},
	{
		ID:             "g1p/shortw/xyzz-3/addition/add-2008-s",
		Tag:            "add-2008-s",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[45],
		Operation:      "addition",
		Source:         "2008 Sutherland",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 ZZ2", "U2 = X2 ZZ1", "S1 = Y1 ZZZ2", "S2 = Y2 ZZZ1", "P = U2-U1", "R = S2-S1", "PP = P^2", "PPP = P PP", "Q = U1 PP", "X3 = R^2-PPP-2 Q", "Y3 = R (Q-X3)-S1 PPP", "ZZ3 = ZZ1 ZZ2 PP", "ZZZ3 = ZZZ1 ZZZ2 PPP"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("ZZZ2")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZZ1")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("PP"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("PPP"), RHS: ast.Mul{X: ast.Variable("P"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Q"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("ZZ2"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("ZZZ2"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Mul{X: ast.Variable("ZZZ1"), Y: ast.Variable("t7")}}}},
	},
	{
		ID:             "g1p/shortw/xyzz-3/addition/madd-2008-s",
		Tag:            "madd-2008-s",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[45],
		Operation:      "addition",
		Source:         "2008 Sutherland",
		AppliesTo:      "",
		Assume:         []string{"ZZ2 = 1", "ZZZ2 = 1"},
		Compute:        []string{"U2 = X2 ZZ1", "S2 = Y2 ZZZ1", "P = U2-X1", "R = S2-Y1", "PP = P^2", "PPP = P PP", "Q = X1 PP", "X3 = R^2-PPP-2 Q", "Y3 = R (Q-X3)-Y1 PPP", "ZZ3 = ZZ1 PP", "ZZZ3 = ZZZ1 PPP"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZZ1")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("PP"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("PPP"), RHS: ast.Mul{X: ast.Variable("P"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Q"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Mul{X: ast.Variable("ZZZ1"), Y: ast.Variable("PPP")}}}},
	},
	{
		ID:             "g1p/shortw/xyzz-3/addition/mmadd-2008-s",
		Tag:            "mmadd-2008-s",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[45],
		Operation:      "addition",
		Source:         "2008 Sutherland",
		AppliesTo:      "",
		Assume:         []string{"ZZ1 = 1", "ZZZ1 = 1", "ZZ2 = 1", "ZZZ2 = 1"},
		Compute:        []string{"P = X2-X1", "R = Y2-Y1", "PP = P^2", "PPP = P PP", "Q = X1 PP", "X3 = R^2-PPP-2 Q", "Y3 = R (Q-X3)-Y1 PPP", "ZZ3 = PP", "ZZZ3 = PPP"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("PP"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("PPP"), RHS: ast.Mul{X: ast.Variable("P"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Q"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("PP")}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Variable("PPP")}}},
	},
	{
		ID:             "g1p/shortw/xyzz-3/doubling/dbl-2008-s-1",
		Tag:            "dbl-2008-s-1",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[45],
		Operation:      "doubling",
		Source:         "2008 Sutherland",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U = 2 Y1", "V = U^2", "W = U V", "S = X1 V", "M = 3 X1^2+a ZZ1^2", "X3 = M^2-2 S", "Y3 = M (S-X3)-W Y1", "ZZ3 = V ZZ1", "ZZZ3 = W ZZZ1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Pow{X: ast.Variable("U"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("W"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Mul{X: ast.Variable("W"), Y: ast.Variable("ZZZ1")}}}},
	},
	{
		ID:             "g1p/shortw/xyzz-3/doubling/dbl-2008-s-2",
		Tag:            "dbl-2008-s-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[45],
		Operation:      "doubling",
		Source:         "2008 Sutherland",
		AppliesTo:      "xyzz-3",
		Assume:         []string(nil),
		Compute:        []string{"U = 2 Y1", "V = U^2", "W = U V", "S = X1 V", "M = 3 (X1-ZZ1) (X1+ZZ1)", "X3 = M^2-2 S", "Y3 = M (S-X3)-W Y1", "ZZ3 = V ZZ1", "ZZZ3 = W ZZZ1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Pow{X: ast.Variable("U"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("W"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Mul{X: ast.Variable("W"), Y: ast.Variable("ZZZ1")}}}},
	},
	{
		ID:             "g1p/shortw/xyzz-3/doubling/mdbl-2008-s-1",
		Tag:            "mdbl-2008-s-1",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[45],
		Operation:      "doubling",
		Source:         "2008 Sutherland",
		AppliesTo:      "",
		Assume:         []string{"ZZ1 = 1", "ZZZ1 = 1"},
		Compute:        []string{"U = 2 Y1", "V = U^2", "W = U V", "S = X1 V", "M = 3 X1^2+a", "X3 = M^2-2 S", "Y3 = M (S-X3)-W Y1", "ZZ3 = V", "ZZZ3 = W"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Pow{X: ast.Variable("U"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("a")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("W"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("V")}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Variable("W")}}},
	},
	{
		ID:             "g1p/shortw/xyzz-3/doubling/mdbl-2008-s-2",
		Tag:            "mdbl-2008-s-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[45],
		Operation:      "doubling",
		Source:         "2008 Sutherland",
		AppliesTo:      "xyzz-3",
		Assume:         []string{"ZZ1 = 1", "ZZZ1 = 1"},
		Compute:        []string{"U = 2 Y1", "V = U^2", "W = U V", "S = X1 V", "M = 3 (X1^2-1)", "X3 = M^2-2 S", "Y3 = M (S-X3)-W Y1", "ZZ3 = V", "ZZZ3 = W"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Pow{X: ast.Variable("U"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Constant(1)}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("W"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("V")}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Variable("W")}}},
	},
	{
		ID:             "g1p/shortw/xyzz-3/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[45],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/ZZZ1", "B = (ZZ1 A)^2", "X3 = X1 B", "Y3 = Y1 A", "ZZ3 = 1", "ZZZ3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("ZZZ1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Constant(1)}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/shortw/xyzz/addition/add-2008-s",
		Tag:            "add-2008-s",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[44],
		Operation:      "addition",
		Source:         "2008 Sutherland",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U1 = X1 ZZ2", "U2 = X2 ZZ1", "S1 = Y1 ZZZ2", "S2 = Y2 ZZZ1", "P = U2-U1", "R = S2-S1", "PP = P^2", "PPP = P PP", "Q = U1 PP", "X3 = R^2-PPP-2 Q", "Y3 = R (Q-X3)-S1 PPP", "ZZ3 = ZZ1 ZZ2 PP", "ZZZ3 = ZZZ1 ZZZ2 PPP"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("ZZ2")}}, ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("S1"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("ZZZ2")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZZ1")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("U1")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("S1")}}, ast.Assignment{LHS: ast.Variable("PP"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("PPP"), RHS: ast.Mul{X: ast.Variable("P"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Variable("U1"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Q"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("S1"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("ZZ2"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("ZZZ2"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Mul{X: ast.Variable("ZZZ1"), Y: ast.Variable("t7")}}}},
	},
	{
		ID:             "g1p/shortw/xyzz/addition/madd-2008-s",
		Tag:            "madd-2008-s",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[44],
		Operation:      "addition",
		Source:         "2008 Sutherland",
		AppliesTo:      "",
		Assume:         []string{"ZZ2 = 1", "ZZZ2 = 1"},
		Compute:        []string{"U2 = X2 ZZ1", "S2 = Y2 ZZZ1", "P = U2-X1", "R = S2-Y1", "PP = P^2", "PPP = P PP", "Q = X1 PP", "X3 = R^2-PPP-2 Q", "Y3 = R (Q-X3)-Y1 PPP", "ZZ3 = ZZ1 PP", "ZZZ3 = ZZZ1 PPP"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("S2"), RHS: ast.Mul{X: ast.Variable("Y2"), Y: ast.Variable("ZZZ1")}}, ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("U2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Sub{X: ast.Variable("S2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("PP"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("PPP"), RHS: ast.Mul{X: ast.Variable("P"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Q"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Mul{X: ast.Variable("ZZZ1"), Y: ast.Variable("PPP")}}}},
	},
	{
		ID:             "g1p/shortw/xyzz/addition/mmadd-2008-s",
		Tag:            "mmadd-2008-s",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[44],
		Operation:      "addition",
		Source:         "2008 Sutherland",
		AppliesTo:      "",
		Assume:         []string{"ZZ1 = 1", "ZZZ1 = 1", "ZZ2 = 1", "ZZZ2 = 1"},
		Compute:        []string{"P = X2-X1", "R = Y2-Y1", "PP = P^2", "PPP = P PP", "Q = X1 PP", "X3 = R^2-PPP-2 Q", "Y3 = R (Q-X3)-Y1 PPP", "ZZ3 = PP", "ZZZ3 = PPP"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Sub{X: ast.Variable("X2"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("PP"), RHS: ast.Pow{X: ast.Variable("P"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("PPP"), RHS: ast.Mul{X: ast.Variable("P"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("Q"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("PP")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("R"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Q")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Q"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("PPP")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("PP")}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Variable("PPP")}}},
	},
	{
		ID:             "g1p/shortw/xyzz/doubling/dbl-2008-s-1",
		Tag:            "dbl-2008-s-1",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[44],
		Operation:      "doubling",
		Source:         "2008 Sutherland",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"U = 2 Y1", "V = U^2", "W = U V", "S = X1 V", "M = 3 X1^2+a ZZ1^2", "X3 = M^2-2 S", "Y3 = M (S-X3)-W Y1", "ZZ3 = V ZZ1", "ZZZ3 = W ZZZ1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Pow{X: ast.Variable("U"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("ZZ1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t3"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("W"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("ZZ1")}}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Mul{X: ast.Variable("W"), Y: ast.Variable("ZZZ1")}}}},
	},
	{
		ID:             "g1p/shortw/xyzz/doubling/mdbl-2008-s-1",
		Tag:            "mdbl-2008-s-1",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[44],
		Operation:      "doubling",
		Source:         "2008 Sutherland",
		AppliesTo:      "",
		Assume:         []string{"ZZ1 = 1", "ZZZ1 = 1"},
		Compute:        []string{"U = 2 Y1", "V = U^2", "W = U V", "S = X1 V", "M = 3 X1^2+a", "X3 = M^2-2 S", "Y3 = M (S-X3)-W Y1", "ZZ3 = V", "ZZZ3 = W"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Pow{X: ast.Variable("U"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("M"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("a")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("M"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("S"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("W"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("M"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Variable("V")}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Variable("W")}}},
	},
	{
		ID:             "g1p/shortw/xyzz/scaling/z",
		Tag:            "z",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[44],
		Operation:      "scaling",
		Source:         "",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = 1/ZZZ1", "B = (ZZ1 A)^2", "X3 = X1 B", "Y3 = Y1 A", "ZZ3 = 1", "ZZZ3 = 1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Inv{X: ast.Variable("ZZZ1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("ZZ1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("ZZ3"), RHS: ast.Constant(1)}, ast.Assignment{LHS: ast.Variable("ZZZ3"), RHS: ast.Constant(1)}}},
	},
	{
		ID:             "g1p/shortw/xz/diffadd/dadd-2002-it",
		Tag:            "dadd-2002-it",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "diffadd",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formula (8)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X5 = Z1 ((X2 X3 - a Z2 Z3)^2 - 4 b Z2 Z3(X2 Z3 + X3 Z2))", "Z5 = X1 (X2 Z3 - X3 Z2)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Pow{X: ast.Variable("t15"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t16")}}}},
	},
	{
		ID:             "g1p/shortw/xz/diffadd/dadd-2002-it-2",
		Tag:            "dadd-2002-it-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "diffadd",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formula (9)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"R = 2(X2 Z3 + X3 Z2)(X2 X3 + a Z2 Z3) + 4 b Z2^2 Z3^2", "S = (X2 Z3 - X3 Z2)^2", "X5 = R Z1 - S X1", "Z5 = S Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Pow{X: ast.Variable("t16"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("t18"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g1p/shortw/xz/diffadd/dadd-2002-it-3",
		Tag:            "dadd-2002-it-3",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "diffadd",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", page 295, Formula 1",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"T1 = X2 X3", "T2 = Z2 Z3", "T3 = X2 Z3", "T4 = Z2 X3", "T5 = a T2", "T6 = T1 - T5", "T7 = T6^2", "T8 = b T2", "T9 = 4 T8", "T10 = T3 + T4", "T11 = T9 T10", "T12 = T7 - T11", "X5 = Z1 T12", "T13 = T3 - T4", "T14 = T13^2", "Z5 = X1 T14"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Pow{X: ast.Variable("T6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T9"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T10"), RHS: ast.Add{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T11"), RHS: ast.Mul{X: ast.Variable("T9"), Y: ast.Variable("T10")}}, ast.Assignment{LHS: ast.Variable("T12"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T11")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("T12")}}, ast.Assignment{LHS: ast.Variable("T13"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T14"), RHS: ast.Pow{X: ast.Variable("T13"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("T14")}}}},
	},
	{
		ID:             "g1p/shortw/xz/diffadd/dadd-2002-it-4",
		Tag:            "dadd-2002-it-4",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "diffadd",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", page 296, Formula 2",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"T1 = X2 X3", "T2 = Z2 Z3", "T3 = X2 Z3", "T4 = X3 Z2", "T5 = T3 + T4", "T6 = a T2", "T7 = T1 + T6", "T8 = T5 T7", "T9 = 2 T8", "T10 = T2^2", "T11 = b T10", "T12 = 4 T11", "T13 = T9 + T12", "T14 = T3 - T4", "T15 = T14^2", "T16 = Z1 T13", "T17 = X1 T15", "X5 = T16 - T17", "Z5 = Z1 T15"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Add{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Add{X: ast.Variable("T1"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Mul{X: ast.Variable("T5"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T10"), RHS: ast.Pow{X: ast.Variable("T2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T11"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("T10")}}, ast.Assignment{LHS: ast.Variable("T12"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("T11")}}, ast.Assignment{LHS: ast.Variable("T13"), RHS: ast.Add{X: ast.Variable("T9"), Y: ast.Variable("T12")}}, ast.Assignment{LHS: ast.Variable("T14"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T15"), RHS: ast.Pow{X: ast.Variable("T14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T16"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("T13")}}, ast.Assignment{LHS: ast.Variable("T17"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("T15")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("T16"), Y: ast.Variable("T17")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("T15")}}}},
	},
	{
		ID:             "g1p/shortw/xz/diffadd/mdadd-2002-bj",
		Tag:            "mdadd-2002-bj",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "diffadd",
		Source:         "2002 Brier--Joye \"Weierstrass elliptic curves and side-channel attacks\", formula (9) accompanied by note \"7 multiplications plus 3 multiplications by a constant\"",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"X5 = (X2 X3 - a Z2 Z3)^2 - 4 b Z2 Z3 (X2 Z3 + X3 Z2) ", "Z5 = X1 (X2 Z3 - X3 Z2)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/shortw/xz/diffadd/mdadd-2002-bj-2",
		Tag:            "mdadd-2002-bj-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "diffadd",
		Source:         "2002 Brier--Joye \"Weierstrass elliptic curves and side-channel attacks\", formula (9) accompanied by note \"7 multiplications plus 3 multiplications by a constant\", plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "b4 = 4 b"},
		Compute:        []string{"A = X2 X3", "B = Z2 Z3", "C = X2 Z3", "D = Z2 X3", "X5 = (A - a B)^2 - b4 B (C + D)", "Z5 = X1 (C - D)^2"},
		Parameters:     []string{"b4"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t7")}}}},
	},
	{
		ID:             "g1p/shortw/xz/diffadd/mdadd-2002-it",
		Tag:            "mdadd-2002-it",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "diffadd",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formula (8), plus assumption Z1 = 1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"X5 = (X2 X3 - a Z2 Z3)^2 - 4 b Z2 Z3(X2 Z3 + X3 Z2)", "Z5 = X1 (X2 Z3 - X3 Z2)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("t7"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Sub{X: ast.Variable("t13"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t15")}}}},
	},
	{
		ID:             "g1p/shortw/xz/diffadd/mdadd-2002-it-2",
		Tag:            "mdadd-2002-it-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "diffadd",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formula (9), plus assumption Z1 = 1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"R = 2(X2 Z3 + X3 Z2)(X2 X3 + a Z2 Z3) + 4 b Z2^2 Z3^2", "S = (X2 Z3 - X3 Z2)^2", "X5 = R - S X1", "Z5 = S"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Add{X: ast.Variable("t13"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Pow{X: ast.Variable("t16"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Variable("S")}}},
	},
	{
		ID:             "g1p/shortw/xz/diffadd/mdadd-2002-it-3",
		Tag:            "mdadd-2002-it-3",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "diffadd",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", page 295, Formula 1, plus assumption Z1 = 1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"T1 = X2 X3", "T2 = Z2 Z3", "T3 = X2 Z3", "T4 = Z2 X3", "T5 = a T2", "T6 = T1 - T5", "T7 = T6^2", "T8 = b T2", "T9 = 4 T8", "T10 = T3 + T4", "T11 = T9 T10", "T12 = T7 - T11", "X5 = T12", "T13 = T3 - T4", "T14 = T13^2", "Z5 = X1 T14"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T5")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Pow{X: ast.Variable("T6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T9"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T10"), RHS: ast.Add{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T11"), RHS: ast.Mul{X: ast.Variable("T9"), Y: ast.Variable("T10")}}, ast.Assignment{LHS: ast.Variable("T12"), RHS: ast.Sub{X: ast.Variable("T7"), Y: ast.Variable("T11")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Variable("T12")}, ast.Assignment{LHS: ast.Variable("T13"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T14"), RHS: ast.Pow{X: ast.Variable("T13"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("T14")}}}},
	},
	{
		ID:             "g1p/shortw/xz/diffadd/mdadd-2002-it-4",
		Tag:            "mdadd-2002-it-4",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "diffadd",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", page 296, Formula 2, plus assumption Z1 = 1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"T1 = X2 X3", "T2 = Z2 Z3", "T3 = X2 Z3", "T4 = X3 Z2", "T5 = T3 + T4", "T6 = a T2", "T7 = T1 + T6", "T8 = T5 T7", "T9 = 2 T8", "T10 = T2^2", "T11 = b T10", "T12 = 4 T11", "T13 = T9 + T12", "T14 = T3 - T4", "T15 = T14^2", "T16 = T13", "T17 = X1 T15", "X5 = T16 - T17", "Z5 = T15"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Add{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Add{X: ast.Variable("T1"), Y: ast.Variable("T6")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Mul{X: ast.Variable("T5"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("T10"), RHS: ast.Pow{X: ast.Variable("T2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T11"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("T10")}}, ast.Assignment{LHS: ast.Variable("T12"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("T11")}}, ast.Assignment{LHS: ast.Variable("T13"), RHS: ast.Add{X: ast.Variable("T9"), Y: ast.Variable("T12")}}, ast.Assignment{LHS: ast.Variable("T14"), RHS: ast.Sub{X: ast.Variable("T3"), Y: ast.Variable("T4")}}, ast.Assignment{LHS: ast.Variable("T15"), RHS: ast.Pow{X: ast.Variable("T14"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T16"), RHS: ast.Variable("T13")}, ast.Assignment{LHS: ast.Variable("T17"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("T15")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("T16"), Y: ast.Variable("T17")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Variable("T15")}}},
	},
	{
		ID:             "g1p/shortw/xz/doubling/dbl-2002-bj",
		Tag:            "dbl-2002-bj",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "doubling",
		Source:         "2002 Brier--Joye \"Weierstrass elliptic curves and side-channel attacks\", formula (10) accompanied by note \"7 multiplications plus 2 multiplications by a constant\"",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = (X1^2 - a Z1^2)^2 - 8 b X1 Z1^3", "Z3 = 4 Z1 (X1^3 + a X1 Z1^2 + b Z1^3)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t17")}}}},
	},
	{
		ID:             "g1p/shortw/xz/doubling/dbl-2002-bj-2",
		Tag:            "dbl-2002-bj-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "doubling",
		Source:         "2002 Brier--Joye \"Weierstrass elliptic curves and side-channel attacks\", formula (10) accompanied by note \"7 multiplications plus 2 multiplications by a constant\", plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"b2 = 2 b"},
		Compute:        []string{"XX = X1^2", "ZZ = Z1^2", "A = 2((X1 + Z1)^2 - XX - ZZ)", "aZZ = a ZZ", "b2ZZ = b2 ZZ", "X3 = (XX - aZZ)^2 - A b2ZZ", "Z3 = A (XX + aZZ) + 2 b2ZZ ZZ"},
		Parameters:     []string{"b2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("aZZ"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("b2ZZ"), RHS: ast.Mul{X: ast.Variable("b2"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("b2ZZ")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("b2ZZ"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g1p/shortw/xz/doubling/dbl-2002-bj-3",
		Tag:            "dbl-2002-bj-3",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "doubling",
		Source:         "2002 Brier--Joye \"Weierstrass elliptic curves and side-channel attacks\", formula (10) accompanied by note \"7 multiplications plus 2 multiplications by a constant\", plus common-subexpression elimination emphasizing squaring",
		AppliesTo:      "",
		Assume:         []string{"b2 = 2 b", "b4 = 4 b"},
		Compute:        []string{"XX = X1^2", "ZZ = Z1^2", "A = 2((X1 + Z1)^2 - XX - ZZ)", "aZZ = a ZZ", "X3 = (XX - aZZ)^2 - b2 A ZZ", "Z3 = A (XX + aZZ) + b4 ZZ^2"},
		Parameters:     []string{"b2", "b4"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("aZZ"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("b2"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/shortw/xz/doubling/dbl-2002-it",
		Tag:            "dbl-2002-it",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "doubling",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formula (10)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X3 = (X1^2 - a Z1^2)^2 - 8 b X1 Z1^3", "Z3 = 4(X1 Z1(X1^2 + a Z1^2) + b Z1^4)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Add{X: ast.Variable("t16"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t17")}}}},
	},
	{
		ID:             "g1p/shortw/xz/doubling/dbl-2002-it-2",
		Tag:            "dbl-2002-it-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "doubling",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", page 296, Formula 3",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"T1 = X1^2", "T2 = Z1^2", "T3 = a T2", "T4 = T1 - T3", "T5 = T4^2", "T6 = b T2", "T7 = X1 Z1", "T8 = T6 T7", "T9 = 8 T8", "X3 = T5 - T9", "T10 = T1 + T3", "T11 = T7 T10", "T12 = T6 T2", "T13 = T11 + T12", "Z3 = 4 T13"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("T1"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T2"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T4"), RHS: ast.Sub{X: ast.Variable("T1"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T5"), RHS: ast.Pow{X: ast.Variable("T4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("T6"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T7"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("T8"), RHS: ast.Mul{X: ast.Variable("T6"), Y: ast.Variable("T7")}}, ast.Assignment{LHS: ast.Variable("T9"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("T8")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("T5"), Y: ast.Variable("T9")}}, ast.Assignment{LHS: ast.Variable("T10"), RHS: ast.Add{X: ast.Variable("T1"), Y: ast.Variable("T3")}}, ast.Assignment{LHS: ast.Variable("T11"), RHS: ast.Mul{X: ast.Variable("T7"), Y: ast.Variable("T10")}}, ast.Assignment{LHS: ast.Variable("T12"), RHS: ast.Mul{X: ast.Variable("T6"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("T13"), RHS: ast.Add{X: ast.Variable("T11"), Y: ast.Variable("T12")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("T13")}}}},
	},
	{
		ID:             "g1p/shortw/xz/ladder/ladd-2002-it",
		Tag:            "ladd-2002-it",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "ladder",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formulas (8) and (10)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X4 = (X2^2 - a Z2^2)^2 - 8 b X2 Z2^3", "Z4 = 4(X2 Z2(X2^2 + a Z2^2) + b Z2^4)", "X5 = Z1 ((X2 X3 - a Z2 Z3)^2 - 4 b Z2 Z3(X2 Z3 + X3 Z2))", "Z5 = X1 (X2 Z3 - X3 Z2)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Add{X: ast.Variable("t16"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Sub{X: ast.Variable("t22"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Pow{X: ast.Variable("t23"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t28")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Sub{X: ast.Variable("t25"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Sub{X: ast.Variable("t32"), Y: ast.Variable("t31")}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Pow{X: ast.Variable("t33"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t34")}}}},
	},
	{
		ID:             "g1p/shortw/xz/ladder/ladd-2002-it-2",
		Tag:            "ladd-2002-it-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "ladder",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formulas (9) and (10)",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"X4 = (X2^2 - a Z2^2)^2 - 8 b X2 Z2^3", "Z4 = 4(X2 Z2(X2^2 + a Z2^2) + b Z2^4)", "R = 2(X2 Z3 + X3 Z2)(X2 X3 + a Z2 Z3) + 4 b Z2^2 Z3^2", "S = (X2 Z3 - X3 Z2)^2", "X5 = R Z1 - S X1", "Z5 = S Z1"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Add{X: ast.Variable("t16"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("t22"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("t20"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("t25"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t28")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("t23"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Add{X: ast.Variable("t31"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Sub{X: ast.Variable("t33"), Y: ast.Variable("t32")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Pow{X: ast.Variable("t34"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t35"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t36"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("t36"), Y: ast.Variable("t35")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g1p/shortw/xz/ladder/ladd-2002-it-3",
		Tag:            "ladd-2002-it-3",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "ladder",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formulas (8) and (10), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"b4 = 4 b"},
		Compute:        []string{"XX = X2^2", "ZZ = Z2^2", "aZZ = a ZZ", "E = (X2 + Z2)^2 - XX - ZZ", "X4 = (XX - aZZ)^2 - b4 E ZZ", "Z4 = 2 E(XX + aZZ) + b4 ZZ^2", "A = X2 X3", "B = Z2 Z3", "C = X2 Z3", "D = X3 Z2", "X5 = Z1 ((A - a B)^2 - b4 B(C + D))", "Z5 = X1 (C - D)^2"},
		Parameters:     []string{"b4"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("aZZ"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t13"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Pow{X: ast.Variable("t19"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t20")}}}},
	},
	{
		ID:             "g1p/shortw/xz/ladder/ladd-2002-it-4",
		Tag:            "ladd-2002-it-4",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "ladder",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formulas (9) and (10), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"b4 = 4 b"},
		Compute:        []string{"XX = X2^2", "ZZ = Z2^2", "aZZ = a ZZ", "E = (X2 + Z2)^2 - XX - ZZ", "X4 = (XX - aZZ)^2 - b4 E ZZ", "Z4 = 2 E(XX + aZZ) + b4 ZZ^2", "A = X2 X3", "B = Z2 Z3", "C = X2 Z3", "D = X3 Z2", "R = 2(C + D)(A + a B) + b4 B^2", "S = (C - D)^2", "X5 = R Z1 - S X1", "Z5 = S Z1"},
		Parameters:     []string{"b4"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("aZZ"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Add{X: ast.Variable("t18"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Pow{X: ast.Variable("t19"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("R"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("t21"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("Z1")}}}},
	},
	{
		ID:             "g1p/shortw/xz/ladder/mladd-2002-bj",
		Tag:            "mladd-2002-bj",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "ladder",
		Source:         "2002 Brier--Joye \"Weierstrass elliptic curves and side-channel attacks\", formulas (9) and (10)",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"X4 = (X2^2 - a Z2^2)^2 - 8 b X2 Z2^3", "Z4 = 4 Z2 (X2^3 + a X2 Z2^2 + b Z2^3)", "X5 = (X2 X3 - a Z2 Z3)^2 - 4 b Z2 Z3 (X2 Z3 + X3 Z2)", "Z5 = X1 (X2 Z3 - X3 Z2)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Add{X: ast.Variable("t15"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Sub{X: ast.Variable("t22"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Pow{X: ast.Variable("t23"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t28")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("t25"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Sub{X: ast.Variable("t31"), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Pow{X: ast.Variable("t32"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t33")}}}},
	},
	{
		ID:             "g1p/shortw/xz/ladder/mladd-2002-bj-2",
		Tag:            "mladd-2002-bj-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "ladder",
		Source:         "2002 Brier--Joye \"Weierstrass elliptic curves and side-channel attacks\", formulas (9) and (10), plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "b2 = 2 b", "b4 = 4 b"},
		Compute:        []string{"XX = X2^2", "ZZ = Z2^2", "E = 2((X2 + Z2)^2 - XX - ZZ)", "aZZ = a ZZ", "b2ZZ = b2 ZZ", "X4 = (XX - aZZ)^2 - E b2ZZ", "Z4 = E (XX + aZZ) + 2 b2ZZ ZZ", "A = X2 X3", "B = Z2 Z3", "C = X2 Z3", "D = Z2 X3", "X5 = (A - a B)^2 - b4 B (C + D)", "Z5 = X1 (C - D)^2"},
		Parameters:     []string{"b2", "b4"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("aZZ"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("b2ZZ"), RHS: ast.Mul{X: ast.Variable("b2"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("b2ZZ")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("b2ZZ"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("t10"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Pow{X: ast.Variable("t12"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Pow{X: ast.Variable("t17"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t18")}}}},
	},
	{
		ID:             "g1p/shortw/xz/ladder/mladd-2002-bj-3",
		Tag:            "mladd-2002-bj-3",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "ladder",
		Source:         "2002 Brier--Joye \"Weierstrass elliptic curves and side-channel attacks\", formulas (9) and (10), plus common-subexpression elimination emphasizing squarings",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "b2 = 2 b", "b4 = 4 b"},
		Compute:        []string{"XX = X2^2", "ZZ = Z2^2", "E = 2((X2 + Z2)^2 - XX - ZZ)", "aZZ = a ZZ", "X4 = (XX - aZZ)^2 - b2 E ZZ", "Z4 = E (XX + aZZ) + b4 ZZ^2", "A = X2 X3", "B = Z2 Z3", "C = X2 Z3", "D = Z2 X3", "X5 = (A - a B)^2 - b4 B (C + D)", "Z5 = X1 (C - D)^2"},
		Parameters:     []string{"b2", "b4"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("aZZ"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("b2"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t13"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Pow{X: ast.Variable("t18"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t19")}}}},
	},
	{
		ID:             "g1p/shortw/xz/ladder/mladd-2002-it",
		Tag:            "mladd-2002-it",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "ladder",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formulas (8) and (10), plus assumption Z1 = 1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"X4 = (X2^2 - a Z2^2)^2 - 8 b X2 Z2^3", "Z4 = 4(X2 Z2(X2^2 + a Z2^2) + b Z2^4)", "X5 = ((X2 X3 - a Z2 Z3)^2 - 4 b Z2 Z3(X2 Z3 + X3 Z2))", "Z5 = X1 (X2 Z3 - X3 Z2)^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Add{X: ast.Variable("t16"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Sub{X: ast.Variable("t22"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("t19"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Pow{X: ast.Variable("t23"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Mul{X: ast.Variable("Z3"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t28")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("t25"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Sub{X: ast.Variable("t31"), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Pow{X: ast.Variable("t32"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t33")}}}},
	},
	{
		ID:             "g1p/shortw/xz/ladder/mladd-2002-it-2",
		Tag:            "mladd-2002-it-2",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "ladder",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formulas (9) and (10), plus assumption Z1 = 1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"X4 = (X2^2 - a Z2^2)^2 - 8 b X2 Z2^3", "Z4 = 4(X2 Z2(X2^2 + a Z2^2) + b Z2^4)", "R = 2(X2 Z3 + X3 Z2)(X2 X3 + a Z2 Z3) + 4 b Z2^2 Z3^2", "S = (X2 Z3 - X3 Z2)^2", "X5 = R - S X1", "Z5 = S"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(8), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Add{X: ast.Variable("t9"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(4)}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Add{X: ast.Variable("t16"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t18")}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("t21"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t22"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t23"), RHS: ast.Add{X: ast.Variable("t22"), Y: ast.Variable("t21")}}, ast.Assignment{LHS: ast.Variable("t24"), RHS: ast.Add{X: ast.Variable("t20"), Y: ast.Variable("t19")}}, ast.Assignment{LHS: ast.Variable("t25"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t26"), RHS: ast.Pow{X: ast.Variable("Z3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t27"), RHS: ast.Mul{X: ast.Variable("t25"), Y: ast.Variable("t26")}}, ast.Assignment{LHS: ast.Variable("t28"), RHS: ast.Mul{X: ast.Variable("b"), Y: ast.Variable("t27")}}, ast.Assignment{LHS: ast.Variable("t29"), RHS: ast.Mul{X: ast.Constant(4), Y: ast.Variable("t28")}}, ast.Assignment{LHS: ast.Variable("t30"), RHS: ast.Mul{X: ast.Variable("t23"), Y: ast.Variable("t24")}}, ast.Assignment{LHS: ast.Variable("t31"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t30")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Add{X: ast.Variable("t31"), Y: ast.Variable("t29")}}, ast.Assignment{LHS: ast.Variable("t32"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t33"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("t34"), RHS: ast.Sub{X: ast.Variable("t33"), Y: ast.Variable("t32")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Pow{X: ast.Variable("t34"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t35"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("t35")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Variable("S")}}},
	},
	{
		ID:             "g1p/shortw/xz/ladder/mladd-2002-it-3",
		Tag:            "mladd-2002-it-3",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "ladder",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formulas (8) and (10), plus common-subexpression elimination, plus assumption Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "b4 = 4 b"},
		Compute:        []string{"XX = X2^2", "ZZ = Z2^2", "aZZ = a ZZ", "E = (X2 + Z2)^2 - XX - ZZ", "X4 = (XX - aZZ)^2 - b4 E ZZ", "Z4 = 2 E(XX + aZZ) + b4 ZZ^2", "A = X2 X3", "B = Z2 Z3", "C = X2 Z3", "D = X3 Z2", "X5 = (A - a B)^2 - b4 B(C + D)", "Z5 = X1 (C - D)^2"},
		Parameters:     []string{"b4"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("aZZ"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("t13"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("t15"), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Pow{X: ast.Variable("t18"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t19")}}}},
	},
	{
		ID:             "g1p/shortw/xz/ladder/mladd-2002-it-4",
		Tag:            "mladd-2002-it-4",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "ladder",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formulas (9) and (10), plus common-subexpression elimination, plus assumption Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "b4 = 4 b"},
		Compute:        []string{"XX = X2^2", "ZZ = Z2^2", "aZZ = a ZZ", "E = (X2 + Z2)^2 - XX - ZZ", "X4 = (XX - aZZ)^2 - b4 E ZZ", "Z4 = 2 E(XX + aZZ) + b4 ZZ^2", "A = X2 X3", "B = Z2 Z3", "C = X2 Z3", "D = X3 Z2", "R = 2(C + D)(A + a B) + b4 B^2", "S = (C - D)^2", "X5 = R - S X1", "Z5 = S"},
		Parameters:     []string{"b4"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("aZZ"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Add{X: ast.Variable("t18"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Pow{X: ast.Variable("t19"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Variable("S")}}},
	},
	{
		ID:             "g1p/shortw/xz/ladder/mladd-2002-it-5",
		Tag:            "mladd-2002-it-5",
		Class:          "g1p",
		Shape:          shapes[10],
		Representation: representations[46],
		Operation:      "ladder",
		Source:         "2002 Izu--Takagi \"A fast parallel elliptic curve multiplication resistant against side channel attacks\", formulas (9) and (10), plus common-subexpression elimination, plus assumption Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "b4 = 4 b"},
		Compute:        []string{"XX = X2^2", "ZZ = Z2^2", "aZZ = a ZZ", "E = (X2 + Z2)^2 - XX - ZZ", "X4 = (XX - aZZ)^2 - b4 E ZZ", "Z4 = 2 E(XX + aZZ) + b4 ZZ^2", "A = X2 X3", "B = Z2 Z3", "C = X2 Z3", "D = X3 Z2", "R = 2(C + D)(A + a B) + b4 B^2", "S = (C - D)^2", "X5 = R - S X1", "Z5 = S"},
		Parameters:     []string{"b4"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("XX"), RHS: ast.Pow{X: ast.Variable("X2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("ZZ"), RHS: ast.Pow{X: ast.Variable("Z2"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("aZZ"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("XX")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("t3"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("ZZ")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X4"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("XX"), Y: ast.Variable("aZZ")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Pow{X: ast.Variable("ZZ"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("Z4"), RHS: ast.Add{X: ast.Variable("t11"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("X3")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X2"), Y: ast.Variable("Z3")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("X3"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Add{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Pow{X: ast.Variable("B"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("b4"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("t13"), Y: ast.Variable("t14")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("R"), RHS: ast.Add{X: ast.Variable("t18"), Y: ast.Variable("t16")}}, ast.Assignment{LHS: ast.Variable("t19"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Pow{X: ast.Variable("t19"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t20"), RHS: ast.Mul{X: ast.Variable("S"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("X5"), RHS: ast.Sub{X: ast.Variable("R"), Y: ast.Variable("t20")}}, ast.Assignment{LHS: ast.Variable("Z5"), RHS: ast.Variable("S")}}},
	},
	{
		ID:             "g1p/twisted/extended-1/addition/add-2008-hwcd",
		Tag:            "add-2008-hwcd",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.1",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = T1 d T2", "D = Z1 Z2", "E = (X1+Y1)(X2+Y2)-A-B", "F = D - C", "G = D + C", "H = B - a A", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/addition/add-2008-hwcd-2",
		Tag:            "add-2008-hwcd-2",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.2",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = Z1 T2", "D = T1 Z2", "E = D + C", "F = (X1-Y1)(X2+Y2)+B-A", "G = B + a A", "H = D - C", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/addition/add-2008-hwcd-3",
		Tag:            "add-2008-hwcd-3",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.1",
		AppliesTo:      "extended-1",
		Assume:         []string{"k = 2 d"},
		Compute:        []string{"A = (Y1-X1)(Y2-X2)", "B = (Y1+X1)(Y2+X2)", "C = T1 k T2", "D = Z1 2 Z2", "E = B - A", "F = D - C", "G = D + C", "H = B + A", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/addition/add-2008-hwcd-4",
		Tag:            "add-2008-hwcd-4",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.2",
		AppliesTo:      "extended-1",
		Assume:         []string(nil),
		Compute:        []string{"A = (Y1-X1)(Y2+X2)", "B = (Y1+X1)(Y2-X2)", "C = Z1 2 T2", "D = T1 2 Z2", "E = D + C", "F = B - A", "G = B + A", "H = D - C", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/addition/madd-2008-hwcd",
		Tag:            "madd-2008-hwcd",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.1",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = T1 d T2", "D = Z1", "E = (X1+Y1)(X2+Y2)-A-B", "F = D - C", "G = D + C", "H = B - a A", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/addition/madd-2008-hwcd-2",
		Tag:            "madd-2008-hwcd-2",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.2",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = Z1 T2", "D = T1", "E = D + C", "F = (X1-Y1)(X2+Y2)+B-A", "G = B + a A", "H = D - C", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Variable("T1")}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/addition/madd-2008-hwcd-3",
		Tag:            "madd-2008-hwcd-3",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.1",
		AppliesTo:      "extended-1",
		Assume:         []string{"Z2 = 1", "k = 2 d"},
		Compute:        []string{"A = (Y1-X1)(Y2-X2)", "B = (Y1+X1)(Y2+X2)", "C = T1 k T2", "D = 2 Z1", "E = B - A", "F = D - C", "G = D + C", "H = B + A", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/addition/madd-2008-hwcd-4",
		Tag:            "madd-2008-hwcd-4",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.2",
		AppliesTo:      "extended-1",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = (Y1-X1)(Y2+X2)", "B = (Y1+X1)(Y2-X2)", "C = Z1 2 T2", "D = 2 T1", "E = D + C", "F = B - A", "G = B + A", "H = D - C", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/addition/mmadd-2008-hwcd",
		Tag:            "mmadd-2008-hwcd",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.1, plus assumption Z1=1, plus standard simplification",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = T1 d T2", "E = (X1+Y1)(X2+Y2)-A-B", "F = 1 - C", "G = 1 + C", "H = B - a A", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = 1 - C^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("t6")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/addition/mmadd-2008-hwcd-2",
		Tag:            "mmadd-2008-hwcd-2",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.2, plus assumption Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = T2", "D = T1", "E = D + C", "F = (X1-Y1)(X2+Y2)+B-A", "G = B + a A", "H = D - C", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Variable("T2")}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Variable("T1")}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/addition/mmadd-2008-hwcd-3",
		Tag:            "mmadd-2008-hwcd-3",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.1, plus assumption Z1=1, plus standard simplification",
		AppliesTo:      "extended-1",
		Assume:         []string{"Z1 = 1", "Z2 = 1", "k = 2 d"},
		Compute:        []string{"A = (Y1-X1)(Y2-X2)", "B = (Y1+X1)(Y2+X2)", "C = T1 k T2", "E = B - A", "F = 2 - C", "G = 2 + C", "H = B + A", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = 4 - C^2"},
		Parameters:     []string{"k"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("k"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Constant(2), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Constant(2), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Constant(4), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/addition/mmadd-2008-hwcd-4",
		Tag:            "mmadd-2008-hwcd-4",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.2, plus assumption Z1=1",
		AppliesTo:      "extended-1",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"A = (Y1-X1)(Y2+X2)", "B = (Y1+X1)(Y2-X2)", "C = 2 T2", "D = 2 T1", "E = D + C", "F = B - A", "G = B + A", "H = D - C", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("Y2"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("T1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/doubling/dbl-2008-hwcd",
		Tag:            "dbl-2008-hwcd",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "doubling",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.3",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = Y1^2", "C = 2 Z1^2", "D = a A", "E = (X1+Y1)^2-A-B", "G = D + B", "F = G - C", "H = D - B", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/doubling/mdbl-2008-hwcd",
		Tag:            "mdbl-2008-hwcd",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "doubling",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.3, plus assumption Z1=1, plus standard simplification",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"A = X1^2", "B = Y1^2", "D = a A", "E = (X1+Y1)^2-A-B", "G = D + B", "H = D - B", "X3 = E (G - 2)", "Y3 = G H", "T3 = E H", "Z3 = G^2 - 2 G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("G"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g1p/twisted/extended-1/tripling/tpl-2015-c",
		Tag:            "tpl-2015-c",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[48],
		Operation:      "tripling",
		Source:         "2015 Chuengsatiansup",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"YY = Y1^2", "aXX = a X1^2", "Ap = YY + aXX", "B = 2(2 Z1^2 - Ap)", "xB = aXX B", "yB = YY B", "AA = Ap (YY - aXX)", "F = AA - yB", "G = AA + xB", "xE = X1 (yB + AA)", "yH = Y1 (xB - AA)", "zF = Z1 F", "zG = Z1 G", "X3 = xE zF", "Y3 = yH zG", "Z3 = zF zG", "T3 = xE yH"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("aXX"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Ap"), RHS: ast.Add{X: ast.Variable("YY"), Y: ast.Variable("aXX")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("Ap")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("xB"), RHS: ast.Mul{X: ast.Variable("aXX"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("yB"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("YY"), Y: ast.Variable("aXX")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Mul{X: ast.Variable("Ap"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("AA"), Y: ast.Variable("yB")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("AA"), Y: ast.Variable("xB")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("yB"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("xE"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("xB"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("yH"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("zF"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("zG"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("xE"), Y: ast.Variable("zF")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("yH"), Y: ast.Variable("zG")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("zF"), Y: ast.Variable("zG")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("xE"), Y: ast.Variable("yH")}}}},
	},
	{
		ID:             "g1p/twisted/extended/addition/add-2008-hwcd",
		Tag:            "add-2008-hwcd",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[47],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.1",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = T1 d T2", "D = Z1 Z2", "E = (X1+Y1)(X2+Y2)-A-B", "F = D - C", "G = D + C", "H = B - a A", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended/addition/add-2008-hwcd-2",
		Tag:            "add-2008-hwcd-2",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[47],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.2",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = Z1 T2", "D = T1 Z2", "E = D + C", "F = (X1-Y1)(X2+Y2)+B-A", "G = B + a A", "H = D - C", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended/addition/madd-2008-hwcd",
		Tag:            "madd-2008-hwcd",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[47],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.1",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = T1 d T2", "D = Z1", "E = (X1+Y1)(X2+Y2)-A-B", "F = D - C", "G = D + C", "H = B - a A", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Variable("Z1")}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended/addition/madd-2008-hwcd-2",
		Tag:            "madd-2008-hwcd-2",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[47],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.2",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = Z1 T2", "D = T1", "E = D + C", "F = (X1-Y1)(X2+Y2)+B-A", "G = B + a A", "H = D - C", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Variable("T1")}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended/addition/mmadd-2008-hwcd",
		Tag:            "mmadd-2008-hwcd",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[47],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.1, plus assumption Z1=1, plus standard simplification",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = T1 d T2", "E = (X1+Y1)(X2+Y2)-A-B", "F = 1 - C", "G = 1 + C", "H = B - a A", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = 1 - C^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("T2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("T1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Pow{X: ast.Variable("C"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("t6")}}}},
	},
	{
		ID:             "g1p/twisted/extended/addition/mmadd-2008-hwcd-2",
		Tag:            "mmadd-2008-hwcd-2",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[47],
		Operation:      "addition",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.2, plus assumption Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"A = X1 X2", "B = Y1 Y2", "C = T2", "D = T1", "E = D + C", "F = (X1-Y1)(X2+Y2)+B-A", "G = B + a A", "H = D - C", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Variable("T2")}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Variable("T1")}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended/doubling/dbl-2008-hwcd",
		Tag:            "dbl-2008-hwcd",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[47],
		Operation:      "doubling",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.3",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = Y1^2", "C = 2 Z1^2", "D = a A", "E = (X1+Y1)^2-A-B", "G = D + B", "F = G - C", "H = D - B", "X3 = E F", "Y3 = G H", "T3 = E H", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("t1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/extended/doubling/mdbl-2008-hwcd",
		Tag:            "mdbl-2008-hwcd",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[47],
		Operation:      "doubling",
		Source:         "2008 Hisil--Wong--Carter--Dawson, http://eprint.iacr.org/2008/522, Section 3.3, plus assumption Z1=1, plus standard simplification",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"A = X1^2", "B = Y1^2", "D = a A", "E = (X1+Y1)^2-A-B", "G = D + B", "H = D - B", "X3 = E (G - 2)", "Y3 = G H", "T3 = E H", "Z3 = G^2 - 2 G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Pow{X: ast.Variable("G"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g1p/twisted/extended/tripling/tpl-2015-c",
		Tag:            "tpl-2015-c",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[47],
		Operation:      "tripling",
		Source:         "2015 Chuengsatiansup",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"YY = Y1^2", "aXX = a X1^2", "Ap = YY + aXX", "B = 2(2 Z1^2 - Ap)", "xB = aXX B", "yB = YY B", "AA = Ap (YY - aXX)", "F = AA - yB", "G = AA + xB", "xE = X1 (yB + AA)", "yH = Y1 (xB - AA)", "zF = Z1 F", "zG = Z1 G", "X3 = xE zF", "Y3 = yH zG", "Z3 = zF zG", "T3 = xE yH"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("aXX"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Ap"), RHS: ast.Add{X: ast.Variable("YY"), Y: ast.Variable("aXX")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("Ap")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("xB"), RHS: ast.Mul{X: ast.Variable("aXX"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("yB"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("YY"), Y: ast.Variable("aXX")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Mul{X: ast.Variable("Ap"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("AA"), Y: ast.Variable("yB")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("AA"), Y: ast.Variable("xB")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("yB"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("xE"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("xB"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("yH"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("zF"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("zG"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("xE"), Y: ast.Variable("zF")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("yH"), Y: ast.Variable("zG")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("zF"), Y: ast.Variable("zG")}}, ast.Assignment{LHS: ast.Variable("T3"), RHS: ast.Mul{X: ast.Variable("xE"), Y: ast.Variable("yH")}}}},
	},
	{
		ID:             "g1p/twisted/inverted/addition/add-2008-bbjlp",
		Tag:            "add-2008-bbjlp",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[49],
		Operation:      "addition",
		Source:         "2008 Bernstein--Birkner--Joye--Lange--Peters http://eprint.iacr.org/2008/013, Section 6",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Z1 Z2", "B = d A^2", "C = X1 X2", "D = Y1 Y2", "E = C D", "H = C - a D", "I = (X1 + Y1)(X2 + Y2) - C - D", "X3 = (E + B) H", "Y3 = (E - B) I", "Z3 = A H I"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/twisted/inverted/addition/madd-2008-bbjlp",
		Tag:            "madd-2008-bbjlp",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[49],
		Operation:      "addition",
		Source:         "2008 Bernstein--Birkner--Joye--Lange--Peters http://eprint.iacr.org/2008/013, Section 6, plus Z2=1, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"B = d Z1^2", "C = X1 X2", "D = Y1 Y2", "E = C D", "H = C - a D", "I = (X1 + Y1)(X2 + Y2) - C - D", "X3 = (E + B) H", "Y3 = (E - B) I", "Z3 = Z1 H I"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t8")}}}},
	},
	{
		ID:             "g1p/twisted/inverted/addition/mmadd-2008-bbjlp",
		Tag:            "mmadd-2008-bbjlp",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[49],
		Operation:      "addition",
		Source:         "2008 Bernstein--Birkner--Joye--Lange--Peters http://eprint.iacr.org/2008/013, Section 6, plus Z2=1, plus Z1=1, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"C = X1 X2", "D = Y1 Y2", "E = C D", "H = C - a D", "I = (X1 + Y1)(X2 + Y2) - C - D", "X3 = (E + d) H", "Y3 = (E - d) I", "Z3 = H I"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("I"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("d")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("d")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t6"), Y: ast.Variable("I")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("H"), Y: ast.Variable("I")}}}},
	},
	{
		ID:             "g1p/twisted/inverted/doubling/dbl-2008-bbjlp",
		Tag:            "dbl-2008-bbjlp",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[49],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Birkner--Joye--Lange--Peters http://eprint.iacr.org/2008/013, Section 6",
		AppliesTo:      "",
		Assume:         []string{"d2 = 2 d"},
		Compute:        []string{"A = X1^2", "B = Y1^2", "U = a B", "C = A + U", "D = A - U", "E = (X1 + Y1)^2 - A - B", "X3 = C D", "Y3 = E (C - d2 Z1^2)", "Z3 = D E"},
		Parameters:     []string{"d2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("d2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("E")}}}},
	},
	{
		ID:             "g1p/twisted/inverted/doubling/mdbl-2008-bbjlp",
		Tag:            "mdbl-2008-bbjlp",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[49],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Birkner--Joye--Lange--Peters http://eprint.iacr.org/2008/013, Section 6, plus Z1=1",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "d2 = 2 d"},
		Compute:        []string{"A = X1^2", "B = Y1^2", "U = a B", "C = A + U", "D = A - U", "E = (X1 + Y1)^2 - A - B", "X3 = C D", "Y3 = E (C - d2)", "Z3 = D E"},
		Parameters:     []string{"d2"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("U")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("d2")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("E"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("E")}}}},
	},
	{
		ID:             "g1p/twisted/projective/addition/add-2008-bbjlp",
		Tag:            "add-2008-bbjlp",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[50],
		Operation:      "addition",
		Source:         "2008 Bernstein--Birkner--Joye--Lange--Peters http://eprint.iacr.org/2008/013 Section 6",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = Z1 Z2", "B = A^2", "C = X1 X2", "D = Y1 Y2", "E = d C D", "F = B-E", "G = B+E", "X3 = A F ((X1+Y1)(X2+Y2)-C-D)", "Y3 = A G (D-a C)", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("A"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/projective/addition/madd-2008-bbjlp",
		Tag:            "madd-2008-bbjlp",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[50],
		Operation:      "addition",
		Source:         "2008 Bernstein--Birkner--Joye--Lange--Peters http://eprint.iacr.org/2008/013 Section 6, plus Z2=1, plus common-subexpression elimination",
		AppliesTo:      "",
		Assume:         []string{"Z2 = 1"},
		Compute:        []string{"B = Z1^2", "C = X1 X2", "D = Y1 Y2", "E = d C D", "F = B-E", "G = B+E", "X3 = Z1 F ((X1+Y1)(X2+Y2)-C-D)", "Y3 = Z1 G (D-a C)", "Z3 = F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("G"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}}},
	},
	{
		ID:             "g1p/twisted/projective/addition/mmadd-2008-bbjlp",
		Tag:            "mmadd-2008-bbjlp",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[50],
		Operation:      "addition",
		Source:         "2008 Bernstein--Birkner--Joye--Lange--Peters http://eprint.iacr.org/2008/013 Section 6, plus Z2=1, plus Z1=1, plus standard simplification",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1", "Z2 = 1"},
		Compute:        []string{"C = X1 X2", "D = Y1 Y2", "E = d C D", "X3 = (1-E) ((X1+Y1)(X2+Y2)-C-D)", "Y3 = (1+E) (D-a C)", "Z3 = 1-E^2"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Add{X: ast.Variable("X2"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("t3"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Constant(1), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Pow{X: ast.Variable("E"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Constant(1), Y: ast.Variable("t10")}}}},
	},
	{
		ID:             "g1p/twisted/projective/doubling/dbl-2008-bbjlp",
		Tag:            "dbl-2008-bbjlp",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[50],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Birkner--Joye--Lange--Peters http://eprint.iacr.org/2008/013",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"B = (X1+Y1)^2", "C = X1^2", "D = Y1^2", "E = a C", "F = E + D", "H = Z1^2", "J = F - 2 H", "X3 = (B-C-D)J", "Y3 = F(E-D)", "Z3 = F J"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("H"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("H")}}, ast.Assignment{LHS: ast.Variable("J"), RHS: ast.Sub{X: ast.Variable("F"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t3"), Y: ast.Variable("J")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("J")}}}},
	},
	{
		ID:             "g1p/twisted/projective/doubling/mdbl-2008-bbjlp",
		Tag:            "mdbl-2008-bbjlp",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[50],
		Operation:      "doubling",
		Source:         "2008 Bernstein--Birkner--Joye--Lange--Peters http://eprint.iacr.org/2008/013, plus Z1=1, plus standard simplification",
		AppliesTo:      "",
		Assume:         []string{"Z1 = 1"},
		Compute:        []string{"B = (X1+Y1)^2", "C = X1^2", "D = Y1^2", "E = a C", "F = E + D", "X3 = (B-C-D)(F-2)", "Y3 = F(E-D)", "Z3 = F^2-2 F"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Add{X: ast.Variable("X1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("t0"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Add{X: ast.Variable("E"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("t1"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("F"), Y: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Pow{X: ast.Variable("F"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t6")}}}},
	},
	{
		ID:             "g1p/twisted/projective/tripling/tpl-2015-c",
		Tag:            "tpl-2015-c",
		Class:          "g1p",
		Shape:          shapes[11],
		Representation: representations[50],
		Operation:      "tripling",
		Source:         "2015 Chuengsatiansup",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"YY = Y1^2", "aXX = a X1^2", "Ap = YY + aXX", "B = 2(2 Z1^2 - Ap)", "xB = aXX B", "yB = YY B", "AA = Ap (YY - aXX)", "F = AA - yB", "G = AA + xB", "X3 = X1 (yB + AA) F", "Y3 = Y1 (xB - AA) G", "Z3 = Z1 F G"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("YY"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("aXX"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("Ap"), RHS: ast.Add{X: ast.Variable("YY"), Y: ast.Variable("aXX")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("Ap")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("xB"), RHS: ast.Mul{X: ast.Variable("aXX"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("yB"), RHS: ast.Mul{X: ast.Variable("YY"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("YY"), Y: ast.Variable("aXX")}}, ast.Assignment{LHS: ast.Variable("AA"), RHS: ast.Mul{X: ast.Variable("Ap"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Sub{X: ast.Variable("AA"), Y: ast.Variable("yB")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Add{X: ast.Variable("AA"), Y: ast.Variable("xB")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Add{X: ast.Variable("yB"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("t5"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("xB"), Y: ast.Variable("AA")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t8")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t9")}}}},
	},
	{
		ID:             "g1p/twistedhessian/projective/addition/add-2009-bkl",
		Tag:            "add-2009-bkl",
		Class:          "g1p",
		Shape:          shapes[12],
		Representation: representations[51],
		Operation:      "addition",
		Source:         "2009 Bernstein--Kohel--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1 Z2", "B = Z1 Z2", "C = Y1 X2", "D = Y1 Y2", "E = Z1 Y2", "F = a X1 X2", "X3 = A B - C D", "Y3 = D E - F A", "Z3 = F C - B E"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Z2")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("Y2")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("X2")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Sub{X: ast.Variable("t2"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("A")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t4"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("F"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t6"), Y: ast.Variable("t5")}}}},
	},
	{
		ID:             "g1p/twistedhessian/projective/doubling/dbl-2009-bkl",
		Tag:            "dbl-2009-bkl",
		Class:          "g1p",
		Shape:          shapes[12],
		Representation: representations[51],
		Operation:      "doubling",
		Source:         "2009 Bernstein--Kohel--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"D = X1^3", "E = Y1^3", "F = Z1^3", "G = a D", "X3 = X1 (E - F)", "Y3 = Z1 (G - E)", "Z3 = Y1 (F - G)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(3)}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t2")}}}},
	},
	{
		ID:             "g1p/twistedhessian/projective/doubling/dbl-2009-bkl-2",
		Tag:            "dbl-2009-bkl-2",
		Class:          "g1p",
		Shape:          shapes[12],
		Representation: representations[51],
		Operation:      "doubling",
		Source:         "2009 Bernstein--Kohel--Lange",
		AppliesTo:      "",
		Assume:         []string(nil),
		Compute:        []string{"A = X1^2", "B = Y1^2", "C = Z1^2", "D = A X1", "E = B Y1", "F = C Z1", "G = a D", "X3 = X1 (E - F)", "Y3 = Z1 (G - E)", "Z3 = Y1 (F - G)"},
		Parameters:     []string(nil),
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("X1")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Mul{X: ast.Variable("B"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("F"), RHS: ast.Mul{X: ast.Variable("C"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("G"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("E"), Y: ast.Variable("F")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("G"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("F"), Y: ast.Variable("G")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t2")}}}},
	},
	{
		ID:             "g1p/twistedhessian/projective/doubling/dbl-2009-bkl-3",
		Tag:            "dbl-2009-bkl-3",
		Class:          "g1p",
		Shape:          shapes[12],
		Representation: representations[51],
		Operation:      "doubling",
		Source:         "2009 Bernstein--Kohel--Lange",
		AppliesTo:      "",
		Assume:         []string{"i^2 = -1", "minustwo = -2", "2d = 2 d"},
		Compute:        []string{"iZ = i Z1", "A = (Y1 - iZ)(Y1 + iZ)", "B = Y1 Z1", "C = (A - B)(Y1 + Z1)", "D = (A + B)(Z1 - Y1)", "E = 3 C - 2d X1 B", "X3 = minustwo X1 D", "Y3 = (D - E)Z1", "Z3 = (D + E)Y1"},
		Parameters:     []string{"i", "minustwo", "2d"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("iZ"), RHS: ast.Mul{X: ast.Variable("i"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Sub{X: ast.Variable("Y1"), Y: ast.Variable("iZ")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("iZ")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Mul{X: ast.Variable("t0"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("t2"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("Z1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("t4"), Y: ast.Variable("t5")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Mul{X: ast.Variable("2d"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t8"), Y: ast.Variable("t7")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("minustwo"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t10"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t11"), Y: ast.Variable("Y1")}}}},
	},
	{
		ID:             "g1p/twistedhessian/projective/doubling/dbl-2012-c",
		Tag:            "dbl-2012-c",
		Class:          "g1p",
		Shape:          shapes[12],
		Representation: representations[51],
		Operation:      "doubling",
		Source:         "2012 Chuengsatiansup",
		AppliesTo:      "",
		Assume:         []string{"minustwo = -2"},
		Compute:        []string{"P = Y1 Z1", "2P = 2 P", "S = Y1 + Z1", "A = S^2 - P", "C = (A - 2P) S", "D = A (Z1 - Y1)", "E = 3 C - d X1 2P", "X3 = minustwo X1 D", "Y3 = (D - E) Z1", "Z3 = (D + E) Y1"},
		Parameters:     []string{"minustwo"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("P"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("2P"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("S"), RHS: ast.Add{X: ast.Variable("Y1"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("S"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Sub{X: ast.Variable("t0"), Y: ast.Variable("P")}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Sub{X: ast.Variable("A"), Y: ast.Variable("2P")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Mul{X: ast.Variable("t1"), Y: ast.Variable("S")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Sub{X: ast.Variable("Z1"), Y: ast.Variable("Y1")}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Mul{X: ast.Variable("A"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("2P")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Mul{X: ast.Variable("d"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Mul{X: ast.Constant(3), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Sub{X: ast.Variable("t5"), Y: ast.Variable("t4")}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("minustwo"), Y: ast.Variable("t6")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Sub{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Mul{X: ast.Variable("t7"), Y: ast.Variable("Z1")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("D"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("Y1")}}}},
	},
	{
		ID:             "g1p/twistedhessian/projective/tripling/tpl-2009-bkl",
		Tag:            "tpl-2009-bkl",
		Class:          "g1p",
		Shape:          shapes[12],
		Representation: representations[51],
		Operation:      "tripling",
		Source:         "2009 Bernstein--Kohel--Lange",
		AppliesTo:      "",
		Assume:         []string{"d recipd = 1"},
		Compute:        []string{"U = a X1 X1^2", "V = Y1 Y1^2", "W = Z1 Z1^2", "A = (U-V)^2", "B = (U-W)^2", "C = (V-W)^2", "D = A+C", "E = A+B", "X3 = recipd(U+V+W)(B+D)", "Y3 = 2 U C-V(C-E)", "Z3 = 2 V B-U(B-D)"},
		Parameters:     []string{"recipd"},
		Program:        &ast.Program{Assignments: []ast.Assignment{ast.Assignment{LHS: ast.Variable("t0"), RHS: ast.Pow{X: ast.Variable("X1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t1"), RHS: ast.Mul{X: ast.Variable("X1"), Y: ast.Variable("t0")}}, ast.Assignment{LHS: ast.Variable("U"), RHS: ast.Mul{X: ast.Variable("a"), Y: ast.Variable("t1")}}, ast.Assignment{LHS: ast.Variable("t2"), RHS: ast.Pow{X: ast.Variable("Y1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("V"), RHS: ast.Mul{X: ast.Variable("Y1"), Y: ast.Variable("t2")}}, ast.Assignment{LHS: ast.Variable("t3"), RHS: ast.Pow{X: ast.Variable("Z1"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("W"), RHS: ast.Mul{X: ast.Variable("Z1"), Y: ast.Variable("t3")}}, ast.Assignment{LHS: ast.Variable("t4"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("A"), RHS: ast.Pow{X: ast.Variable("t4"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t5"), RHS: ast.Sub{X: ast.Variable("U"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("B"), RHS: ast.Pow{X: ast.Variable("t5"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("t6"), RHS: ast.Sub{X: ast.Variable("V"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("C"), RHS: ast.Pow{X: ast.Variable("t6"), N: ast.Constant(2)}}, ast.Assignment{LHS: ast.Variable("D"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("E"), RHS: ast.Add{X: ast.Variable("A"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t7"), RHS: ast.Add{X: ast.Variable("U"), Y: ast.Variable("V")}}, ast.Assignment{LHS: ast.Variable("t8"), RHS: ast.Add{X: ast.Variable("t7"), Y: ast.Variable("W")}}, ast.Assignment{LHS: ast.Variable("t9"), RHS: ast.Add{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t10"), RHS: ast.Mul{X: ast.Variable("t8"), Y: ast.Variable("t9")}}, ast.Assignment{LHS: ast.Variable("X3"), RHS: ast.Mul{X: ast.Variable("recipd"), Y: ast.Variable("t10")}}, ast.Assignment{LHS: ast.Variable("t11"), RHS: ast.Sub{X: ast.Variable("C"), Y: ast.Variable("E")}}, ast.Assignment{LHS: ast.Variable("t12"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("t11")}}, ast.Assignment{LHS: ast.Variable("t13"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("C")}}, ast.Assignment{LHS: ast.Variable("t14"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t13")}}, ast.Assignment{LHS: ast.Variable("Y3"), RHS: ast.Sub{X: ast.Variable("t14"), Y: ast.Variable("t12")}}, ast.Assignment{LHS: ast.Variable("t15"), RHS: ast.Sub{X: ast.Variable("B"), Y: ast.Variable("D")}}, ast.Assignment{LHS: ast.Variable("t16"), RHS: ast.Mul{X: ast.Variable("U"), Y: ast.Variable("t15")}}, ast.Assignment{LHS: ast.Variable("t17"), RHS: ast.Mul{X: ast.Variable("V"), Y: ast.Variable("B")}}, ast.Assignment{LHS: ast.Variable("t18"), RHS: ast.Mul{X: ast.Constant(2), Y: ast.Variable("t17")}}, ast.Assignment{LHS: ast.Variable("Z3"), RHS: ast.Sub{X: ast.Variable("t18"), Y: ast.Variable("t16")}}}},
	},
}
